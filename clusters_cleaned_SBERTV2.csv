,Unnamed: 0,x,y,severity,description,label,normalized_body,normalized_body_tokens
0,0,33.544643,-16.528986,2.1,"In engineSetMode of BaseBlockCipher.java, there is a possible incorrect cryptographic algorithm chosen due to an incomplete comparison. This could lead to local information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-10Android ID: A-148517383",0,enginesetmode baseblockcipherjava possible incorrect cryptographic algorithm chosen due incomplete comparison could lead local information disclosure additional execution privileges needed user interaction needed exploitationproduct androidversions androidandroid id,"['enginesetmode', 'baseblockcipherjava', 'possible', 'incorrect', 'cryptographic', 'algorithm', 'chosen', 'due', 'incomplete', 'comparison', 'could', 'lead', 'local', 'information', 'disclosure', 'additional', 'execution', 'privileges', 'needed', 'user', 'interaction', 'needed', 'exploitationproduct', 'androidversions', 'androidandroid', 'id']"
1,1,33.116245,-2.6582296,6.5,"A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.",1,version code base contains usages objectinputstream without type checks allows attacker inject arbitrarily serialized java objects would get deserialized privileged context potentially lead remote code execution,"['version', 'code', 'base', 'contains', 'usages', 'objectinputstream', 'without', 'type', 'checks', 'allows', 'attacker', 'inject', 'arbitrarily', 'serialized', 'java', 'objects', 'would', 'get', 'deserialized', 'privileged', 'context', 'potentially', 'lead', 'remote', 'code', 'execution']"
2,2,12.650582,21.060308,5.0,"A flaw was found in FasterXML Jackson Databind, where it did not have entity expansion secured properly. This flaw allows vulnerability to XML external entity (XXE) attacks. The highest threat from this vulnerability is data integrity.",2,fasterxml jackson databind entity expansion secured properly allows vulnerability xml external entity xxe attacks highest threat vulnerability data integrity,"['fasterxml', 'jackson', 'databind', 'entity', 'expansion', 'secured', 'properly', 'allows', 'vulnerability', 'xml', 'external', 'entity', 'xxe', 'attacks', 'highest', 'threat', 'vulnerability', 'data', 'integrity']"
3,3,15.401218,23.488605,5.0,jackson-databind before 2.13.0 allows a Java StackOverflow exception and denial of service via a large depth of nested objects.,2,jacksondatabind allows java stackoverflow exception denial service via large depth nested objects,"['jacksondatabind', 'allows', 'java', 'stackoverflow', 'exception', 'denial', 'service', 'via', 'large', 'depth', 'nested', 'objects']"
4,4,13.364094,22.588146,7.5,"In FasterXML jackson-databind before 2.14.0-rc1, resource exhaustion can occur because of a lack of a check in primitive value deserializers to avoid deep wrapper array nesting, when the UNWRAP_SINGLE_VALUE_ARRAYS feature is enabled. Additional fix version in 2.13.4.1 and 2.12.17.1",2,fasterxml jacksondatabind rc resource exhaustion occur lack check primitive value deserializers avoid deep wrapper array nesting unwrapsinglevaluearrays feature enabled additional fix version,"['fasterxml', 'jacksondatabind', 'rc', 'resource', 'exhaustion', 'occur', 'lack', 'check', 'primitive', 'value', 'deserializers', 'avoid', 'deep', 'wrapper', 'array', 'nesting', 'unwrapsinglevaluearrays', 'feature', 'enabled', 'additional', 'fix', 'version']"
5,5,13.420559,22.355524,7.5,"In FasterXML jackson-databind before 2.13.4, resource exhaustion can occur because of a lack of a check in BeanDeserializer._deserializeFromArray to prevent use of deeply nested arrays. An application is vulnerable only with certain customized choices for deserialization.",2,fasterxml jacksondatabind resource exhaustion occur lack check beandeserializerdeserializefromarray prevent use deeply nested arrays application certain customized choices deserialization,"['fasterxml', 'jacksondatabind', 'resource', 'exhaustion', 'occur', 'lack', 'check', 'beandeserializerdeserializefromarray', 'prevent', 'use', 'deeply', 'nested', 'arrays', 'application', 'certain', 'customized', 'choices', 'deserialization']"
6,6,15.147787,23.238285,7.5,jackson-databind 2.10.x through 2.12.x before 2.12.6 and 2.13.x before 2.13.1 allows attackers to cause a denial of service (2 GB transient heap usage per read) in uncommon situations involving JsonNode JDK serialization.,2,jacksondatabind allows attackers cause denial service gb transient heap usage per read uncommon situations involving jsonnode jdk serialization,"['jacksondatabind', 'allows', 'attackers', 'cause', 'denial', 'service', 'gb', 'transient', 'heap', 'usage', 'per', 'read', 'uncommon', 'situations', 'involving', 'jsonnode', 'jdk', 'serialization']"
7,7,-5.445634,-1.6145595,5.0,"A flaw was found in all resteasy 3.x.x versions prior to 3.12.0.Final and all resteasy 4.x.x versions prior to 4.6.0.Final, where an improper input validation results in returning an illegal header that integrates into the server's response. This flaw may result in an injection, which leads to unexpected behavior when the HTTP response is constructed.",3,resteasy xx versions prior final resteasy xx versions prior final improper input validation results returning illegal header integrates servers response may result injection leads unexpected behavior http response constructed,"['resteasy', 'xx', 'versions', 'prior', 'final', 'resteasy', 'xx', 'versions', 'prior', 'final', 'improper', 'input', 'validation', 'results', 'returning', 'illegal', 'header', 'integrates', 'servers', 'response', 'may', 'result', 'injection', 'leads', 'unexpected', 'behavior', 'http', 'response', 'constructed']"
8,8,-4.425417,-0.92266846,5.0,A flaw was found in RESTEasy in all versions of RESTEasy up to 4.6.0.Final. The endpoint class and method names are returned as part of the exception response when RESTEasy cannot convert one of the request URI path or query values to the matching JAX-RS resource method's parameter value. The highest threat from this vulnerability is to data confidentiality.,3,resteasy versions resteasy final endpoint class method names returned part exception response resteasy convert one request uri path query values matching jaxrs resource methods parameter value highest threat vulnerability data confidentiality,"['resteasy', 'versions', 'resteasy', 'final', 'endpoint', 'class', 'method', 'names', 'returned', 'part', 'exception', 'response', 'resteasy', 'convert', 'one', 'request', 'uri', 'path', 'query', 'values', 'matching', 'jaxrs', 'resource', 'methods', 'parameter', 'value', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality']"
9,9,25.262789,39.009758,5.8,"In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like ""//../foo"", or ""\\..\foo"", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus ""limited"" path traversal), if the calling code would use the result to construct a path value.",4,apache commons io invoking method filenameutilsnormalize improper input string like foo foo result would value thus possibly providing access files parent directory thus limited path traversal calling code would use result construct path value,"['apache', 'commons', 'io', 'invoking', 'method', 'filenameutilsnormalize', 'improper', 'input', 'string', 'like', 'foo', 'foo', 'result', 'would', 'value', 'thus', 'possibly', 'providing', 'access', 'files', 'parent', 'directory', 'thus', 'limited', 'path', 'traversal', 'calling', 'code', 'would', 'use', 'result', 'construct', 'path', 'value']"
10,10,39.64437,-3.4077578,5.0,"A vulnerability was found in Keycloak before 11.0.1 where DoS attack is possible by sending twenty requests simultaneously to the specified keycloak server, all with a Content-Length header value that exceeds the actual byte count of the request body.",5,vulnerability dos attack possible sending twenty requests simultaneously specified server contentlength header value exceeds actual byte count request body,"['vulnerability', 'dos', 'attack', 'possible', 'sending', 'twenty', 'requests', 'simultaneously', 'specified', 'server', 'contentlength', 'header', 'value', 'exceeds', 'actual', 'byte', 'count', 'request', 'body']"
11,11,32.935104,-3.0994284,6.5,"A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.",1,version code base contains usages objectinputstream without type checks allows attacker inject arbitrarily serialized java objects would get deserialized privileged context potentially lead remote code execution,"['version', 'code', 'base', 'contains', 'usages', 'objectinputstream', 'without', 'type', 'checks', 'allows', 'attacker', 'inject', 'arbitrarily', 'serialized', 'java', 'objects', 'would', 'get', 'deserialized', 'privileged', 'context', 'potentially', 'lead', 'remote', 'code', 'execution']"
12,12,44.95449,-2.6371028,4.0,"Due to improper authorization, Red Hat Single Sign-On is vulnerable to users performing actions that they should not be allowed to perform. It was possible to add users to the master realm even though no respective permission was granted.",5,due improper authorization red hat single signon users performing actions allowed perform possible add users master realm even though respective permission granted,"['due', 'improper', 'authorization', 'red', 'hat', 'single', 'signon', 'users', 'performing', 'actions', 'allowed', 'perform', 'possible', 'add', 'users', 'master', 'realm', 'even', 'though', 'respective', 'permission', 'granted']"
13,13,38.020103,-32.625168,5.0,Apache HttpClient versions prior to version 4.5.13 and 5.0.3 can misinterpret malformed authority component in request URIs passed to the library as java.net.URI object and pick the wrong target host for request execution.,6,apache httpclient versions prior version misinterpret malformed authority component request uris passed library javaneturi object pick wrong target host request execution,"['apache', 'httpclient', 'versions', 'prior', 'version', 'misinterpret', 'malformed', 'authority', 'component', 'request', 'uris', 'passed', 'library', 'javaneturi', 'object', 'pick', 'wrong', 'target', 'host', 'request', 'execution']"
14,14,31.669634,6.4301157,10.0,"Use of Java's default temporary directory for file creation in `FileBackedOutputStream` in Google Guava versions 1.0 to 31.1 on Unix systems and Android Ice Cream Sandwich allows other users and apps on the machine with access to the default Java temporary directory to be able to access the files created by the class. Even though the security vulnerability is fixed in version 32.0.0, we recommend using version 32.0.1 as version 32.0.0 breaks some functionality under Windows.",7,use javas default temporary directory file creation filebackedoutputstream google guava versions unix systems android ice cream sandwich allows users apps machine access default java temporary directory able access files created class even though security vulnerability fixed version recommend using version version breaks functionality windows,"['use', 'javas', 'default', 'temporary', 'directory', 'file', 'creation', 'filebackedoutputstream', 'google', 'guava', 'versions', 'unix', 'systems', 'android', 'ice', 'cream', 'sandwich', 'allows', 'users', 'apps', 'machine', 'access', 'default', 'java', 'temporary', 'directory', 'able', 'access', 'files', 'created', 'class', 'even', 'though', 'security', 'vulnerability', 'fixed', 'version', 'recommend', 'using', 'version', 'version', 'breaks', 'functionality', 'windows']"
15,15,31.82305,6.3691773,2.1,"A temp directory creation vulnerability exists in all versions of Guava, allowing an attacker with access to the machine to potentially access data in a temporary directory created by the Guava API com.google.common.io.Files.createTempDir(). By default, on unix-like systems, the created directory is world-readable (readable by an attacker with access to the system). The method in question has been marked @Deprecated in versions 30.0 and later and should not be used. For Android developers, we recommend choosing a temporary directory API provided by Android, such as context.getCacheDir(). For other Java developers, we recommend migrating to the Java 7 API java.nio.file.Files.createTempDirectory() which explicitly configures permissions of 700, or configuring the Java runtime's java.io.tmpdir system property to point to a location whose permissions are appropriately configured.",7,temp directory creation vulnerability exists versions guava allowing attacker access machine potentially access data temporary directory created guava api comgooglecommoniofilescreatetempdir default unixlike systems created directory worldreadable readable attacker access system method question marked deprecated versions later used android developers recommend choosing temporary directory api provided android contextgetcachedir java developers recommend migrating java api javaniofilefilescreatetempdirectory explicitly configures permissions configuring java runtimes javaiotmpdir system property point location whose permissions appropriately configured,"['temp', 'directory', 'creation', 'vulnerability', 'exists', 'versions', 'guava', 'allowing', 'attacker', 'access', 'machine', 'potentially', 'access', 'data', 'temporary', 'directory', 'created', 'guava', 'api', 'comgooglecommoniofilescreatetempdir', 'default', 'unixlike', 'systems', 'created', 'directory', 'worldreadable', 'readable', 'attacker', 'access', 'system', 'method', 'question', 'marked', 'deprecated', 'versions', 'later', 'used', 'android', 'developers', 'recommend', 'choosing', 'temporary', 'directory', 'api', 'provided', 'android', 'contextgetcachedir', 'java', 'developers', 'recommend', 'migrating', 'java', 'api', 'javaniofilefilescreatetempdirectory', 'explicitly', 'configures', 'permissions', 'configuring', 'java', 'runtimes', 'javaiotmpdir', 'system', 'property', 'point', 'location', 'whose', 'permissions', 'appropriately', 'configured']"
16,16,-76.99658,6.2719874,7.5,"The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",8,alias feature snakeyaml allows entity expansion load operation related issue cve,"['alias', 'feature', 'snakeyaml', 'allows', 'entity', 'expansion', 'load', 'operation', 'related', 'issue', 'cve']"
17,17,-49.265785,6.6286454,9.8,SnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.,9,snakeyamls constructor class restrict types instantiated deserialization deserializing yaml content provided attacker lead remote code execution recommend using snakeyamls safeconsturctor parsing content restrict deserialization recommend upgrading version beyond,"['snakeyamls', 'constructor', 'class', 'restrict', 'types', 'instantiated', 'deserialization', 'deserializing', 'yaml', 'content', 'provided', 'attacker', 'lead', 'remote', 'code', 'execution', 'recommend', 'using', 'snakeyamls', 'safeconsturctor', 'parsing', 'content', 'restrict', 'deserialization', 'recommend', 'upgrading', 'version', 'beyond']"
18,18,-69.81176,4.852778,7.5,The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.,10,package orgyamlsnakeyaml denial service dos due missing nested depth limitation collections,"['package', 'orgyamlsnakeyaml', 'denial', 'service', 'dos', 'due', 'missing', 'nested', 'depth', 'limitation', 'collections']"
19,19,-59.912212,5.993711,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
20,20,-60.212204,4.9907737,5.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
21,21,-58.72718,5.7138605,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
22,22,-64.63795,12.878338,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",12,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
23,23,-58.8293,18.5271,6.5,"Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",13,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stack overflow effect may support denial service attack,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stack', 'overflow', 'effect', 'may', 'support', 'denial', 'service', 'attack']"
24,24,39.603058,-0.9113973,3.5,"A flaw was found in Keycloak before version 12.0.0, where it is possible to add unsafe schemes for the redirect_uri parameter. This flaw allows an attacker to perform a Cross-site scripting attack.",5,version possible add unsafe schemes redirecturi parameter allows attacker perform crosssite scripting attack,"['version', 'possible', 'add', 'unsafe', 'schemes', 'redirecturi', 'parameter', 'allows', 'attacker', 'perform', 'crosssite', 'scripting', 'attack']"
25,25,49.727512,-11.057425,6.8,keycloak-server-spi-private - Session Fixation,5,keycloakserverspiprivate session fixation,"['keycloakserverspiprivate', 'session', 'fixation']"
26,26,50.53051,-3.1716495,6.5,A flaw was found in Keycloak. This flaw allows impersonation and lockout due to the email trust not being handled correctly in Keycloak. An attacker can shadow other users with the same email and lockout or impersonate them.,14,allows impersonation lockout due email trust handled correctly attacker shadow users email lockout impersonate,"['allows', 'impersonation', 'lockout', 'due', 'email', 'trust', 'handled', 'correctly', 'attacker', 'shadow', 'users', 'email', 'lockout', 'impersonate']"
27,27,12.208944,-22.10097,5.0,"All versions of Apache Santuario - XML Security for Java prior to 2.2.3 and 2.1.7 are vulnerable to an issue where the ""secureValidation"" property is not passed correctly when creating a KeyInfo from a KeyInfoReference element. This allows an attacker to abuse an XPath Transform to extract any local .xml files in a RetrievalMethod element.",15,versions apache santuario xml security java prior issue securevalidation property passed correctly creating keyinfo keyinforeference element allows attacker abuse xpath transform extract local xml files retrievalmethod element,"['versions', 'apache', 'santuario', 'xml', 'security', 'java', 'prior', 'issue', 'securevalidation', 'property', 'passed', 'correctly', 'creating', 'keyinfo', 'keyinforeference', 'element', 'allows', 'attacker', 'abuse', 'xpath', 'transform', 'extract', 'local', 'xml', 'files', 'retrievalmethod', 'element']"
28,28,-1.099454,-3.7434995,5.5,"In RESTEasy the insecure File.createTempFile() is used in the DataSourceProvider, FileProvider and Mime4JWorkaround classes which creates temp files with insecure permissions that could be read by a local user.",16,resteasy insecure filecreatetempfile used datasourceprovider fileprovider mimejworkaround classes creates temp files insecure permissions could read local user,"['resteasy', 'insecure', 'filecreatetempfile', 'used', 'datasourceprovider', 'fileprovider', 'mimejworkaround', 'classes', 'creates', 'temp', 'files', 'insecure', 'permissions', 'could', 'read', 'local', 'user']"
29,29,-4.426583,-1.5561111,5.0,A flaw was found in RESTEasy client in all versions of RESTEasy up to 4.5.6.Final. It may allow client users to obtain the server's potentially sensitive information when the server got WebApplicationException from the RESTEasy client call. The highest threat from this vulnerability is to data confidentiality.,3,resteasy client versions resteasy final may allow client users obtain servers potentially sensitive information server got webapplicationexception resteasy client call highest threat vulnerability data confidentiality,"['resteasy', 'client', 'versions', 'resteasy', 'final', 'may', 'allow', 'client', 'users', 'obtain', 'servers', 'potentially', 'sensitive', 'information', 'server', 'got', 'webapplicationexception', 'resteasy', 'client', 'call', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality']"
30,30,-6.224475,12.638446,7.5,"The OWASP Java HTML Sanitizer before 20211018.1 does not properly enforce policies associated with the SELECT, STYLE, and OPTION elements.",17,owasp java html sanitizer properly enforce policies associated select style option elements,"['owasp', 'java', 'html', 'sanitizer', 'properly', 'enforce', 'policies', 'associated', 'select', 'style', 'option', 'elements']"
31,31,33.636635,-17.519423,5.0,"In verifyHostName of OkHostnameVerifier.java, there is a possible way to accept a certificate for the wrong domain due to improperly used crypto. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-8.1 Android-9 Android-10 Android-11Android ID: A-171980069",0,verifyhostname okhostnameverifierjava possible way accept certificate wrong domain due improperly used crypto could lead remote information disclosure additional execution privileges needed user interaction needed exploitationproduct androidversions android android android androidandroid id,"['verifyhostname', 'okhostnameverifierjava', 'possible', 'way', 'accept', 'certificate', 'wrong', 'domain', 'due', 'improperly', 'used', 'crypto', 'could', 'lead', 'remote', 'information', 'disclosure', 'additional', 'execution', 'privileges', 'needed', 'user', 'interaction', 'needed', 'exploitationproduct', 'androidversions', 'android', 'android', 'android', 'androidandroid', 'id']"
32,32,-76.99658,6.2719874,7.5,"The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",8,alias feature snakeyaml allows entity expansion load operation related issue cve,"['alias', 'feature', 'snakeyaml', 'allows', 'entity', 'expansion', 'load', 'operation', 'related', 'issue', 'cve']"
33,33,-48.70029,6.2550373,9.8,SnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.,9,snakeyamls constructor class restrict types instantiated deserialization deserializing yaml content provided attacker lead remote code execution recommend using snakeyamls safeconsturctor parsing content restrict deserialization recommend upgrading version beyond,"['snakeyamls', 'constructor', 'class', 'restrict', 'types', 'instantiated', 'deserialization', 'deserializing', 'yaml', 'content', 'provided', 'attacker', 'lead', 'remote', 'code', 'execution', 'recommend', 'using', 'snakeyamls', 'safeconsturctor', 'parsing', 'content', 'restrict', 'deserialization', 'recommend', 'upgrading', 'version', 'beyond']"
34,34,-69.304665,5.1135535,7.5,The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.,10,package orgyamlsnakeyaml denial service dos due missing nested depth limitation collections,"['package', 'orgyamlsnakeyaml', 'denial', 'service', 'dos', 'due', 'missing', 'nested', 'depth', 'limitation', 'collections']"
35,35,-59.748924,3.902721,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
36,36,-58.00588,6.647097,5.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
37,37,-59.065945,4.7953706,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
38,38,-64.27133,12.430913,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",12,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
39,39,-59.097515,18.988695,6.5,"Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",13,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stack overflow effect may support denial service attack,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stack', 'overflow', 'effect', 'may', 'support', 'denial', 'service', 'attack']"
40,40,66.2015,20.621958,5.0,The file name encoding algorithm used internally in Apache Commons Compress 1.15 to 1.18 can get into an infinite loop when faced with specially crafted inputs. This can lead to a denial of service attack if an attacker can choose the file names inside of an archive created by Compress.,18,file name encoding algorithm used internally apache commons get infinite loop faced specially crafted inputs lead denial service attack attacker choose file names inside archive created,"['file', 'name', 'encoding', 'algorithm', 'used', 'internally', 'apache', 'commons', 'get', 'infinite', 'loop', 'faced', 'specially', 'crafted', 'inputs', 'lead', 'denial', 'service', 'attack', 'attacker', 'choose', 'file', 'names', 'inside', 'archive', 'created']"
41,41,75.43851,14.805834,5.0,"When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",19,specially crafted archive construction list codecs decompress entry result infinite loop could used mount denial service attack services use sevenz package,"['specially', 'crafted', 'archive', 'construction', 'list', 'codecs', 'decompress', 'entry', 'result', 'infinite', 'loop', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'sevenz', 'package']"
42,42,72.60305,15.483671,5.0,"When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",19,specially crafted archive made allocate large amounts memory finally leads memory error even small inputs could used mount denial service attack services use sevenz package,"['specially', 'crafted', 'archive', 'made', 'allocate', 'large', 'amounts', 'memory', 'finally', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'sevenz', 'package']"
43,43,69.36948,17.51304,5.0,"When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",20,specially crafted tar archive made allocate large amounts memory finally leads memory error even small inputs could used mount denial service attack services use tar package,"['specially', 'crafted', 'tar', 'archive', 'made', 'allocate', 'large', 'amounts', 'memory', 'finally', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'tar', 'package']"
44,44,66.69526,16.041637,5.0,"When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",20,specially crafted zip archive made allocate large amounts memory finally leads memory error even small inputs could used mount denial service attack services use zip package,"['specially', 'crafted', 'zip', 'archive', 'made', 'allocate', 'large', 'amounts', 'memory', 'finally', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'zip', 'package']"
45,45,14.202956,21.798183,5.0,"This affects the package com.fasterxml.jackson.dataformat:jackson-dataformat-cbor from 0 and before 2.11.4, from 2.12.0-rc1 and before 2.12.1. Unchecked allocation of byte buffer can cause a java.lang.OutOfMemoryError exception.",2,affects package comfasterxmljacksondataformatjacksondataformatcbor rc unchecked allocation byte buffer cause javalangoutofmemoryerror exception,"['affects', 'package', 'comfasterxmljacksondataformatjacksondataformatcbor', 'rc', 'unchecked', 'allocation', 'byte', 'buffer', 'cause', 'javalangoutofmemoryerror', 'exception']"
46,46,42.203762,-2.7908742,2.1,"A vulnerability was found in keycloak in the way that the OIDC logout endpoint does not have CSRF protection. Versions shipped with Red Hat Fuse 7, Red Hat Single Sign-on 7, and Red Hat Openshift Application Runtimes are believed to be vulnerable.",5,vulnerability way oidc logout endpoint csrf protection versions shipped red hat fuse red hat single signon red hat openshift application runtimes believed,"['vulnerability', 'way', 'oidc', 'logout', 'endpoint', 'csrf', 'protection', 'versions', 'shipped', 'red', 'hat', 'fuse', 'red', 'hat', 'single', 'signon', 'red', 'hat', 'openshift', 'application', 'runtimes', 'believed']"
47,47,39.284855,-2.4205604,5.0,"A flaw was found in Keycloak before 13.0.0, where it is possible to force the server to call out an unverified URL using the OIDC parameter request_uri. This flaw allows an attacker to use this parameter to execute a Server-side request forgery (SSRF) attack.",5,possible force server call unverified url using oidc parameter requesturi allows attacker use parameter execute serverside request forgery ssrf attack,"['possible', 'force', 'server', 'call', 'unverified', 'url', 'using', 'oidc', 'parameter', 'requesturi', 'allows', 'attacker', 'use', 'parameter', 'execute', 'serverside', 'request', 'forgery', 'ssrf', 'attack']"
48,48,39.603306,-0.911433,3.5,"A flaw was found in Keycloak before version 12.0.0, where it is possible to add unsafe schemes for the redirect_uri parameter. This flaw allows an attacker to perform a Cross-site scripting attack.",5,version possible add unsafe schemes redirecturi parameter allows attacker perform crosssite scripting attack,"['version', 'possible', 'add', 'unsafe', 'schemes', 'redirecturi', 'parameter', 'allows', 'attacker', 'perform', 'crosssite', 'scripting', 'attack']"
49,49,35.747253,0.7558299,5.0,"A vulnerability was found in keycloak, where path traversal using URL-encoded path segments in the request is possible because the resources endpoint applies a transformation of the url path to the file path. Only few specific folder hierarchies can be exposed by this flaw",5,vulnerability path traversal using urlencoded path segments request possible resources endpoint applies transformation url path file path specific folder hierarchies exposed,"['vulnerability', 'path', 'traversal', 'using', 'urlencoded', 'path', 'segments', 'request', 'possible', 'resources', 'endpoint', 'applies', 'transformation', 'url', 'path', 'file', 'path', 'specific', 'folder', 'hierarchies', 'exposed']"
50,50,47.140366,-5.225824,5.5,"It was found that Keycloak before version 12.0.0 would permit a user with only view-profile role to manage the resources in the new account console, allowing access and modification of data the user was not intended to have.",5,version would permit user viewprofile role manage resources new account console allowing access modification data user intended,"['version', 'would', 'permit', 'user', 'viewprofile', 'role', 'manage', 'resources', 'new', 'account', 'console', 'allowing', 'access', 'modification', 'data', 'user', 'intended']"
51,51,50.516056,-3.3745654,4.0,A flaw was found in Keycloak 7.0.1. A logged in user can do an account email enumeration attack.,14,logged user account email enumeration attack,"['logged', 'user', 'account', 'email', 'enumeration', 'attack']"
52,52,46.3794,-5.4185762,4.9,A flaw was found in Keycloak before version 12.0.0 where it is possible to update the user's metadata attributes using Account REST API. This flaw allows an attacker to change its own NameID attribute to impersonate the admin user for any particular application.,5,version possible update users metadata attributes using account rest api allows attacker change nameid attribute impersonate admin user particular application,"['version', 'possible', 'update', 'users', 'metadata', 'attributes', 'using', 'account', 'rest', 'api', 'allows', 'attacker', 'change', 'nameid', 'attribute', 'impersonate', 'admin', 'user', 'particular', 'application']"
53,53,43.728184,-7.1077,4.3,A flaw was found in keycloak in versions prior to 13.0.0. The client registration endpoint allows fetching information about PUBLIC clients (like client secret) without authentication which could be an issue if the same PUBLIC client changed to CONFIDENTIAL later. The highest threat from this vulnerability is to data confidentiality.,5,versions prior client registration endpoint allows fetching information public clients like client secret without authentication could issue public client changed confidential later highest threat vulnerability data confidentiality,"['versions', 'prior', 'client', 'registration', 'endpoint', 'allows', 'fetching', 'information', 'public', 'clients', 'like', 'client', 'secret', 'without', 'authentication', 'could', 'issue', 'public', 'client', 'changed', 'confidential', 'later', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality']"
54,54,43.6818,-8.247101,5.4,A flaw was found in keycloak affecting versions 11.0.3 and 12.0.0. An expired certificate would be accepted by the direct-grant authenticator because of missing time stamp validations. The highest threat from this vulnerability is to data confidentiality and integrity.,5,affecting versions expired certificate would accepted directgrant authenticator missing time stamp validations highest threat vulnerability data confidentiality integrity,"['affecting', 'versions', 'expired', 'certificate', 'would', 'accepted', 'directgrant', 'authenticator', 'missing', 'time', 'stamp', 'validations', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality', 'integrity']"
55,55,35.137882,0.8667586,4.6,"A flaw was found in keycloak. Directories can be created prior to the Java process creating them in the temporary directory, but with wider user permissions, allowing the attacker to have access to the contents that keycloak stores in this directory. The highest threat from this vulnerability is to data confidentiality and integrity.",5,directories created prior java process creating temporary directory wider user permissions allowing attacker access contents stores directory highest threat vulnerability data confidentiality integrity,"['directories', 'created', 'prior', 'java', 'process', 'creating', 'temporary', 'directory', 'wider', 'user', 'permissions', 'allowing', 'attacker', 'access', 'contents', 'stores', 'directory', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality', 'integrity']"
56,56,45.34416,-7.09734,4.6,"A flaw was found in Keycloak 12.0.0 where re-authentication does not occur while updating the password. This flaw allows an attacker to take over an account if they can obtain temporary, physical access to a user’s browser. The highest threat from this vulnerability is to confidentiality, integrity, as well as system availability.",5,reauthentication occur updating password allows attacker take account obtain temporary physical access users browser highest threat vulnerability confidentiality integrity well system availability,"['reauthentication', 'occur', 'updating', 'password', 'allows', 'attacker', 'take', 'account', 'obtain', 'temporary', 'physical', 'access', 'users', 'browser', 'highest', 'threat', 'vulnerability', 'confidentiality', 'integrity', 'well', 'system', 'availability']"
57,57,45.170486,-3.9396014,5.0,A flaw was found in keycloak as shipped in Red Hat Single Sign-On 7.4 where IDN homograph attacks are possible. A malicious user can register himself with a name already registered and trick admin to grant him extra privileges.,5,shipped red hat single signon idn homograph attacks possible malicious user register name already registered trick admin grant extra privileges,"['shipped', 'red', 'hat', 'single', 'signon', 'idn', 'homograph', 'attacks', 'possible', 'malicious', 'user', 'register', 'name', 'already', 'registered', 'trick', 'admin', 'grant', 'extra', 'privileges']"
58,58,47.777634,-10.568388,3.3,A flaw was found in keycloak where keycloak may fail to logout user session if the logout request comes from external SAML identity provider and Principal Type is set to Attribute [Name].,5,may fail logout user session logout request comes external saml identity provider principal type set attribute name,"['may', 'fail', 'logout', 'user', 'session', 'logout', 'request', 'comes', 'external', 'saml', 'identity', 'provider', 'principal', 'type', 'set', 'attribute', 'name']"
59,59,45.516373,-7.6456003,7.5,A flaw was found in keycloak where a brute force attack is possible even when the permanent lockout feature is enabled. This is due to a wrong error message displayed when wrong credentials are entered. The highest threat from this vulnerability is to confidentiality.,5,brute force attack possible even permanent lockout feature enabled due wrong error message displayed wrong credentials entered highest threat vulnerability confidentiality,"['brute', 'force', 'attack', 'possible', 'even', 'permanent', 'lockout', 'feature', 'enabled', 'due', 'wrong', 'error', 'message', 'displayed', 'wrong', 'credentials', 'entered', 'highest', 'threat', 'vulnerability', 'confidentiality']"
60,60,44.330776,-5.5346565,7.5,A flaw was found in Keycloak. This vulnerability allows anyone to register a new security device or key when there is not a device already registered for any user by using the WebAuthn password-less login flow.,5,vulnerability allows anyone register new security device key device already registered user using webauthn passwordless login flow,"['vulnerability', 'allows', 'anyone', 'register', 'new', 'security', 'device', 'key', 'device', 'already', 'registered', 'user', 'using', 'webauthn', 'passwordless', 'login', 'flow']"
61,61,46.50848,-8.242778,6.8,"A flaw was found in keycloak, where the default ECP binding flow allows other authentication flows to be bypassed. By exploiting this behavior, an attacker can bypass the MFA authentication by sending a SOAP request with an AuthnRequest and Authorization header with the user's credentials. The highest threat from this vulnerability is to confidentiality and integrity.",5,default ecp binding flow allows authentication flows bypassed exploiting behavior attacker bypass mfa authentication sending soap request authnrequest authorization header users credentials highest threat vulnerability confidentiality integrity,"['default', 'ecp', 'binding', 'flow', 'allows', 'authentication', 'flows', 'bypassed', 'exploiting', 'behavior', 'attacker', 'bypass', 'mfa', 'authentication', 'sending', 'soap', 'request', 'authnrequest', 'authorization', 'header', 'users', 'credentials', 'highest', 'threat', 'vulnerability', 'confidentiality', 'integrity']"
62,62,-6.4653263,-20.58651,4.3,"ClassLoaderTheme and ClasspathThemeResourceProviderFactory allows reading any file available as a resource to the classloader. By sending requests for theme resources with a relative path from an external HTTP client, the client will receive the content of random files if available.",21,classloadertheme classpaththemeresourceproviderfactory allows file available resource classloader sending requests theme resources relative path external http client client receive content random files available,"['classloadertheme', 'classpaththemeresourceproviderfactory', 'allows', 'file', 'available', 'resource', 'classloader', 'sending', 'requests', 'theme', 'resources', 'relative', 'path', 'external', 'http', 'client', 'client', 'receive', 'content', 'random', 'files', 'available']"
63,63,43.677288,-0.4815564,5.4,"A flaw was found in Keycloak. This flaw allows a privileged attacker to use the malicious payload as the group name while creating a new group from the admin console, leading to a stored Cross-site scripting (XSS) attack.",5,allows privileged attacker use malicious payload group name creating new group admin console leading stored crosssite scripting xss attack,"['allows', 'privileged', 'attacker', 'use', 'malicious', 'payload', 'group', 'name', 'creating', 'new', 'group', 'admin', 'console', 'leading', 'stored', 'crosssite', 'scripting', 'xss', 'attack']"
64,64,50.58306,-2.579825,5.4,A flaw was found in Keycloak in the execute-actions-email endpoint. This issue allows arbitrary HTML to be injected into emails sent to Keycloak users and can be misused to perform phishing or other attacks against users.,14,executeactionsemail endpoint issue allows arbitrary html injected emails sent users misused perform phishing attacks users,"['executeactionsemail', 'endpoint', 'issue', 'allows', 'arbitrary', 'html', 'injected', 'emails', 'sent', 'users', 'misused', 'perform', 'phishing', 'attacks', 'users']"
65,65,43.19529,2.34041,6.4,keycloak-services - Improper Neutralization of Input During Web Page Generation ('Cross-site Scripting'),5,keycloakservices improper neutralization input web page generation crosssite scripting,"['keycloakservices', 'improper', 'neutralization', 'input', 'web', 'page', 'generation', 'crosssite', 'scripting']"
66,66,37.63749,-3.2203598,7.2,An issue was discovered in Keycloak that allows arbitrary Javascript to be uploaded for the SAML protocol mapper even if the UPLOAD_SCRIPTS feature is disabled,5,issue discovered allows arbitrary javascript uploaded saml protocol mapper even uploadscripts feature disabled,"['issue', 'discovered', 'allows', 'arbitrary', 'javascript', 'uploaded', 'saml', 'protocol', 'mapper', 'even', 'uploadscripts', 'feature', 'disabled']"
67,67,38.60144,-0.16374436,9.1,"keycloak: path traversal via double URL encoding. A flaw was found in Keycloak, where it does not properly validate URLs included in a redirect. An attacker can use this flaw to construct a malicious request to bypass validation and access other URLs and potentially sensitive information within the domain or possibly conduct further attacks. This flaw affects any client that utilizes a wildcard in the Valid Redirect URIs field.",5,path traversal via double url encoding properly validate urls included redirect attacker use construct malicious request bypass validation access urls potentially sensitive information within domain possibly conduct attacks affects client utilizes wildcard valid redirect uris field,"['path', 'traversal', 'via', 'double', 'url', 'encoding', 'properly', 'validate', 'urls', 'included', 'redirect', 'attacker', 'use', 'construct', 'malicious', 'request', 'bypass', 'validation', 'access', 'urls', 'potentially', 'sensitive', 'information', 'within', 'domain', 'possibly', 'conduct', 'attacks', 'affects', 'client', 'utilizes', 'wildcard', 'valid', 'redirect', 'uris', 'field']"
68,68,49.726837,-11.057139,6.8,keycloak-server-spi-private - Session Fixation,5,keycloakserverspiprivate session fixation,"['keycloakserverspiprivate', 'session', 'fixation']"
69,69,43.224674,2.3179994,6.1,keycloak-services - Cross-site Scripting (XSS),5,keycloakservices crosssite scripting xss,"['keycloakservices', 'crosssite', 'scripting', 'xss']"
70,70,44.276653,-7.248313,3.8,"A flaw was found in Keycloak, where it did not properly check client tokens for possible revocation in its client credential flow. This flaw allows an attacker to access or modify potentially sensitive information.",5,properly check client tokens possible revocation client credential flow allows attacker access modify potentially sensitive information,"['properly', 'check', 'client', 'tokens', 'possible', 'revocation', 'client', 'credential', 'flow', 'allows', 'attacker', 'access', 'modify', 'potentially', 'sensitive', 'information']"
71,71,41.74786,-8.449021,8.7,keycloak-services - Incorrect Implementation of Authentication Algorithm Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2023-0264 for details,5,keycloakservices incorrect implementation authentication algorithm sonatypes research suggests cves details differ defined nvd see details,"['keycloakservices', 'incorrect', 'implementation', 'authentication', 'algorithm', 'sonatypes', 'research', 'suggests', 'cves', 'details', 'differ', 'defined', 'nvd', 'see', 'details']"
72,72,40.63969,-1.7178249,5.1,A flaw was found in keycloak. The new account console in keycloak can allow malicious code to be executed using the referrer URL. The highest threat from this vulnerability is to data confidentiality and integrity as well as system availability.,5,new account console allow malicious code executed using referrer url highest threat vulnerability data confidentiality integrity well system availability,"['new', 'account', 'console', 'allow', 'malicious', 'code', 'executed', 'using', 'referrer', 'url', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality', 'integrity', 'well', 'system', 'availability']"
73,73,43.644127,-0.6262197,3.8,"A Stored Cross-site scripting (XSS) vulnerability was found in keycloak as shipped in Red Hat Single Sign-On 7. This flaw allows a privileged attacker to execute malicious scripts in the admin console, abusing the default roles functionality.",5,stored crosssite scripting xss vulnerability shipped red hat single signon allows privileged attacker execute malicious scripts admin console abusing default roles functionality,"['stored', 'crosssite', 'scripting', 'xss', 'vulnerability', 'shipped', 'red', 'hat', 'single', 'signon', 'allows', 'privileged', 'attacker', 'execute', 'malicious', 'scripts', 'admin', 'console', 'abusing', 'default', 'roles', 'functionality']"
74,74,11.5730505,20.481016,7.5,Improper Restriction of XML External Entity Reference in GitHub repository liquibase/liquibase prior to 4.8.0.,2,improper restriction xml external entity reference github repository liquibaseliquibase prior,"['improper', 'restriction', 'xml', 'external', 'entity', 'reference', 'github', 'repository', 'liquibaseliquibase', 'prior']"
75,75,-5.5406904,7.0335236,4.0,"A flaw was found in Hibernate ORM in versions before 5.3.18, 5.4.18 and 5.5.0.Beta1. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SELECT or GROUP BY parts of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks.",17,hibernate orm versions beta sql injection implementation jpa criteria api permit unsanitized literals literal used select group parts query could allow attacker access unauthorized information possibly conduct attacks,"['hibernate', 'orm', 'versions', 'beta', 'sql', 'injection', 'implementation', 'jpa', 'criteria', 'api', 'permit', 'unsanitized', 'literals', 'literal', 'used', 'select', 'group', 'parts', 'query', 'could', 'allow', 'attacker', 'access', 'unauthorized', 'information', 'possibly', 'conduct', 'attacks']"
76,76,-5.562865,7.05275,5.8,A flaw was found in hibernate-core in versions prior to and including 5.4.23.Final. A SQL injection in the implementation of the JPA Criteria API can permit unsanitized literals when a literal is used in the SQL comments of the query. This flaw could allow an attacker to access unauthorized information or possibly conduct further attacks. The highest threat from this vulnerability is to data confidentiality and integrity.,17,hibernatecore versions prior including final sql injection implementation jpa criteria api permit unsanitized literals literal used sql comments query could allow attacker access unauthorized information possibly conduct attacks highest threat vulnerability data confidentiality integrity,"['hibernatecore', 'versions', 'prior', 'including', 'final', 'sql', 'injection', 'implementation', 'jpa', 'criteria', 'api', 'permit', 'unsanitized', 'literals', 'literal', 'used', 'sql', 'comments', 'query', 'could', 'allow', 'attacker', 'access', 'unauthorized', 'information', 'possibly', 'conduct', 'attacks', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality', 'integrity']"
77,77,45.737885,-10.725192,4.9,"A flaw was found in infinispan 10 REST API, where authorization permissions are not checked while performing some server management operations. When authz is enabled, any user with authentication can perform operations like shutting down the server without the ADMIN role.",5,infinispan rest api authorization permissions checked performing server management operations authz enabled user authentication perform operations like shutting server without admin role,"['infinispan', 'rest', 'api', 'authorization', 'permissions', 'checked', 'performing', 'server', 'management', 'operations', 'authz', 'enabled', 'user', 'authentication', 'perform', 'operations', 'like', 'shutting', 'server', 'without', 'admin', 'role']"
78,78,45.69884,-30.440617,1.9,"Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method ""File.createTempFile"" on unix-like systems creates a random file, but, by default will create this file with the permissions ""-rw-r--r--"". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's ""AbstractDiskHttpData"" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own ""java.io.tmpdir"" when you start the JVM or use ""DefaultHttpDataFactory.setBaseDir(...)"" to set the directory to something that is only readable by the current user.",6,netty opensource asynchronous eventdriven network application framework rapid development maintainable high performance protocol servers clients netty version final vulnerability unixlike systems involving insecure temp file nettys multipart decoders used local information disclosure occur via local system temporary directory temporary storing uploads disk enabled unixlike systems temporary directory shared user writing directory using apis explicitly set filedirectory permissions lead information disclosure note impact modern macos operating systems method filecreatetempfile unixlike systems creates random file default create file permissions rwrr thus sensitive information written file local users read information case nettys abstractdiskhttpdata fixed version final workaround one may specify javaiotmpdir start jvm use defaulthttpdatafactorysetbasedir set directory something readable current user,"['netty', 'opensource', 'asynchronous', 'eventdriven', 'network', 'application', 'framework', 'rapid', 'development', 'maintainable', 'high', 'performance', 'protocol', 'servers', 'clients', 'netty', 'version', 'final', 'vulnerability', 'unixlike', 'systems', 'involving', 'insecure', 'temp', 'file', 'nettys', 'multipart', 'decoders', 'used', 'local', 'information', 'disclosure', 'occur', 'via', 'local', 'system', 'temporary', 'directory', 'temporary', 'storing', 'uploads', 'disk', 'enabled', 'unixlike', 'systems', 'temporary', 'directory', 'shared', 'user', 'writing', 'directory', 'using', 'apis', 'explicitly', 'set', 'filedirectory', 'permissions', 'lead', 'information', 'disclosure', 'note', 'impact', 'modern', 'macos', 'operating', 'systems', 'method', 'filecreatetempfile', 'unixlike', 'systems', 'creates', 'random', 'file', 'default', 'create', 'file', 'permissions', 'rwrr', 'thus', 'sensitive', 'information', 'written', 'file', 'local', 'users', 'read', 'information', 'case', 'nettys', 'abstractdiskhttpdata', 'fixed', 'version', 'final', 'workaround', 'one', 'may', 'specify', 'javaiotmpdir', 'start', 'jvm', 'use', 'defaulthttpdatafactorysetbasedir', 'set', 'directory', 'something', 'readable', 'current', 'user']"
79,79,45.69887,-30.440535,1.9,"Netty is an open-source, asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. In Netty before version 4.1.59.Final there is a vulnerability on Unix-like systems involving an insecure temp file. When netty's multipart decoders are used local information disclosure can occur via the local system temporary directory if temporary storing uploads on the disk is enabled. On unix-like systems, the temporary directory is shared between all user. As such, writing to this directory using APIs that do not explicitly set the file/directory permissions can lead to information disclosure. Of note, this does not impact modern MacOS Operating Systems. The method ""File.createTempFile"" on unix-like systems creates a random file, but, by default will create this file with the permissions ""-rw-r--r--"". Thus, if sensitive information is written to this file, other local users can read this information. This is the case in netty's ""AbstractDiskHttpData"" is vulnerable. This has been fixed in version 4.1.59.Final. As a workaround, one may specify your own ""java.io.tmpdir"" when you start the JVM or use ""DefaultHttpDataFactory.setBaseDir(...)"" to set the directory to something that is only readable by the current user.",6,netty opensource asynchronous eventdriven network application framework rapid development maintainable high performance protocol servers clients netty version final vulnerability unixlike systems involving insecure temp file nettys multipart decoders used local information disclosure occur via local system temporary directory temporary storing uploads disk enabled unixlike systems temporary directory shared user writing directory using apis explicitly set filedirectory permissions lead information disclosure note impact modern macos operating systems method filecreatetempfile unixlike systems creates random file default create file permissions rwrr thus sensitive information written file local users read information case nettys abstractdiskhttpdata fixed version final workaround one may specify javaiotmpdir start jvm use defaulthttpdatafactorysetbasedir set directory something readable current user,"['netty', 'opensource', 'asynchronous', 'eventdriven', 'network', 'application', 'framework', 'rapid', 'development', 'maintainable', 'high', 'performance', 'protocol', 'servers', 'clients', 'netty', 'version', 'final', 'vulnerability', 'unixlike', 'systems', 'involving', 'insecure', 'temp', 'file', 'nettys', 'multipart', 'decoders', 'used', 'local', 'information', 'disclosure', 'occur', 'via', 'local', 'system', 'temporary', 'directory', 'temporary', 'storing', 'uploads', 'disk', 'enabled', 'unixlike', 'systems', 'temporary', 'directory', 'shared', 'user', 'writing', 'directory', 'using', 'apis', 'explicitly', 'set', 'filedirectory', 'permissions', 'lead', 'information', 'disclosure', 'note', 'impact', 'modern', 'macos', 'operating', 'systems', 'method', 'filecreatetempfile', 'unixlike', 'systems', 'creates', 'random', 'file', 'default', 'create', 'file', 'permissions', 'rwrr', 'thus', 'sensitive', 'information', 'written', 'file', 'local', 'users', 'read', 'information', 'case', 'nettys', 'abstractdiskhttpdata', 'fixed', 'version', 'final', 'workaround', 'one', 'may', 'specify', 'javaiotmpdir', 'start', 'jvm', 'use', 'defaulthttpdatafactorysetbasedir', 'set', 'directory', 'something', 'readable', 'current', 'user']"
80,80,67.05871,14.417679,5.0,The Bzip2 decompression decoder function doesn't allow setting size restrictions on the decompressed output data (which affects the allocation size used during decompression). All users of Bzip2Decoder are affected. The malicious input can trigger an OOME and so a DoS attack,20,bzip decompression decoder function allow setting size restrictions decompressed output data affects allocation size used decompression users bzipdecoder affected malicious input trigger oome dos attack,"['bzip', 'decompression', 'decoder', 'function', 'allow', 'setting', 'size', 'restrictions', 'decompressed', 'output', 'data', 'affects', 'allocation', 'size', 'used', 'decompression', 'users', 'bzipdecoder', 'affected', 'malicious', 'input', 'trigger', 'oome', 'dos', 'attack']"
81,81,67.22262,13.584824,5.0,The Snappy frame decoder function doesn't restrict the chunk length which may lead to excessive memory usage. Beside this it also may buffer reserved skippable chunks until the whole chunk was received which may lead to excessive memory usage as well. This vulnerability can be triggered by supplying malicious input that decompresses to a very big size (via a network stream or a file) or by sending a huge skippable chunk.,20,snappy frame decoder function restrict chunk length may lead excessive memory usage beside also may buffer reserved skippable chunks whole chunk received may lead excessive memory usage well vulnerability triggered supplying malicious input decompresses big size via network stream file sending huge skippable chunk,"['snappy', 'frame', 'decoder', 'function', 'restrict', 'chunk', 'length', 'may', 'lead', 'excessive', 'memory', 'usage', 'beside', 'also', 'may', 'buffer', 'reserved', 'skippable', 'chunks', 'whole', 'chunk', 'received', 'may', 'lead', 'excessive', 'memory', 'usage', 'well', 'vulnerability', 'triggered', 'supplying', 'malicious', 'input', 'decompresses', 'big', 'size', 'via', 'network', 'stream', 'file', 'sending', 'huge', 'skippable', 'chunk']"
82,82,41.590176,-31.445688,6.5,"Netty project is an event-driven asynchronous network application framework. Starting in version 4.1.83.Final and prior to 4.1.86.Final, when calling `DefaultHttpHeadesr.set` with an _iterator_ of values, header value validation was not performed, allowing malicious header values in the iterator to perform HTTP Response Splitting. This issue has been patched in version 4.1.86.Final. Integrators can work around the issue by changing the `DefaultHttpHeaders.set(CharSequence, Iterator<?>)` call, into a `remove()` call, and call `add()` in a loop over the iterator of values.",6,netty project eventdriven asynchronous network application framework starting version final prior final calling defaulthttpheadesrset iterator values header value validation performed allowing malicious header values iterator perform http response splitting issue patched version final integrators work around issue changing defaulthttpheaderssetcharsequence iterator call remove call call add loop iterator values,"['netty', 'project', 'eventdriven', 'asynchronous', 'network', 'application', 'framework', 'starting', 'version', 'final', 'prior', 'final', 'calling', 'defaulthttpheadesrset', 'iterator', 'values', 'header', 'value', 'validation', 'performed', 'allowing', 'malicious', 'header', 'values', 'iterator', 'perform', 'http', 'response', 'splitting', 'issue', 'patched', 'version', 'final', 'integrators', 'work', 'around', 'issue', 'changing', 'defaulthttpheaderssetcharsequence', 'iterator', 'call', 'remove', 'call', 'call', 'add', 'loop', 'iterator', 'values']"
83,83,45.8484,-33.373417,5.0,"The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder.",6,zlibdecoders netty allow unbounded memory allocation decoding zlibencoded byte stream attacker could send large zlibencoded byte stream netty server forcing server allocate free memory single decoder,"['zlibdecoders', 'netty', 'allow', 'unbounded', 'memory', 'allocation', 'decoding', 'zlibencoded', 'byte', 'stream', 'attacker', 'could', 'send', 'large', 'zlibencoded', 'byte', 'stream', 'netty', 'server', 'forcing', 'server', 'allocate', 'free', 'memory', 'single', 'decoder']"
84,84,25.36732,8.05999,5.0,"The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.",22,package comgooglecodegsongson deserialization data via writereplace method internal classes may lead dos attacks,"['package', 'comgooglecodegsongson', 'deserialization', 'data', 'via', 'writereplace', 'method', 'internal', 'classes', 'may', 'lead', 'dos', 'attacks']"
85,85,46.12838,-9.873699,5.0,A flaw was found in keycloak-model-infinispan in keycloak versions before 14.0.0 where authenticationSessions map in RootAuthenticationSessionEntity grows boundlessly which could lead to a DoS attack.,5,keycloakmodelinfinispan versions authenticationsessions map rootauthenticationsessionentity grows boundlessly could lead dos attack,"['keycloakmodelinfinispan', 'versions', 'authenticationsessions', 'map', 'rootauthenticationsessionentity', 'grows', 'boundlessly', 'could', 'lead', 'dos', 'attack']"
86,86,12.026398,10.908147,7.5,Included in Log4j 1.2 is a SocketServer class that is vulnerable to deserialization of untrusted data which can be exploited to remotely execute arbitrary code when combined with a deserialization gadget when listening to untrusted network traffic for log data. This affects Log4j versions up to 1.2 up to 1.2.17.,23,included logj socketserver class deserialization data exploited remotely execute arbitrary code combined deserialization gadget listening network traffic log data affects logj versions,"['included', 'logj', 'socketserver', 'class', 'deserialization', 'data', 'exploited', 'remotely', 'execute', 'arbitrary', 'code', 'combined', 'deserialization', 'gadget', 'listening', 'network', 'traffic', 'log', 'data', 'affects', 'logj', 'versions']"
87,87,11.033033,10.427752,6.0,"JMSAppender in Log4j 1.2 is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration. The attacker can provide TopicBindingName and TopicConnectionFactoryBindingName configurations causing JMSAppender to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-44228. Note this issue only affects Log4j 1.2 when specifically configured to use JMSAppender, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",23,jmsappender logj deserialization data attacker write access logj configuration attacker provide topicbindingname topicconnectionfactorybindingname configurations causing jmsappender perform jndi requests result remote code execution similar fashion cve note issue affects logj specifically configured use jmsappender default apache logj reached end life august users upgrade logj addresses numerous issues previous versions,"['jmsappender', 'logj', 'deserialization', 'data', 'attacker', 'write', 'access', 'logj', 'configuration', 'attacker', 'provide', 'topicbindingname', 'topicconnectionfactorybindingname', 'configurations', 'causing', 'jmsappender', 'perform', 'jndi', 'requests', 'result', 'remote', 'code', 'execution', 'similar', 'fashion', 'cve', 'note', 'issue', 'affects', 'logj', 'specifically', 'configured', 'use', 'jmsappender', 'default', 'apache', 'logj', 'reached', 'end', 'life', 'august', 'users', 'upgrade', 'logj', 'addresses', 'numerous', 'issues', 'previous', 'versions']"
88,88,11.174447,10.554555,6.0,"JMSSink in all versions of Log4j 1.x is vulnerable to deserialization of untrusted data when the attacker has write access to the Log4j configuration or if the configuration references an LDAP service the attacker has access to. The attacker can provide a TopicConnectionFactoryBindingName configuration causing JMSSink to perform JNDI requests that result in remote code execution in a similar fashion to CVE-2021-4104. Note this issue only affects Log4j 1.x when specifically configured to use JMSSink, which is not the default. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",23,jmssink versions logj deserialization data attacker write access logj configuration configuration references ldap service attacker access attacker provide topicconnectionfactorybindingname configuration causing jmssink perform jndi requests result remote code execution similar fashion cve note issue affects logj specifically configured use jmssink default apache logj reached end life august users upgrade logj addresses numerous issues previous versions,"['jmssink', 'versions', 'logj', 'deserialization', 'data', 'attacker', 'write', 'access', 'logj', 'configuration', 'configuration', 'references', 'ldap', 'service', 'attacker', 'access', 'attacker', 'provide', 'topicconnectionfactorybindingname', 'configuration', 'causing', 'jmssink', 'perform', 'jndi', 'requests', 'result', 'remote', 'code', 'execution', 'similar', 'fashion', 'cve', 'note', 'issue', 'affects', 'logj', 'specifically', 'configured', 'use', 'jmssink', 'default', 'apache', 'logj', 'reached', 'end', 'life', 'august', 'users', 'upgrade', 'logj', 'addresses', 'numerous', 'issues', 'previous', 'versions']"
89,89,10.592972,9.732035,6.8,"By design, the JDBCAppender in Log4j 1.2.x accepts an SQL statement as a configuration parameter where the values to be inserted are converters from PatternLayout. The message converter, %m, is likely to always be included. This allows attackers to manipulate the SQL by entering crafted strings into input fields or headers of an application that are logged allowing unintended SQL queries to be executed. Note this issue only affects Log4j 1.x when specifically configured to use the JDBCAppender, which is not the default. Beginning in version 2.0-beta8, the JDBCAppender was re-introduced with proper support for parameterized SQL queries and further customization over the columns written to in logs. Apache Log4j 1.2 reached end of life in August 2015. Users should upgrade to Log4j 2 as it addresses numerous other issues from the previous versions.",23,design jdbcappender logj accepts sql statement configuration parameter values inserted converters patternlayout message converter likely always included allows attackers manipulate sql entering crafted strings input fields headers application logged allowing unintended sql queries executed note issue affects logj specifically configured use jdbcappender default beginning version beta jdbcappender reintroduced proper support parameterized sql queries customization columns written logs apache logj reached end life august users upgrade logj addresses numerous issues previous versions,"['design', 'jdbcappender', 'logj', 'accepts', 'sql', 'statement', 'configuration', 'parameter', 'values', 'inserted', 'converters', 'patternlayout', 'message', 'converter', 'likely', 'always', 'included', 'allows', 'attackers', 'manipulate', 'sql', 'entering', 'crafted', 'strings', 'input', 'fields', 'headers', 'application', 'logged', 'allowing', 'unintended', 'sql', 'queries', 'executed', 'note', 'issue', 'affects', 'logj', 'specifically', 'configured', 'use', 'jdbcappender', 'default', 'beginning', 'version', 'beta', 'jdbcappender', 'reintroduced', 'proper', 'support', 'parameterized', 'sql', 'queries', 'customization', 'columns', 'written', 'logs', 'apache', 'logj', 'reached', 'end', 'life', 'august', 'users', 'upgrade', 'logj', 'addresses', 'numerous', 'issues', 'previous', 'versions']"
90,90,11.232244,12.474457,9.0,CVE-2020-9493 identified a deserialization issue that was present in Apache Chainsaw. Prior to Chainsaw V2.0 Chainsaw was a component of Apache Log4j 1.2.x where the same issue exists.,23,cve identified deserialization issue present apache chainsaw prior chainsaw chainsaw component apache logj issue exists,"['cve', 'identified', 'deserialization', 'issue', 'present', 'apache', 'chainsaw', 'prior', 'chainsaw', 'chainsaw', 'component', 'apache', 'logj', 'issue', 'exists']"
91,91,11.388224,11.571006,7.5,"** UNSUPPORTED WHEN ASSIGNED ** When using the Chainsaw or SocketAppender components with Log4j 1.x on JRE less than 1.7, an attacker that manages to cause a logging entry involving a specially-crafted (ie, deeply nested) hashmap or hashtable (depending on which logging component is in use) to be processed could exhaust the available memory in the virtual machine and achieve Denial of Service when the object is deserialized. This issue affects Apache Log4j before 2. Affected users are recommended to update to Log4j 2.x. NOTE: This vulnerability only affects products that are no longer supported by the maintainer.",23,unsupported assigned using chainsaw socketappender components logj jre less attacker manages cause logging entry involving speciallycrafted ie deeply nested hashmap hashtable depending logging component use processed could exhaust available memory virtual machine achieve denial service object deserialized issue affects apache logj affected users recommended update logj note vulnerability affects products longer supported maintainer,"['unsupported', 'assigned', 'using', 'chainsaw', 'socketappender', 'components', 'logj', 'jre', 'less', 'attacker', 'manages', 'cause', 'logging', 'entry', 'involving', 'speciallycrafted', 'ie', 'deeply', 'nested', 'hashmap', 'hashtable', 'depending', 'logging', 'component', 'use', 'processed', 'could', 'exhaust', 'available', 'memory', 'virtual', 'machine', 'achieve', 'denial', 'service', 'object', 'deserialized', 'issue', 'affects', 'apache', 'logj', 'affected', 'users', 'recommended', 'update', 'logj', 'note', 'vulnerability', 'affects', 'products', 'longer', 'supported', 'maintainer']"
92,92,20.461685,-43.769836,5.0,"In Apache Directory LDAP API before 1.0.2, a bug in the way the SSL Filter was setup made it possible for another thread to use the connection before the TLS layer has been established, if the connection has already been used and put back in a pool of connections, leading to leaking any information contained in this request (including the credentials when sending a BIND request).",24,apache directory ldap api bug way ssl filter setup made possible another thread use connection tls layer established connection already used put back pool connections leading leaking information contained request including credentials sending bind request,"['apache', 'directory', 'ldap', 'api', 'bug', 'way', 'ssl', 'filter', 'setup', 'made', 'possible', 'another', 'thread', 'use', 'connection', 'tls', 'layer', 'established', 'connection', 'already', 'used', 'put', 'back', 'pool', 'connections', 'leading', 'leaking', 'information', 'contained', 'request', 'including', 'credentials', 'sending', 'bind', 'request']"
93,93,20.098835,-41.264072,5.0,"Handling of the close_notify SSL/TLS message does not lead to a connection closure, leading the server to retain the socket opened and to have the client potentially receive clear text messages afterward. Mitigation: 2.0.20 users should migrate to 2.0.21, 2.1.0 users should migrate to 2.1.1. This issue affects: Apache MINA.",24,handling closenotify ssltls message lead connection closure leading server retain socket opened client potentially receive clear text messages afterward mitigation users migrate users migrate issue affects apache mina,"['handling', 'closenotify', 'ssltls', 'message', 'lead', 'connection', 'closure', 'leading', 'server', 'retain', 'socket', 'opened', 'client', 'potentially', 'receive', 'clear', 'text', 'messages', 'afterward', 'mitigation', 'users', 'migrate', 'users', 'migrate', 'issue', 'affects', 'apache', 'mina']"
94,94,-1.5086774,-55.65407,3.3,"A flaw was found in wildfly-core in all versions. If a vault expression is in the form of a single attribute that contains multiple expressions, a user who was granted access to the management interface can potentially access a vault expression they should not be able to access and possibly retrieve the item which was stored in the vault. The highest threat from this vulnerability is data confidentiality and integrity.",25,wildflycore versions vault expression form single attribute contains multiple expressions user granted access management interface potentially access vault expression able access possibly retrieve item stored vault highest threat vulnerability data confidentiality integrity,"['wildflycore', 'versions', 'vault', 'expression', 'form', 'single', 'attribute', 'contains', 'multiple', 'expressions', 'user', 'granted', 'access', 'management', 'interface', 'potentially', 'access', 'vault', 'expression', 'able', 'access', 'possibly', 'retrieve', 'item', 'stored', 'vault', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality', 'integrity']"
95,95,0.15740709,-55.19527,6.8,"A memory leak flaw was found in WildFly in all versions up to 21.0.0.Final, where host-controller tries to reconnect in a loop, generating new connections which are not properly closed while not able to connect to domain-controller. This flaw allows an attacker to cause an Out of memory (OOM) issue, leading to a denial of service. The highest threat from this vulnerability is to system availability.",25,memory leak wildfly versions final hostcontroller tries reconnect loop generating new connections properly closed able connect domaincontroller allows attacker cause memory oom issue leading denial service highest threat vulnerability system availability,"['memory', 'leak', 'wildfly', 'versions', 'final', 'hostcontroller', 'tries', 'reconnect', 'loop', 'generating', 'new', 'connections', 'properly', 'closed', 'able', 'connect', 'domaincontroller', 'allows', 'attacker', 'cause', 'memory', 'oom', 'issue', 'leading', 'denial', 'service', 'highest', 'threat', 'vulnerability', 'system', 'availability']"
96,96,-0.719029,-51.03332,7.1,"A flaw was found in jboss-remoting in versions before 5.0.20.SP1-redhat-00001. A malicious attacker could cause threads to hold up forever in the EJB server by writing a sequence of bytes corresponding to the expected messages of a successful EJB client request, but omitting the ACK messages, or just tamper with jboss-remoting code, deleting the lines that send the ACK message from the EJB client code resulting in a denial of service. The highest threat from this vulnerability is to system availability.",26,jbossremoting versions spredhat malicious attacker could cause threads hold forever ejb server writing sequence bytes corresponding expected messages successful ejb client request omitting ack messages tamper jbossremoting code deleting lines send ack message ejb client code resulting denial service highest threat vulnerability system availability,"['jbossremoting', 'versions', 'spredhat', 'malicious', 'attacker', 'could', 'cause', 'threads', 'hold', 'forever', 'ejb', 'server', 'writing', 'sequence', 'bytes', 'corresponding', 'expected', 'messages', 'successful', 'ejb', 'client', 'request', 'omitting', 'ack', 'messages', 'tamper', 'jbossremoting', 'code', 'deleting', 'lines', 'send', 'ack', 'message', 'ejb', 'client', 'code', 'resulting', 'denial', 'service', 'highest', 'threat', 'vulnerability', 'system', 'availability']"
97,97,0.7382935,-57.996906,3.5,"A flaw was found in Wildfly Elytron in versions prior to 1.10.14.Final, prior to 1.15.5.Final and prior to 1.16.1.Final where ScramServer may be susceptible to Timing Attack if enabled. The highest threat of this vulnerability is confidentiality.",25,wildfly elytron versions prior final prior final prior final scramserver may susceptible timing attack enabled highest threat vulnerability confidentiality,"['wildfly', 'elytron', 'versions', 'prior', 'final', 'prior', 'final', 'prior', 'final', 'scramserver', 'may', 'susceptible', 'timing', 'attack', 'enabled', 'highest', 'threat', 'vulnerability', 'confidentiality']"
98,98,-1.363512,-61.11506,7.4,"wildfly-elytron: possible timing attacks via use of unsafe comparator. A flaw was found in Wildfly-elytron. Wildfly-elytron uses java.util.Arrays.equals in several places, which is unsafe and vulnerable to timing attacks. To compare values securely, use java.security.MessageDigest.isEqual instead. This flaw allows an attacker to access secure information or impersonate an authed user.",25,wildflyelytron possible timing attacks via use unsafe comparator wildflyelytron wildflyelytron uses javautilarraysequals several places unsafe timing attacks compare values securely use javasecuritymessagedigestisequal instead allows attacker access secure information impersonate authed user,"['wildflyelytron', 'possible', 'timing', 'attacks', 'via', 'use', 'unsafe', 'comparator', 'wildflyelytron', 'wildflyelytron', 'uses', 'javautilarraysequals', 'several', 'places', 'unsafe', 'timing', 'attacks', 'compare', 'values', 'securely', 'use', 'javasecuritymessagedigestisequal', 'instead', 'allows', 'attacker', 'access', 'secure', 'information', 'impersonate', 'authed', 'user']"
99,99,-1.3420078,-50.211533,5.0,Get requests in JBoss Enterprise Application Platform (EAP) 7 disclose internal IP addresses to remote attackers.,26,get requests jboss enterprise application platform eap disclose internal ip addresses remote attackers,"['get', 'requests', 'jboss', 'enterprise', 'application', 'platform', 'eap', 'disclose', 'internal', 'ip', 'addresses', 'remote', 'attackers']"
100,100,1.7565131,-42.708977,5.8,"A flaw was discovered in all versions of Undertow before Undertow 2.2.0.Final, where HTTP request smuggling related to CVE-2017-2666 is possible against HTTP/1.x and HTTP/2 due to permitting invalid characters in an HTTP request. This flaw allows an attacker to poison a web-cache, perform an XSS attack, or obtain sensitive information from request other than their own.",27,discovered versions undertow undertow final http request smuggling related cve possible httpx http due permitting invalid characters http request allows attacker poison webcache perform xss attack obtain sensitive information request,"['discovered', 'versions', 'undertow', 'undertow', 'final', 'http', 'request', 'smuggling', 'related', 'cve', 'possible', 'httpx', 'http', 'due', 'permitting', 'invalid', 'characters', 'http', 'request', 'allows', 'attacker', 'poison', 'webcache', 'perform', 'xss', 'attack', 'obtain', 'sensitive', 'information', 'request']"
101,101,0.48955065,-43.94972,5.0,"A flaw was discovered in Undertow in versions before Undertow 2.1.1.Final where certain requests to the ""Expect: 100-continue"" header may cause an out of memory error. This flaw may potentially lead to a denial of service.",27,discovered undertow versions undertow final certain requests expect continue header may cause memory error may potentially lead denial service,"['discovered', 'undertow', 'versions', 'undertow', 'final', 'certain', 'requests', 'expect', 'continue', 'header', 'may', 'cause', 'memory', 'error', 'may', 'potentially', 'lead', 'denial', 'service']"
102,102,1.6148472,-43.22976,6.4,"A flaw was found in Undertow in versions before 2.1.1.Final, regarding the processing of invalid HTTP requests with large chunk sizes. This flaw allows an attacker to take advantage of HTTP request smuggling.",27,undertow versions final regarding processing invalid http requests large chunk sizes allows attacker take advantage http request smuggling,"['undertow', 'versions', 'final', 'regarding', 'processing', 'invalid', 'http', 'requests', 'large', 'chunk', 'sizes', 'allows', 'attacker', 'take', 'advantage', 'http', 'request', 'smuggling']"
103,103,1.4658115,-41.946384,5.8,"A flaw was found in Undertow. A regression in the fix for CVE-2020-10687 was found. HTTP request smuggling related to CVE-2017-2666 is possible against HTTP/1.x and HTTP/2 due to permitting invalid characters in an HTTP request. This flaw allows an attacker to poison a web-cache, perform an XSS attack, or obtain sensitive information from request other than their own. The highest threat from this vulnerability is to data confidentiality and integrity.",27,undertow regression fix cve http request smuggling related cve possible httpx http due permitting invalid characters http request allows attacker poison webcache perform xss attack obtain sensitive information request highest threat vulnerability data confidentiality integrity,"['undertow', 'regression', 'fix', 'cve', 'http', 'request', 'smuggling', 'related', 'cve', 'possible', 'httpx', 'http', 'due', 'permitting', 'invalid', 'characters', 'http', 'request', 'allows', 'attacker', 'poison', 'webcache', 'perform', 'xss', 'attack', 'obtain', 'sensitive', 'information', 'request', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality', 'integrity']"
104,104,2.422843,-43.92094,2.6,"A flaw was found in undertow. The HTTP2SourceChannel fails to write the final frame under some circumstances, resulting in a denial of service. The highest threat from this vulnerability is availability. This flaw affects Undertow versions prior to 2.0.35.SP1, prior to 2.2.6.SP1, prior to 2.2.7.SP1, prior to 2.0.36.SP1, prior to 2.2.9.Final and prior to 2.0.39.Final.",27,undertow httpsourcechannel fails write final frame circumstances resulting denial service highest threat vulnerability availability affects undertow versions prior sp prior sp prior sp prior sp prior final prior final,"['undertow', 'httpsourcechannel', 'fails', 'write', 'final', 'frame', 'circumstances', 'resulting', 'denial', 'service', 'highest', 'threat', 'vulnerability', 'availability', 'affects', 'undertow', 'versions', 'prior', 'sp', 'prior', 'sp', 'prior', 'sp', 'prior', 'sp', 'prior', 'final', 'prior', 'final']"
105,105,2.8227203,-44.026592,7.5,A flaw was found in Undertow that tripped the client-side invocation timeout with certain calls made over HTTP2. This flaw allows an attacker to carry out denial of service attacks.,27,undertow tripped clientside invocation timeout certain calls made http allows attacker carry denial service attacks,"['undertow', 'tripped', 'clientside', 'invocation', 'timeout', 'certain', 'calls', 'made', 'http', 'allows', 'attacker', 'carry', 'denial', 'service', 'attacks']"
106,106,-0.5771653,-46.984436,7.5,"A flaw was found in Undertow. For an AJP 400 response, EAP 7 is improperly sending two response packets, and those packets have the reuse flag set even though JBoss EAP closes the connection. A failure occurs when the connection is reused after a 400 by CPING since it reads in the second SEND_HEADERS response packet instead of a CPONG.",27,undertow ajp response eap improperly sending two response packets packets reuse flag set even though jboss eap closes connection failure occurs connection reused cping since reads second sendheaders response packet instead cpong,"['undertow', 'ajp', 'response', 'eap', 'improperly', 'sending', 'two', 'response', 'packets', 'packets', 'reuse', 'flag', 'set', 'even', 'though', 'jboss', 'eap', 'closes', 'connection', 'failure', 'occurs', 'connection', 'reused', 'cping', 'since', 'reads', 'second', 'sendheaders', 'response', 'packet', 'instead', 'cpong']"
107,107,-1.2259656,-47.09558,7.5,"When a POST request comes through AJP and the request exceeds the max-post-size limit (maxEntitySize), Undertow's AjpServerRequestConduit implementation closes a connection without sending any response to the client/proxy. This behavior results in that a front-end proxy marking the backend worker (application server) as an error state and not forward requests to the worker for a while. In mod_cluster, this continues until the next STATUS request (10 seconds intervals) from the application server updates the server state. So, in the worst case, it can result in ""All workers are in error state"" and mod_cluster responds ""503 Service Unavailable"" for a while (up to 10 seconds). In mod_proxy_balancer, it does not forward requests to the worker until the ""retry"" timeout passes. However, luckily, mod_proxy_balancer has ""forcerecovery"" setting (On by default; this parameter can force the immediate recovery of all workers without considering the retry parameter of the workers if all workers of a balancer are in error state.). So, unlike mod_cluster, mod_proxy_balancer does not result in responding ""503 Service Unavailable"". An attacker could use this behavior to send a malicious request and trigger server errors, resulting in DoS (denial of service). This flaw was fixed in Undertow 2.2.19.Final, Undertow 2.3.0.Alpha2.",27,post request comes ajp request exceeds maxpostsize limit maxentitysize undertows ajpserverrequestconduit implementation closes connection without sending response clientproxy behavior results frontend proxy marking backend worker application server error state forward requests worker modcluster continues next status request seconds intervals application server updates server state worst case result workers error state modcluster responds service unavailable seconds modproxybalancer forward requests worker retry timeout passes however luckily modproxybalancer forcerecovery setting default parameter force immediate recovery workers without considering retry parameter workers workers balancer error state unlike modcluster modproxybalancer result responding service unavailable attacker could use behavior send malicious request trigger server errors resulting dos denial service fixed undertow final undertow alpha,"['post', 'request', 'comes', 'ajp', 'request', 'exceeds', 'maxpostsize', 'limit', 'maxentitysize', 'undertows', 'ajpserverrequestconduit', 'implementation', 'closes', 'connection', 'without', 'sending', 'response', 'clientproxy', 'behavior', 'results', 'frontend', 'proxy', 'marking', 'backend', 'worker', 'application', 'server', 'error', 'state', 'forward', 'requests', 'worker', 'modcluster', 'continues', 'next', 'status', 'request', 'seconds', 'intervals', 'application', 'server', 'updates', 'server', 'state', 'worst', 'case', 'result', 'workers', 'error', 'state', 'modcluster', 'responds', 'service', 'unavailable', 'seconds', 'modproxybalancer', 'forward', 'requests', 'worker', 'retry', 'timeout', 'passes', 'however', 'luckily', 'modproxybalancer', 'forcerecovery', 'setting', 'default', 'parameter', 'force', 'immediate', 'recovery', 'workers', 'without', 'considering', 'retry', 'parameter', 'workers', 'workers', 'balancer', 'error', 'state', 'unlike', 'modcluster', 'modproxybalancer', 'result', 'responding', 'service', 'unavailable', 'attacker', 'could', 'use', 'behavior', 'send', 'malicious', 'request', 'trigger', 'server', 'errors', 'resulting', 'dos', 'denial', 'service', 'fixed', 'undertow', 'final', 'undertow', 'alpha']"
108,108,0.34386048,-45.314526,4.9,A flaw was found in Undertow. Denial of service can be achieved as Undertow server waits for the LAST_CHUNK forever for EJB invocations.,27,undertow denial service achieved undertow server waits lastchunk forever ejb invocations,"['undertow', 'denial', 'service', 'achieved', 'undertow', 'server', 'waits', 'lastchunk', 'forever', 'ejb', 'invocations']"
109,109,3.127935,-42.018112,7.5,The undertow client is not checking the server identity presented by the server certificate in https connections. This is a compulsory step (at least it should be performed by default) in https and in http/2. I would add it to any TLS client protocol.,27,undertow client checking server identity presented server certificate https connections compulsory step least performed default https http would add tls client protocol,"['undertow', 'client', 'checking', 'server', 'identity', 'presented', 'server', 'certificate', 'https', 'connections', 'compulsory', 'step', 'least', 'performed', 'default', 'https', 'http', 'would', 'add', 'tls', 'client', 'protocol']"
110,110,-0.43118197,-43.61415,7.5,undertow - Loop with Unreachable Exit Condition ('Infinite Loop'),27,undertow loop unreachable exit condition infinite loop,"['undertow', 'loop', 'unreachable', 'exit', 'condition', 'infinite', 'loop']"
111,111,-0.71775365,-54.82797,6.0,"A vulnerability was found in Wildfly in versions before 20.0.0.Final, where a remote deserialization attack is possible in the Enterprise Application Beans(EJB) due to lack of validation/filtering capabilities in wildfly.",25,vulnerability wildfly versions final remote deserialization attack possible enterprise application beansejb due lack validationfiltering capabilities wildfly,"['vulnerability', 'wildfly', 'versions', 'final', 'remote', 'deserialization', 'attack', 'possible', 'enterprise', 'application', 'beansejb', 'due', 'lack', 'validationfiltering', 'capabilities', 'wildfly']"
112,112,-4.4263945,-1.5573418,5.0,A flaw was found in RESTEasy client in all versions of RESTEasy up to 4.5.6.Final. It may allow client users to obtain the server's potentially sensitive information when the server got WebApplicationException from the RESTEasy client call. The highest threat from this vulnerability is to data confidentiality.,3,resteasy client versions resteasy final may allow client users obtain servers potentially sensitive information server got webapplicationexception resteasy client call highest threat vulnerability data confidentiality,"['resteasy', 'client', 'versions', 'resteasy', 'final', 'may', 'allow', 'client', 'users', 'obtain', 'servers', 'potentially', 'sensitive', 'information', 'server', 'got', 'webapplicationexception', 'resteasy', 'client', 'call', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality']"
113,113,-1.099454,-3.7434993,5.5,"In RESTEasy the insecure File.createTempFile() is used in the DataSourceProvider, FileProvider and Mime4JWorkaround classes which creates temp files with insecure permissions that could be read by a local user.",16,resteasy insecure filecreatetempfile used datasourceprovider fileprovider mimejworkaround classes creates temp files insecure permissions could read local user,"['resteasy', 'insecure', 'filecreatetempfile', 'used', 'datasourceprovider', 'fileprovider', 'mimejworkaround', 'classes', 'creates', 'temp', 'files', 'insecure', 'permissions', 'could', 'read', 'local', 'user']"
114,114,-15.52202,18.769537,4.3,"The SSI printenv command in Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 echoes user provided data without escaping and is, therefore, vulnerable to XSS. SSI is disabled by default. The printenv command is intended for debugging and is unlikely to be present in a production website.",28,ssi printenv command apache tomcat echoes user provided data without escaping therefore xss ssi disabled default printenv command intended debugging unlikely present production website,"['ssi', 'printenv', 'command', 'apache', 'tomcat', 'echoes', 'user', 'provided', 'data', 'without', 'escaping', 'therefore', 'xss', 'ssi', 'disabled', 'default', 'printenv', 'command', 'intended', 'debugging', 'unlikely', 'present', 'production', 'website']"
115,115,15.440511,-14.589724,9.3,"When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).",29,running windows enablecmdlinearguments enabled cgi servlet apache tomcat remote code execution due bug way jre passes command line arguments windows cgi servlet disabled default cgi option enablecmdlinearguments disable default tomcat disabled default versions response vulnerability detailed explanation jre behaviour see markus wulftanges blog archived msdn blog,"['running', 'windows', 'enablecmdlinearguments', 'enabled', 'cgi', 'servlet', 'apache', 'tomcat', 'remote', 'code', 'execution', 'due', 'bug', 'way', 'jre', 'passes', 'command', 'line', 'arguments', 'windows', 'cgi', 'servlet', 'disabled', 'default', 'cgi', 'option', 'enablecmdlinearguments', 'disable', 'default', 'tomcat', 'disabled', 'default', 'versions', 'response', 'vulnerability', 'detailed', 'explanation', 'jre', 'behaviour', 'see', 'markus', 'wulftanges', 'blog', 'archived', 'msdn', 'blog']"
116,116,16.214823,-21.16948,5.1,"When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.",15,using form authentication apache tomcat narrow window attacker could perform session fixation attack window considered narrow exploit practical erring side caution issue treated security vulnerability,"['using', 'form', 'authentication', 'apache', 'tomcat', 'narrow', 'window', 'attacker', 'could', 'perform', 'session', 'fixation', 'attack', 'window', 'considered', 'narrow', 'exploit', 'practical', 'erring', 'side', 'caution', 'issue', 'treated', 'security', 'vulnerability']"
117,117,20.196543,-38.291336,5.0,"The payload length in a WebSocket frame was not correctly validated in Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M1 to 9.0.36, 8.5.0 to 8.5.56 and 7.0.27 to 7.0.104. Invalid payload lengths could trigger an infinite loop. Multiple requests with invalid payload lengths could lead to a denial of service.",24,payload length websocket frame correctly validated apache tomcat invalid payload lengths could trigger infinite loop multiple requests invalid payload lengths could lead denial service,"['payload', 'length', 'websocket', 'frame', 'correctly', 'validated', 'apache', 'tomcat', 'invalid', 'payload', 'lengths', 'could', 'trigger', 'infinite', 'loop', 'multiple', 'requests', 'invalid', 'payload', 'lengths', 'could', 'lead', 'denial', 'service']"
118,118,10.702673,-17.363157,4.4,"When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=""null"" (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.",30,using apache tomcat versions attacker able control contents name file server server configured use persistencemanager filestore persistencemanager configured sessionattributevalueclassnamefilternull default unless securitymanager used sufficiently lax filter allow attacker provided object deserialized attacker knows relative file path storage location used filestore file attacker control using specifically crafted request attacker able trigger remote code execution via deserialization file control note conditions must true attack succeed,"['using', 'apache', 'tomcat', 'versions', 'attacker', 'able', 'control', 'contents', 'name', 'file', 'server', 'server', 'configured', 'use', 'persistencemanager', 'filestore', 'persistencemanager', 'configured', 'sessionattributevalueclassnamefilternull', 'default', 'unless', 'securitymanager', 'used', 'sufficiently', 'lax', 'filter', 'allow', 'attacker', 'provided', 'object', 'deserialized', 'attacker', 'knows', 'relative', 'file', 'path', 'storage', 'location', 'used', 'filestore', 'file', 'attacker', 'control', 'using', 'specifically', 'crafted', 'request', 'attacker', 'able', 'trigger', 'remote', 'code', 'execution', 'via', 'deserialization', 'file', 'control', 'note', 'conditions', 'must', 'true', 'attack', 'succeed']"
119,119,18.575356,-11.308766,4.3,"When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.",31,serving resources network location using ntfs file system apache tomcat versions susceptible jsp source code disclosure configurations root unexpected behaviour jre api filegetcanonicalpath turn caused inconsistent behaviour windows api findfirstfilew circumstances,"['serving', 'resources', 'network', 'location', 'using', 'ntfs', 'file', 'system', 'apache', 'tomcat', 'versions', 'susceptible', 'jsp', 'source', 'code', 'disclosure', 'configurations', 'root', 'unexpected', 'behaviour', 'jre', 'api', 'filegetcanonicalpath', 'turn', 'caused', 'inconsistent', 'behaviour', 'windows', 'api', 'findfirstfilew', 'circumstances']"
120,120,13.518546,-21.402197,5.8,A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.,15,vulnerability jndi realm apache tomcat allows attacker authenticate using variations valid user name andor bypass protection provided lockout realm issue affects apache tomcat,"['vulnerability', 'jndi', 'realm', 'apache', 'tomcat', 'allows', 'attacker', 'authenticate', 'using', 'variations', 'valid', 'user', 'name', 'andor', 'bypass', 'protection', 'provided', 'lockout', 'realm', 'issue', 'affects', 'apache', 'tomcat']"
121,121,19.340635,-23.846334,4.3,"When using the RemoteIpFilter with requests received from a reverse proxy via HTTP that include the X-Forwarded-Proto header set to https, session cookies created by Apache Tomcat 11.0.0-M1 to 11.0.0.-M2, 10.1.0-M1 to 10.1.5, 9.0.0-M1 to 9.0.71 and 8.5.0 to 8.5.85 did not include the secure attribute. This could result in the user agent transmitting the session cookie over an insecure channel.",32,using remoteipfilter requests received reverse proxy via http include xforwardedproto header set https session cookies created apache tomcat include secure attribute could result user agent transmitting session cookie insecure channel,"['using', 'remoteipfilter', 'requests', 'received', 'reverse', 'proxy', 'via', 'http', 'include', 'xforwardedproto', 'header', 'set', 'https', 'session', 'cookies', 'created', 'apache', 'tomcat', 'include', 'secure', 'attribute', 'could', 'result', 'user', 'agent', 'transmitting', 'session', 'cookie', 'insecure', 'channel']"
122,122,22.511372,45.729187,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
123,123,-13.420366,25.01859,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
124,124,52.337723,40.80229,5.0,"In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",35,eclipse jetty version older older older server running os jetty version combination reveal configured fully qualified directory base resource location output error finding context matches requested path default server behavior jettydistribution jettyhome include end handler tree defaulthandler responsible reporting error presents various configured contexts html users click produced html includes output contains configured fully qualified directory base resource location context,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'running', 'os', 'jetty', 'version', 'combination', 'reveal', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'output', 'error', 'finding', 'context', 'matches', 'requested', 'path', 'default', 'server', 'behavior', 'jettydistribution', 'jettyhome', 'include', 'end', 'handler', 'tree', 'defaulthandler', 'responsible', 'reporting', 'error', 'presents', 'various', 'configured', 'contexts', 'html', 'users', 'click', 'produced', 'html', 'includes', 'output', 'contains', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'context']"
125,125,-38.387844,-14.186119,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
126,126,-30.662151,-40.76148,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
127,127,14.03481,70.25274,5.3,"Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `""` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=""b; JSESSIONID=1337; c=d""` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",38,jetty java based web server servlet engine nonstandard cookie parsing jetty may allow attacker smuggle cookies within cookies otherwise perform unintended behavior tampering cookie parsing mechanism jetty sees cookie value starts double quote continue read cookie string sees closing quote even semicolon encountered cookie header displaylanguageb jsessionid cd parsed one cookie name displaylanguage value jsessionid cd instead separate cookies security implications say jsessionid httponly cookie displaylanguage cookie value rendered page attacker smuggle jsessionid cookie displaylanguage cookie thereby exfiltrate significant intermediary enacting policy based cookies smuggled cookie bypass policy yet still seen jetty server logging system issue addressed versions beta users advised upgrade known workarounds issue,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'nonstandard', 'cookie', 'parsing', 'jetty', 'may', 'allow', 'attacker', 'smuggle', 'cookies', 'within', 'cookies', 'otherwise', 'perform', 'unintended', 'behavior', 'tampering', 'cookie', 'parsing', 'mechanism', 'jetty', 'sees', 'cookie', 'value', 'starts', 'double', 'quote', 'continue', 'read', 'cookie', 'string', 'sees', 'closing', 'quote', 'even', 'semicolon', 'encountered', 'cookie', 'header', 'displaylanguageb', 'jsessionid', 'cd', 'parsed', 'one', 'cookie', 'name', 'displaylanguage', 'value', 'jsessionid', 'cd', 'instead', 'separate', 'cookies', 'security', 'implications', 'say', 'jsessionid', 'httponly', 'cookie', 'displaylanguage', 'cookie', 'value', 'rendered', 'page', 'attacker', 'smuggle', 'jsessionid', 'cookie', 'displaylanguage', 'cookie', 'thereby', 'exfiltrate', 'significant', 'intermediary', 'enacting', 'policy', 'based', 'cookies', 'smuggled', 'cookie', 'bypass', 'policy', 'yet', 'still', 'seen', 'jetty', 'server', 'logging', 'system', 'issue', 'addressed', 'versions', 'beta', 'users', 'advised', 'upgrade', 'known', 'workarounds', 'issue']"
128,128,-34.9441,28.395634,9.8,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",39,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled transferencoding chunks handled poorly chunk length parsing integer overflow thus large chunk size could interpreted smaller chunk size content sent chunk body could interpreted pipelined request jetty deployed behind intermediary imposed authorization intermediary allowed arbitrarily large chunks passed unchanged could used bypass authorization imposed intermediary fake pipelined request would interpreted intermediary request,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'transferencoding', 'chunks', 'handled', 'poorly', 'chunk', 'length', 'parsing', 'integer', 'overflow', 'thus', 'large', 'chunk', 'size', 'could', 'interpreted', 'smaller', 'chunk', 'size', 'content', 'sent', 'chunk', 'body', 'could', 'interpreted', 'pipelined', 'request', 'jetty', 'deployed', 'behind', 'intermediary', 'imposed', 'authorization', 'intermediary', 'allowed', 'arbitrarily', 'large', 'chunks', 'passed', 'unchanged', 'could', 'used', 'bypass', 'authorization', 'imposed', 'intermediary', 'fake', 'pipelined', 'request', 'would', 'interpreted', 'intermediary', 'request']"
129,129,-31.609324,10.102348,9.8,"In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization. Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2017-7658 for details",40,eclipse jetty server versions older non httpx configurations httpx configurations presented two contentlengths headers jetty ignored second presented contentlength chunked encoding header contentlength ignored per rfc intermediary decided shorter length still passed longer body body content could interpreted jetty pipelined request intermediary imposing authorization fake pipelined request would bypass authorization sonatypes research suggests cves details differ defined nvd see details,"['eclipse', 'jetty', 'server', 'versions', 'older', 'non', 'httpx', 'configurations', 'httpx', 'configurations', 'presented', 'two', 'contentlengths', 'headers', 'jetty', 'ignored', 'second', 'presented', 'contentlength', 'chunked', 'encoding', 'header', 'contentlength', 'ignored', 'per', 'rfc', 'intermediary', 'decided', 'shorter', 'length', 'still', 'passed', 'longer', 'body', 'body', 'content', 'could', 'interpreted', 'jetty', 'pipelined', 'request', 'intermediary', 'imposing', 'authorization', 'fake', 'pipelined', 'request', 'would', 'bypass', 'authorization', 'sonatypes', 'research', 'suggests', 'cves', 'details', 'differ', 'defined', 'nvd', 'see', 'details']"
130,130,-39.097366,-10.615625,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
131,131,-24.14821,51.036217,7.8,"In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",41,eclipse jetty alpha alpha cpu usage reach upon receiving large invalid tls frame,"['eclipse', 'jetty', 'alpha', 'alpha', 'cpu', 'usage', 'reach', 'upon', 'receiving', 'large', 'invalid', 'tls', 'frame']"
132,132,-20.044413,-67.30216,7.5,"Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",42,jetty prone timing channel utilsecuritypasswordjava makes easier remote attackers obtain access observing elapsed times rejection incorrect passwords,"['jetty', 'prone', 'timing', 'channel', 'utilsecuritypasswordjava', 'makes', 'easier', 'remote', 'attackers', 'obtain', 'access', 'observing', 'elapsed', 'times', 'rejection', 'incorrect', 'passwords']"
133,133,-14.354419,23.009691,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
134,134,43.109913,28.402052,5.0,"In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",43,eclipse jetty version server running windows exposure fully qualified base resource directory name windows remote client configured showing listing directory contents information reveal restricted content configured base resource directories,"['eclipse', 'jetty', 'version', 'server', 'running', 'windows', 'exposure', 'fully', 'qualified', 'base', 'resource', 'directory', 'name', 'windows', 'remote', 'client', 'configured', 'showing', 'listing', 'directory', 'contents', 'information', 'reveal', 'restricted', 'content', 'configured', 'base', 'resource', 'directories']"
135,135,-29.694862,-41.58963,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
136,136,-15.521667,18.769588,4.3,"The SSI printenv command in Apache Tomcat 9.0.0.M1 to 9.0.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 echoes user provided data without escaping and is, therefore, vulnerable to XSS. SSI is disabled by default. The printenv command is intended for debugging and is unlikely to be present in a production website.",28,ssi printenv command apache tomcat echoes user provided data without escaping therefore xss ssi disabled default printenv command intended debugging unlikely present production website,"['ssi', 'printenv', 'command', 'apache', 'tomcat', 'echoes', 'user', 'provided', 'data', 'without', 'escaping', 'therefore', 'xss', 'ssi', 'disabled', 'default', 'printenv', 'command', 'intended', 'debugging', 'unlikely', 'present', 'production', 'website']"
137,137,15.15192,-14.039341,9.3,"When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).",29,running windows enablecmdlinearguments enabled cgi servlet apache tomcat remote code execution due bug way jre passes command line arguments windows cgi servlet disabled default cgi option enablecmdlinearguments disable default tomcat disabled default versions response vulnerability detailed explanation jre behaviour see markus wulftanges blog archived msdn blog,"['running', 'windows', 'enablecmdlinearguments', 'enabled', 'cgi', 'servlet', 'apache', 'tomcat', 'remote', 'code', 'execution', 'due', 'bug', 'way', 'jre', 'passes', 'command', 'line', 'arguments', 'windows', 'cgi', 'servlet', 'disabled', 'default', 'cgi', 'option', 'enablecmdlinearguments', 'disable', 'default', 'tomcat', 'disabled', 'default', 'versions', 'response', 'vulnerability', 'detailed', 'explanation', 'jre', 'behaviour', 'see', 'markus', 'wulftanges', 'blog', 'archived', 'msdn', 'blog']"
138,138,16.21492,-21.169455,5.1,"When using FORM authentication with Apache Tomcat 9.0.0.M1 to 9.0.29, 8.5.0 to 8.5.49 and 7.0.0 to 7.0.98 there was a narrow window where an attacker could perform a session fixation attack. The window was considered too narrow for an exploit to be practical but, erring on the side of caution, this issue has been treated as a security vulnerability.",15,using form authentication apache tomcat narrow window attacker could perform session fixation attack window considered narrow exploit practical erring side caution issue treated security vulnerability,"['using', 'form', 'authentication', 'apache', 'tomcat', 'narrow', 'window', 'attacker', 'could', 'perform', 'session', 'fixation', 'attack', 'window', 'considered', 'narrow', 'exploit', 'practical', 'erring', 'side', 'caution', 'issue', 'treated', 'security', 'vulnerability']"
139,139,10.702673,-17.363268,4.4,"When using Apache Tomcat versions 10.0.0-M1 to 10.0.0-M4, 9.0.0.M1 to 9.0.34, 8.5.0 to 8.5.54 and 7.0.0 to 7.0.103 if a) an attacker is able to control the contents and name of a file on the server; and b) the server is configured to use the PersistenceManager with a FileStore; and c) the PersistenceManager is configured with sessionAttributeValueClassNameFilter=""null"" (the default unless a SecurityManager is used) or a sufficiently lax filter to allow the attacker provided object to be deserialized; and d) the attacker knows the relative file path from the storage location used by FileStore to the file the attacker has control over; then, using a specifically crafted request, the attacker will be able to trigger remote code execution via deserialization of the file under their control. Note that all of conditions a) to d) must be true for the attack to succeed.",30,using apache tomcat versions attacker able control contents name file server server configured use persistencemanager filestore persistencemanager configured sessionattributevalueclassnamefilternull default unless securitymanager used sufficiently lax filter allow attacker provided object deserialized attacker knows relative file path storage location used filestore file attacker control using specifically crafted request attacker able trigger remote code execution via deserialization file control note conditions must true attack succeed,"['using', 'apache', 'tomcat', 'versions', 'attacker', 'able', 'control', 'contents', 'name', 'file', 'server', 'server', 'configured', 'use', 'persistencemanager', 'filestore', 'persistencemanager', 'configured', 'sessionattributevalueclassnamefilternull', 'default', 'unless', 'securitymanager', 'used', 'sufficiently', 'lax', 'filter', 'allow', 'attacker', 'provided', 'object', 'deserialized', 'attacker', 'knows', 'relative', 'file', 'path', 'storage', 'location', 'used', 'filestore', 'file', 'attacker', 'control', 'using', 'specifically', 'crafted', 'request', 'attacker', 'able', 'trigger', 'remote', 'code', 'execution', 'via', 'deserialization', 'file', 'control', 'note', 'conditions', 'must', 'true', 'attack', 'succeed']"
140,140,18.575386,-11.308777,4.3,"When serving resources from a network location using the NTFS file system, Apache Tomcat versions 10.0.0-M1 to 10.0.0-M9, 9.0.0.M1 to 9.0.39, 8.5.0 to 8.5.59 and 7.0.0 to 7.0.106 were susceptible to JSP source code disclosure in some configurations. The root cause was the unexpected behaviour of the JRE API File.getCanonicalPath() which in turn was caused by the inconsistent behaviour of the Windows API (FindFirstFileW) in some circumstances.",31,serving resources network location using ntfs file system apache tomcat versions susceptible jsp source code disclosure configurations root unexpected behaviour jre api filegetcanonicalpath turn caused inconsistent behaviour windows api findfirstfilew circumstances,"['serving', 'resources', 'network', 'location', 'using', 'ntfs', 'file', 'system', 'apache', 'tomcat', 'versions', 'susceptible', 'jsp', 'source', 'code', 'disclosure', 'configurations', 'root', 'unexpected', 'behaviour', 'jre', 'api', 'filegetcanonicalpath', 'turn', 'caused', 'inconsistent', 'behaviour', 'windows', 'api', 'findfirstfilew', 'circumstances']"
141,141,13.520621,-21.403736,5.8,A vulnerability in the JNDI Realm of Apache Tomcat allows an attacker to authenticate using variations of a valid user name and/or to bypass some of the protection provided by the LockOut Realm. This issue affects Apache Tomcat 10.0.0-M1 to 10.0.5; 9.0.0.M1 to 9.0.45; 8.5.0 to 8.5.65.,15,vulnerability jndi realm apache tomcat allows attacker authenticate using variations valid user name andor bypass protection provided lockout realm issue affects apache tomcat,"['vulnerability', 'jndi', 'realm', 'apache', 'tomcat', 'allows', 'attacker', 'authenticate', 'using', 'variations', 'valid', 'user', 'name', 'andor', 'bypass', 'protection', 'provided', 'lockout', 'realm', 'issue', 'affects', 'apache', 'tomcat']"
142,142,19.340675,-23.846292,4.3,"When using the RemoteIpFilter with requests received from a reverse proxy via HTTP that include the X-Forwarded-Proto header set to https, session cookies created by Apache Tomcat 11.0.0-M1 to 11.0.0.-M2, 10.1.0-M1 to 10.1.5, 9.0.0-M1 to 9.0.71 and 8.5.0 to 8.5.85 did not include the secure attribute. This could result in the user agent transmitting the session cookie over an insecure channel.",32,using remoteipfilter requests received reverse proxy via http include xforwardedproto header set https session cookies created apache tomcat include secure attribute could result user agent transmitting session cookie insecure channel,"['using', 'remoteipfilter', 'requests', 'received', 'reverse', 'proxy', 'via', 'http', 'include', 'xforwardedproto', 'header', 'set', 'https', 'session', 'cookies', 'created', 'apache', 'tomcat', 'include', 'secure', 'attribute', 'could', 'result', 'user', 'agent', 'transmitting', 'session', 'cookie', 'insecure', 'channel']"
143,143,18.780972,-33.66114,5.0,The fix for CVE-2019-0199 was incomplete and did not address HTTP/2 connection window exhaustion on write in Apache Tomcat versions 9.0.0.M1 to 9.0.19 and 8.5.0 to 8.5.40 . By not sending WINDOW_UPDATE messages for the connection window (stream 0) clients were able to cause server-side threads to block eventually leading to thread exhaustion and a DoS.,44,fix cve incomplete address http connection window exhaustion write apache tomcat versions sending windowupdate messages connection window stream clients able cause serverside threads block eventually leading thread exhaustion dos,"['fix', 'cve', 'incomplete', 'address', 'http', 'connection', 'window', 'exhaustion', 'write', 'apache', 'tomcat', 'versions', 'sending', 'windowupdate', 'messages', 'connection', 'window', 'stream', 'clients', 'able', 'cause', 'serverside', 'threads', 'block', 'eventually', 'leading', 'thread', 'exhaustion', 'dos']"
144,144,20.478306,-33.76952,5.0,"A specially crafted sequence of HTTP/2 requests sent to Apache Tomcat 10.0.0-M1 to 10.0.0-M5, 9.0.0.M1 to 9.0.35 and 8.5.0 to 8.5.55 could trigger high CPU usage for several seconds. If a sufficient number of such requests were made on concurrent HTTP/2 connections, the server could become unresponsive.",44,specially crafted sequence http requests sent apache tomcat could trigger high cpu usage several seconds sufficient number requests made concurrent http connections server could become unresponsive,"['specially', 'crafted', 'sequence', 'http', 'requests', 'sent', 'apache', 'tomcat', 'could', 'trigger', 'high', 'cpu', 'usage', 'several', 'seconds', 'sufficient', 'number', 'requests', 'made', 'concurrent', 'http', 'connections', 'server', 'could', 'become', 'unresponsive']"
145,145,20.881264,-34.42065,5.0,"An h2c direct connection to Apache Tomcat 10.0.0-M1 to 10.0.0-M6, 9.0.0.M5 to 9.0.36 and 8.5.1 to 8.5.56 did not release the HTTP/1.1 processor after the upgrade to HTTP/2. If a sufficient number of such requests were made, an OutOfMemoryException could occur leading to a denial of service.",44,hc direct connection apache tomcat release http processor upgrade http sufficient number requests made outofmemoryexception could occur leading denial service,"['hc', 'direct', 'connection', 'apache', 'tomcat', 'release', 'http', 'processor', 'upgrade', 'http', 'sufficient', 'number', 'requests', 'made', 'outofmemoryexception', 'could', 'occur', 'leading', 'denial', 'service']"
146,146,20.730173,-31.832748,4.0,"If an HTTP/2 client connecting to Apache Tomcat 10.0.0-M1 to 10.0.0-M7, 9.0.0.M1 to 9.0.37 or 8.5.0 to 8.5.57 exceeded the agreed maximum number of concurrent streams for a connection (in violation of the HTTP/2 protocol), it was possible that a subsequent request made on that connection could contain HTTP headers - including HTTP/2 pseudo headers - from a previous request rather than the intended headers. This could lead to users seeing responses for unexpected resources.",44,http client connecting apache tomcat exceeded agreed maximum number concurrent streams connection violation http protocol possible subsequent request made connection could contain http headers including http pseudo headers previous request rather intended headers could lead users seeing responses unexpected resources,"['http', 'client', 'connecting', 'apache', 'tomcat', 'exceeded', 'agreed', 'maximum', 'number', 'concurrent', 'streams', 'connection', 'violation', 'http', 'protocol', 'possible', 'subsequent', 'request', 'made', 'connection', 'could', 'contain', 'http', 'headers', 'including', 'http', 'pseudo', 'headers', 'previous', 'request', 'rather', 'intended', 'headers', 'could', 'lead', 'users', 'seeing', 'responses', 'unexpected', 'resources']"
147,147,20.663074,-31.668827,5.0,"While investigating bug 64830 it was discovered that Apache Tomcat 10.0.0-M1 to 10.0.0-M9, 9.0.0-M1 to 9.0.39 and 8.5.0 to 8.5.59 could re-use an HTTP request header value from the previous stream received on an HTTP/2 connection for the request associated with the subsequent stream. While this would most likely lead to an error and the closure of the HTTP/2 connection, it is possible that information could leak between requests.",44,investigating bug discovered apache tomcat could reuse http request header value previous stream received http connection request associated subsequent stream would likely lead error closure http connection possible information could leak requests,"['investigating', 'bug', 'discovered', 'apache', 'tomcat', 'could', 'reuse', 'http', 'request', 'header', 'value', 'previous', 'stream', 'received', 'http', 'connection', 'request', 'associated', 'subsequent', 'stream', 'would', 'likely', 'lead', 'error', 'closure', 'http', 'connection', 'possible', 'information', 'could', 'leak', 'requests']"
148,148,20.883848,-28.917135,5.8,"In Apache Tomcat 9.0.0.M1 to 9.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99 the HTTP header parsing code used an approach to end-of-line parsing that allowed some invalid HTTP headers to be parsed as valid. This led to a possibility of HTTP Request Smuggling if Tomcat was located behind a reverse proxy that incorrectly handled the invalid Transfer-Encoding header in a particular manner. Such a reverse proxy is considered unlikely.",44,apache tomcat http header parsing code used approach endofline parsing allowed invalid http headers parsed valid led possibility http request smuggling tomcat located behind reverse proxy incorrectly handled invalid transferencoding header particular manner reverse proxy considered unlikely,"['apache', 'tomcat', 'http', 'header', 'parsing', 'code', 'used', 'approach', 'endofline', 'parsing', 'allowed', 'invalid', 'http', 'headers', 'parsed', 'valid', 'led', 'possibility', 'http', 'request', 'smuggling', 'tomcat', 'located', 'behind', 'reverse', 'proxy', 'incorrectly', 'handled', 'invalid', 'transferencoding', 'header', 'particular', 'manner', 'reverse', 'proxy', 'considered', 'unlikely']"
149,149,14.852844,-15.68848,7.5,"When using the Apache JServ Protocol (AJP), care must be taken when trusting incoming connections to Apache Tomcat. Tomcat treats AJP connections as having higher trust than, for example, a similar HTTP connection. If such connections are available to an attacker, they can be exploited in ways that may be surprising. In Apache Tomcat 9.0.0.M1 to 9.0.0.30, 8.5.0 to 8.5.50 and 7.0.0 to 7.0.99, Tomcat shipped with an AJP Connector enabled by default that listened on all configured IP addresses. It was expected (and recommended in the security guide) that this Connector would be disabled if not required. This vulnerability report identified a mechanism that allowed: - returning arbitrary files from anywhere in the web application - processing any file in the web application as a JSP Further, if the web application allowed file upload and stored those files within the web application (or the attacker was able to control the content of the web application by some other means) then this, along with the ability to process a file as a JSP, made remote code execution possible. It is important to note that mitigation is only required if an AJP port is accessible to untrusted users. Users wishing to take a defence-in-depth approach and block the vector that permits returning arbitrary files and execution as JSP may upgrade to Apache Tomcat 9.0.31, 8.5.51 or 7.0.100 or later. A number of changes were made to the default AJP Connector configuration in 9.0.31 to harden the default configuration. It is likely that users upgrading to 9.0.31, 8.5.51 or 7.0.100 or later will need to make small changes to their configurations.",29,using apache jserv protocol ajp care must taken trusting incoming connections apache tomcat tomcat treats ajp connections higher trust example similar http connection connections available attacker exploited ways may surprising apache tomcat tomcat shipped ajp connector enabled default listened configured ip addresses expected recommended security guide connector would disabled required vulnerability report identified mechanism allowed returning arbitrary files anywhere web application processing file web application jsp web application allowed file upload stored files within web application attacker able control content web application means along ability process file jsp made remote code execution possible important note mitigation required ajp port accessible users users wishing take defenceindepth approach block vector permits returning arbitrary files execution jsp may upgrade apache tomcat later number changes made default ajp connector configuration harden default configuration likely users upgrading later need make small changes configurations,"['using', 'apache', 'jserv', 'protocol', 'ajp', 'care', 'must', 'taken', 'trusting', 'incoming', 'connections', 'apache', 'tomcat', 'tomcat', 'treats', 'ajp', 'connections', 'higher', 'trust', 'example', 'similar', 'http', 'connection', 'connections', 'available', 'attacker', 'exploited', 'ways', 'may', 'surprising', 'apache', 'tomcat', 'tomcat', 'shipped', 'ajp', 'connector', 'enabled', 'default', 'listened', 'configured', 'ip', 'addresses', 'expected', 'recommended', 'security', 'guide', 'connector', 'would', 'disabled', 'required', 'vulnerability', 'report', 'identified', 'mechanism', 'allowed', 'returning', 'arbitrary', 'files', 'anywhere', 'web', 'application', 'processing', 'file', 'web', 'application', 'jsp', 'web', 'application', 'allowed', 'file', 'upload', 'stored', 'files', 'within', 'web', 'application', 'attacker', 'able', 'control', 'content', 'web', 'application', 'means', 'along', 'ability', 'process', 'file', 'jsp', 'made', 'remote', 'code', 'execution', 'possible', 'important', 'note', 'mitigation', 'required', 'ajp', 'port', 'accessible', 'users', 'users', 'wishing', 'take', 'defenceindepth', 'approach', 'block', 'vector', 'permits', 'returning', 'arbitrary', 'files', 'execution', 'jsp', 'may', 'upgrade', 'apache', 'tomcat', 'later', 'number', 'changes', 'made', 'default', 'ajp', 'connector', 'configuration', 'harden', 'default', 'configuration', 'likely', 'users', 'upgrading', 'later', 'need', 'make', 'small', 'changes', 'configurations']"
150,150,21.630451,-31.740866,5.0,"When responding to new h2c connection requests, Apache Tomcat versions 10.0.0-M1 to 10.0.0, 9.0.0.M1 to 9.0.41 and 8.5.0 to 8.5.61 could duplicate request headers and a limited amount of request body from one request to another meaning user A and user B could both see the results of user A's request.",44,responding new hc connection requests apache tomcat versions could duplicate request headers limited amount request body one request another meaning user user could see results user request,"['responding', 'new', 'hc', 'connection', 'requests', 'apache', 'tomcat', 'versions', 'could', 'duplicate', 'request', 'headers', 'limited', 'amount', 'request', 'body', 'one', 'request', 'another', 'meaning', 'user', 'user', 'could', 'see', 'results', 'user', 'request']"
151,151,20.92467,-28.662992,5.0,"Apache Tomcat 10.0.0-M1 to 10.0.6, 9.0.0.M1 to 9.0.46 and 8.5.0 to 8.5.66 did not correctly parse the HTTP transfer-encoding request header in some circumstances leading to the possibility to request smuggling when used with a reverse proxy. Specifically: - Tomcat incorrectly ignored the transfer encoding header if the client declared it would only accept an HTTP/1.0 response; - Tomcat honoured the identify encoding; and - Tomcat did not ensure that, if present, the chunked encoding was the final encoding.",44,apache tomcat correctly parse http transferencoding request header circumstances leading possibility request smuggling used reverse proxy specifically tomcat incorrectly ignored transfer encoding header client declared would accept http response tomcat honoured identify encoding tomcat ensure present chunked encoding final encoding,"['apache', 'tomcat', 'correctly', 'parse', 'http', 'transferencoding', 'request', 'header', 'circumstances', 'leading', 'possibility', 'request', 'smuggling', 'used', 'reverse', 'proxy', 'specifically', 'tomcat', 'incorrectly', 'ignored', 'transfer', 'encoding', 'header', 'client', 'declared', 'would', 'accept', 'http', 'response', 'tomcat', 'honoured', 'identify', 'encoding', 'tomcat', 'ensure', 'present', 'chunked', 'encoding', 'final', 'encoding']"
152,152,21.089472,-35.384018,4.3,"Apache Tomcat 8.5.0 to 8.5.63, 9.0.0-M1 to 9.0.43 and 10.0.0-M1 to 10.0.2 did not properly validate incoming TLS packets. When Tomcat was configured to use NIO+OpenSSL or NIO2+OpenSSL for TLS, a specially crafted packet could be used to trigger an infinite loop resulting in a denial of service.",44,apache tomcat properly validate incoming tls packets tomcat configured use nioopenssl nioopenssl tls specially crafted packet could used trigger infinite loop resulting denial service,"['apache', 'tomcat', 'properly', 'validate', 'incoming', 'tls', 'packets', 'tomcat', 'configured', 'use', 'nioopenssl', 'nioopenssl', 'tls', 'specially', 'crafted', 'packet', 'could', 'used', 'trigger', 'infinite', 'loop', 'resulting', 'denial', 'service']"
153,153,19.502325,-33.305378,3.7,"The simplified implementation of blocking reads and writes introduced in Tomcat 10 and back-ported to Tomcat 9.0.47 onwards exposed a long standing (but extremely hard to trigger) concurrency bug in Apache Tomcat 10.1.0 to 10.1.0-M12, 10.0.0-M1 to 10.0.18, 9.0.0-M1 to 9.0.60 and 8.5.0 to 8.5.77 that could cause client connections to share an Http11Processor instance resulting in responses, or part responses, to be received by the wrong client.",44,simplified implementation blocking reads writes introduced tomcat backported tomcat onwards exposed long standing extremely hard trigger concurrency bug apache tomcat could cause client connections share httpprocessor instance resulting responses part responses received wrong client,"['simplified', 'implementation', 'blocking', 'reads', 'writes', 'introduced', 'tomcat', 'backported', 'tomcat', 'onwards', 'exposed', 'long', 'standing', 'extremely', 'hard', 'trigger', 'concurrency', 'bug', 'apache', 'tomcat', 'could', 'cause', 'client', 'connections', 'share', 'httpprocessor', 'instance', 'resulting', 'responses', 'part', 'responses', 'received', 'wrong', 'client']"
154,154,19.948025,-39.634365,7.5,"If a web application sends a WebSocket message concurrently with the WebSocket connection closing when running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the application will continue to use the socket after it has been closed. The error handling triggered in this case could cause the a pooled object to be placed in the pool twice. This could result in subsequent connections using the same object concurrently which could result in data being returned to the wrong use and/or other errors.",24,web application sends websocket message concurrently websocket connection closing running apache tomcat apache tomcat possible application continue use socket closed error handling triggered case could cause pooled object placed pool twice could result subsequent connections using object concurrently could result data returned wrong use andor errors,"['web', 'application', 'sends', 'websocket', 'message', 'concurrently', 'websocket', 'connection', 'closing', 'running', 'apache', 'tomcat', 'apache', 'tomcat', 'possible', 'application', 'continue', 'use', 'socket', 'closed', 'error', 'handling', 'triggered', 'case', 'could', 'cause', 'pooled', 'object', 'placed', 'pool', 'twice', 'could', 'result', 'subsequent', 'connections', 'using', 'object', 'concurrently', 'could', 'result', 'data', 'returned', 'wrong', 'use', 'andor', 'errors']"
155,155,20.789436,-29.544502,7.5,"If Apache Tomcat 8.5.0 to 8.5.82, 9.0.0-M1 to 9.0.67, 10.0.0-M1 to 10.0.26 or 10.1.0-M1 to 10.1.0 was configured to ignore invalid HTTP headers via setting rejectIllegalHeader to false (the default for 8.5.x only), Tomcat did not reject a request containing an invalid Content-Length header making a request smuggling attack possible if Tomcat was located behind a reverse proxy that also failed to reject the request with the invalid header.",44,apache tomcat configured ignore invalid http headers via setting rejectillegalheader false default tomcat reject request containing invalid contentlength header making request smuggling attack possible tomcat located behind reverse proxy also failed reject request invalid header,"['apache', 'tomcat', 'configured', 'ignore', 'invalid', 'http', 'headers', 'via', 'setting', 'rejectillegalheader', 'false', 'default', 'tomcat', 'reject', 'request', 'containing', 'invalid', 'contentlength', 'header', 'making', 'request', 'smuggling', 'attack', 'possible', 'tomcat', 'located', 'behind', 'reverse', 'proxy', 'also', 'failed', 'reject', 'request', 'invalid', 'header']"
156,156,-59.61535,-85.97189,7.5,"Apache Commons FileUpload before 1.5 does not limit the number of request parts to be processed resulting in the possibility of an attacker triggering a DoS with a malicious upload or series of uploads. Note that, like all of the file upload limits, the new configuration option (FileUploadBase#setFileCountMax) is not enabled by default and must be explicitly configured.",-1,apache commons fileupload limit number request parts processed resulting possibility attacker triggering dos malicious upload series uploads note like file upload limits new configuration option fileuploadbasesetfilecountmax enabled default must explicitly configured,"['apache', 'commons', 'fileupload', 'limit', 'number', 'request', 'parts', 'processed', 'resulting', 'possibility', 'attacker', 'triggering', 'dos', 'malicious', 'upload', 'series', 'uploads', 'note', 'like', 'file', 'upload', 'limits', 'new', 'configuration', 'option', 'fileuploadbasesetfilecountmax', 'enabled', 'default', 'must', 'explicitly', 'configured']"
157,157,-0.7665124,-60.69323,7.4,"wildfly-elytron: possible timing attacks via use of unsafe comparator. A flaw was found in Wildfly-elytron. Wildfly-elytron uses java.util.Arrays.equals in several places, which is unsafe and vulnerable to timing attacks. To compare values securely, use java.security.MessageDigest.isEqual instead. This flaw allows an attacker to access secure information or impersonate an authed user.",25,wildflyelytron possible timing attacks via use unsafe comparator wildflyelytron wildflyelytron uses javautilarraysequals several places unsafe timing attacks compare values securely use javasecuritymessagedigestisequal instead allows attacker access secure information impersonate authed user,"['wildflyelytron', 'possible', 'timing', 'attacks', 'via', 'use', 'unsafe', 'comparator', 'wildflyelytron', 'wildflyelytron', 'uses', 'javautilarraysequals', 'several', 'places', 'unsafe', 'timing', 'attacks', 'compare', 'values', 'securely', 'use', 'javasecuritymessagedigestisequal', 'instead', 'allows', 'attacker', 'access', 'secure', 'information', 'impersonate', 'authed', 'user']"
158,158,0.73829556,-57.99703,3.5,"A flaw was found in Wildfly Elytron in versions prior to 1.10.14.Final, prior to 1.15.5.Final and prior to 1.16.1.Final where ScramServer may be susceptible to Timing Attack if enabled. The highest threat of this vulnerability is confidentiality.",25,wildfly elytron versions prior final prior final prior final scramserver may susceptible timing attack enabled highest threat vulnerability confidentiality,"['wildfly', 'elytron', 'versions', 'prior', 'final', 'prior', 'final', 'prior', 'final', 'scramserver', 'may', 'susceptible', 'timing', 'attack', 'enabled', 'highest', 'threat', 'vulnerability', 'confidentiality']"
159,159,-0.7665124,-60.69323,7.4,"wildfly-elytron: possible timing attacks via use of unsafe comparator. A flaw was found in Wildfly-elytron. Wildfly-elytron uses java.util.Arrays.equals in several places, which is unsafe and vulnerable to timing attacks. To compare values securely, use java.security.MessageDigest.isEqual instead. This flaw allows an attacker to access secure information or impersonate an authed user.",25,wildflyelytron possible timing attacks via use unsafe comparator wildflyelytron wildflyelytron uses javautilarraysequals several places unsafe timing attacks compare values securely use javasecuritymessagedigestisequal instead allows attacker access secure information impersonate authed user,"['wildflyelytron', 'possible', 'timing', 'attacks', 'via', 'use', 'unsafe', 'comparator', 'wildflyelytron', 'wildflyelytron', 'uses', 'javautilarraysequals', 'several', 'places', 'unsafe', 'timing', 'attacks', 'compare', 'values', 'securely', 'use', 'javasecuritymessagedigestisequal', 'instead', 'allows', 'attacker', 'access', 'secure', 'information', 'impersonate', 'authed', 'user']"
160,160,-1.2341332,-60.11187,7.4,"wildfly-elytron: possible timing attacks via use of unsafe comparator. A flaw was found in Wildfly-elytron. Wildfly-elytron uses java.util.Arrays.equals in several places, which is unsafe and vulnerable to timing attacks. To compare values securely, use java.security.MessageDigest.isEqual instead. This flaw allows an attacker to access secure information or impersonate an authed user.",25,wildflyelytron possible timing attacks via use unsafe comparator wildflyelytron wildflyelytron uses javautilarraysequals several places unsafe timing attacks compare values securely use javasecuritymessagedigestisequal instead allows attacker access secure information impersonate authed user,"['wildflyelytron', 'possible', 'timing', 'attacks', 'via', 'use', 'unsafe', 'comparator', 'wildflyelytron', 'wildflyelytron', 'uses', 'javautilarraysequals', 'several', 'places', 'unsafe', 'timing', 'attacks', 'compare', 'values', 'securely', 'use', 'javasecuritymessagedigestisequal', 'instead', 'allows', 'attacker', 'access', 'secure', 'information', 'impersonate', 'authed', 'user']"
161,161,-1.6632826,-60.552277,7.4,"wildfly-elytron: possible timing attacks via use of unsafe comparator. A flaw was found in Wildfly-elytron. Wildfly-elytron uses java.util.Arrays.equals in several places, which is unsafe and vulnerable to timing attacks. To compare values securely, use java.security.MessageDigest.isEqual instead. This flaw allows an attacker to access secure information or impersonate an authed user.",25,wildflyelytron possible timing attacks via use unsafe comparator wildflyelytron wildflyelytron uses javautilarraysequals several places unsafe timing attacks compare values securely use javasecuritymessagedigestisequal instead allows attacker access secure information impersonate authed user,"['wildflyelytron', 'possible', 'timing', 'attacks', 'via', 'use', 'unsafe', 'comparator', 'wildflyelytron', 'wildflyelytron', 'uses', 'javautilarraysequals', 'several', 'places', 'unsafe', 'timing', 'attacks', 'compare', 'values', 'securely', 'use', 'javasecuritymessagedigestisequal', 'instead', 'allows', 'attacker', 'access', 'secure', 'information', 'impersonate', 'authed', 'user']"
162,162,22.579931,44.78718,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
163,163,-15.316525,23.603306,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
164,164,52.337723,40.80229,5.0,"In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",35,eclipse jetty version older older older server running os jetty version combination reveal configured fully qualified directory base resource location output error finding context matches requested path default server behavior jettydistribution jettyhome include end handler tree defaulthandler responsible reporting error presents various configured contexts html users click produced html includes output contains configured fully qualified directory base resource location context,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'running', 'os', 'jetty', 'version', 'combination', 'reveal', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'output', 'error', 'finding', 'context', 'matches', 'requested', 'path', 'default', 'server', 'behavior', 'jettydistribution', 'jettyhome', 'include', 'end', 'handler', 'tree', 'defaulthandler', 'responsible', 'reporting', 'error', 'presents', 'various', 'configured', 'contexts', 'html', 'users', 'click', 'produced', 'html', 'includes', 'output', 'contains', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'context']"
165,165,-29.84059,-44.00633,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
166,166,13.423244,70.14204,5.3,"Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `""` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=""b; JSESSIONID=1337; c=d""` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",38,jetty java based web server servlet engine nonstandard cookie parsing jetty may allow attacker smuggle cookies within cookies otherwise perform unintended behavior tampering cookie parsing mechanism jetty sees cookie value starts double quote continue read cookie string sees closing quote even semicolon encountered cookie header displaylanguageb jsessionid cd parsed one cookie name displaylanguage value jsessionid cd instead separate cookies security implications say jsessionid httponly cookie displaylanguage cookie value rendered page attacker smuggle jsessionid cookie displaylanguage cookie thereby exfiltrate significant intermediary enacting policy based cookies smuggled cookie bypass policy yet still seen jetty server logging system issue addressed versions beta users advised upgrade known workarounds issue,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'nonstandard', 'cookie', 'parsing', 'jetty', 'may', 'allow', 'attacker', 'smuggle', 'cookies', 'within', 'cookies', 'otherwise', 'perform', 'unintended', 'behavior', 'tampering', 'cookie', 'parsing', 'mechanism', 'jetty', 'sees', 'cookie', 'value', 'starts', 'double', 'quote', 'continue', 'read', 'cookie', 'string', 'sees', 'closing', 'quote', 'even', 'semicolon', 'encountered', 'cookie', 'header', 'displaylanguageb', 'jsessionid', 'cd', 'parsed', 'one', 'cookie', 'name', 'displaylanguage', 'value', 'jsessionid', 'cd', 'instead', 'separate', 'cookies', 'security', 'implications', 'say', 'jsessionid', 'httponly', 'cookie', 'displaylanguage', 'cookie', 'value', 'rendered', 'page', 'attacker', 'smuggle', 'jsessionid', 'cookie', 'displaylanguage', 'cookie', 'thereby', 'exfiltrate', 'significant', 'intermediary', 'enacting', 'policy', 'based', 'cookies', 'smuggled', 'cookie', 'bypass', 'policy', 'yet', 'still', 'seen', 'jetty', 'server', 'logging', 'system', 'issue', 'addressed', 'versions', 'beta', 'users', 'advised', 'upgrade', 'known', 'workarounds', 'issue']"
167,167,-38.233353,-8.768149,5.0,"The exception handling code in Eclipse Jetty before 9.2.9.v20150224 allows remote attackers to obtain sensitive information from process memory via illegal characters in an HTTP header, aka JetLeak.",36,exception handling code eclipse jetty allows remote attackers obtain sensitive information process memory via illegal characters http header aka jetleak,"['exception', 'handling', 'code', 'eclipse', 'jetty', 'allows', 'remote', 'attackers', 'obtain', 'sensitive', 'information', 'process', 'memory', 'via', 'illegal', 'characters', 'http', 'header', 'aka', 'jetleak']"
168,168,-33.77514,27.516745,9.8,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",39,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled transferencoding chunks handled poorly chunk length parsing integer overflow thus large chunk size could interpreted smaller chunk size content sent chunk body could interpreted pipelined request jetty deployed behind intermediary imposed authorization intermediary allowed arbitrarily large chunks passed unchanged could used bypass authorization imposed intermediary fake pipelined request would interpreted intermediary request,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'transferencoding', 'chunks', 'handled', 'poorly', 'chunk', 'length', 'parsing', 'integer', 'overflow', 'thus', 'large', 'chunk', 'size', 'could', 'interpreted', 'smaller', 'chunk', 'size', 'content', 'sent', 'chunk', 'body', 'could', 'interpreted', 'pipelined', 'request', 'jetty', 'deployed', 'behind', 'intermediary', 'imposed', 'authorization', 'intermediary', 'allowed', 'arbitrarily', 'large', 'chunks', 'passed', 'unchanged', 'could', 'used', 'bypass', 'authorization', 'imposed', 'intermediary', 'fake', 'pipelined', 'request', 'would', 'interpreted', 'intermediary', 'request']"
169,169,-32.577698,11.193808,9.8,"In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization. Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2017-7658 for details",40,eclipse jetty server versions older non httpx configurations httpx configurations presented two contentlengths headers jetty ignored second presented contentlength chunked encoding header contentlength ignored per rfc intermediary decided shorter length still passed longer body body content could interpreted jetty pipelined request intermediary imposing authorization fake pipelined request would bypass authorization sonatypes research suggests cves details differ defined nvd see details,"['eclipse', 'jetty', 'server', 'versions', 'older', 'non', 'httpx', 'configurations', 'httpx', 'configurations', 'presented', 'two', 'contentlengths', 'headers', 'jetty', 'ignored', 'second', 'presented', 'contentlength', 'chunked', 'encoding', 'header', 'contentlength', 'ignored', 'per', 'rfc', 'intermediary', 'decided', 'shorter', 'length', 'still', 'passed', 'longer', 'body', 'body', 'content', 'could', 'interpreted', 'jetty', 'pipelined', 'request', 'intermediary', 'imposing', 'authorization', 'fake', 'pipelined', 'request', 'would', 'bypass', 'authorization', 'sonatypes', 'research', 'suggests', 'cves', 'details', 'differ', 'defined', 'nvd', 'see', 'details']"
170,170,-40.684,-13.31481,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
171,171,-24.03732,50.194263,7.8,"In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",41,eclipse jetty alpha alpha cpu usage reach upon receiving large invalid tls frame,"['eclipse', 'jetty', 'alpha', 'alpha', 'cpu', 'usage', 'reach', 'upon', 'receiving', 'large', 'invalid', 'tls', 'frame']"
172,172,-19.315231,-68.10934,7.5,"Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",42,jetty prone timing channel utilsecuritypasswordjava makes easier remote attackers obtain access observing elapsed times rejection incorrect passwords,"['jetty', 'prone', 'timing', 'channel', 'utilsecuritypasswordjava', 'makes', 'easier', 'remote', 'attackers', 'obtain', 'access', 'observing', 'elapsed', 'times', 'rejection', 'incorrect', 'passwords']"
173,173,22.028122,43.93806,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
174,174,-12.167204,24.729189,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
175,175,42.228966,28.44174,5.0,"In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",43,eclipse jetty version server running windows exposure fully qualified base resource directory name windows remote client configured showing listing directory contents information reveal restricted content configured base resource directories,"['eclipse', 'jetty', 'version', 'server', 'running', 'windows', 'exposure', 'fully', 'qualified', 'base', 'resource', 'directory', 'name', 'windows', 'remote', 'client', 'configured', 'showing', 'listing', 'directory', 'contents', 'information', 'reveal', 'restricted', 'content', 'configured', 'base', 'resource', 'directories']"
176,176,-29.265213,-42.819416,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
177,177,24.308432,45.684147,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
178,178,-13.250066,22.898335,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
179,179,52.284405,41.60297,5.0,"In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",35,eclipse jetty version older older older server running os jetty version combination reveal configured fully qualified directory base resource location output error finding context matches requested path default server behavior jettydistribution jettyhome include end handler tree defaulthandler responsible reporting error presents various configured contexts html users click produced html includes output contains configured fully qualified directory base resource location context,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'running', 'os', 'jetty', 'version', 'combination', 'reveal', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'output', 'error', 'finding', 'context', 'matches', 'requested', 'path', 'default', 'server', 'behavior', 'jettydistribution', 'jettyhome', 'include', 'end', 'handler', 'tree', 'defaulthandler', 'responsible', 'reporting', 'error', 'presents', 'various', 'configured', 'contexts', 'html', 'users', 'click', 'produced', 'html', 'includes', 'output', 'contains', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'context']"
180,180,-32.032326,-42.173542,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
181,181,13.214289,69.55445,5.3,"Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `""` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=""b; JSESSIONID=1337; c=d""` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",38,jetty java based web server servlet engine nonstandard cookie parsing jetty may allow attacker smuggle cookies within cookies otherwise perform unintended behavior tampering cookie parsing mechanism jetty sees cookie value starts double quote continue read cookie string sees closing quote even semicolon encountered cookie header displaylanguageb jsessionid cd parsed one cookie name displaylanguage value jsessionid cd instead separate cookies security implications say jsessionid httponly cookie displaylanguage cookie value rendered page attacker smuggle jsessionid cookie displaylanguage cookie thereby exfiltrate significant intermediary enacting policy based cookies smuggled cookie bypass policy yet still seen jetty server logging system issue addressed versions beta users advised upgrade known workarounds issue,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'nonstandard', 'cookie', 'parsing', 'jetty', 'may', 'allow', 'attacker', 'smuggle', 'cookies', 'within', 'cookies', 'otherwise', 'perform', 'unintended', 'behavior', 'tampering', 'cookie', 'parsing', 'mechanism', 'jetty', 'sees', 'cookie', 'value', 'starts', 'double', 'quote', 'continue', 'read', 'cookie', 'string', 'sees', 'closing', 'quote', 'even', 'semicolon', 'encountered', 'cookie', 'header', 'displaylanguageb', 'jsessionid', 'cd', 'parsed', 'one', 'cookie', 'name', 'displaylanguage', 'value', 'jsessionid', 'cd', 'instead', 'separate', 'cookies', 'security', 'implications', 'say', 'jsessionid', 'httponly', 'cookie', 'displaylanguage', 'cookie', 'value', 'rendered', 'page', 'attacker', 'smuggle', 'jsessionid', 'cookie', 'displaylanguage', 'cookie', 'thereby', 'exfiltrate', 'significant', 'intermediary', 'enacting', 'policy', 'based', 'cookies', 'smuggled', 'cookie', 'bypass', 'policy', 'yet', 'still', 'seen', 'jetty', 'server', 'logging', 'system', 'issue', 'addressed', 'versions', 'beta', 'users', 'advised', 'upgrade', 'known', 'workarounds', 'issue']"
182,182,-34.615253,27.622854,9.8,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",39,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled transferencoding chunks handled poorly chunk length parsing integer overflow thus large chunk size could interpreted smaller chunk size content sent chunk body could interpreted pipelined request jetty deployed behind intermediary imposed authorization intermediary allowed arbitrarily large chunks passed unchanged could used bypass authorization imposed intermediary fake pipelined request would interpreted intermediary request,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'transferencoding', 'chunks', 'handled', 'poorly', 'chunk', 'length', 'parsing', 'integer', 'overflow', 'thus', 'large', 'chunk', 'size', 'could', 'interpreted', 'smaller', 'chunk', 'size', 'content', 'sent', 'chunk', 'body', 'could', 'interpreted', 'pipelined', 'request', 'jetty', 'deployed', 'behind', 'intermediary', 'imposed', 'authorization', 'intermediary', 'allowed', 'arbitrarily', 'large', 'chunks', 'passed', 'unchanged', 'could', 'used', 'bypass', 'authorization', 'imposed', 'intermediary', 'fake', 'pipelined', 'request', 'would', 'interpreted', 'intermediary', 'request']"
183,183,-32.412712,10.365269,9.8,"In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization. Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2017-7658 for details",40,eclipse jetty server versions older non httpx configurations httpx configurations presented two contentlengths headers jetty ignored second presented contentlength chunked encoding header contentlength ignored per rfc intermediary decided shorter length still passed longer body body content could interpreted jetty pipelined request intermediary imposing authorization fake pipelined request would bypass authorization sonatypes research suggests cves details differ defined nvd see details,"['eclipse', 'jetty', 'server', 'versions', 'older', 'non', 'httpx', 'configurations', 'httpx', 'configurations', 'presented', 'two', 'contentlengths', 'headers', 'jetty', 'ignored', 'second', 'presented', 'contentlength', 'chunked', 'encoding', 'header', 'contentlength', 'ignored', 'per', 'rfc', 'intermediary', 'decided', 'shorter', 'length', 'still', 'passed', 'longer', 'body', 'body', 'content', 'could', 'interpreted', 'jetty', 'pipelined', 'request', 'intermediary', 'imposing', 'authorization', 'fake', 'pipelined', 'request', 'would', 'bypass', 'authorization', 'sonatypes', 'research', 'suggests', 'cves', 'details', 'differ', 'defined', 'nvd', 'see', 'details']"
184,184,-37.34905,-13.353939,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
185,185,-23.306063,49.76411,7.8,"In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",41,eclipse jetty alpha alpha cpu usage reach upon receiving large invalid tls frame,"['eclipse', 'jetty', 'alpha', 'alpha', 'cpu', 'usage', 'reach', 'upon', 'receiving', 'large', 'invalid', 'tls', 'frame']"
186,186,-20.468937,-68.01362,7.5,"Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",42,jetty prone timing channel utilsecuritypasswordjava makes easier remote attackers obtain access observing elapsed times rejection incorrect passwords,"['jetty', 'prone', 'timing', 'channel', 'utilsecuritypasswordjava', 'makes', 'easier', 'remote', 'attackers', 'obtain', 'access', 'observing', 'elapsed', 'times', 'rejection', 'incorrect', 'passwords']"
187,187,24.074877,44.512627,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
188,188,-12.567782,25.77509,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
189,189,43.16645,29.772987,5.0,"In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",43,eclipse jetty version server running windows exposure fully qualified base resource directory name windows remote client configured showing listing directory contents information reveal restricted content configured base resource directories,"['eclipse', 'jetty', 'version', 'server', 'running', 'windows', 'exposure', 'fully', 'qualified', 'base', 'resource', 'directory', 'name', 'windows', 'remote', 'client', 'configured', 'showing', 'listing', 'directory', 'contents', 'information', 'reveal', 'restricted', 'content', 'configured', 'base', 'resource', 'directories']"
190,190,-32.093937,-43.17853,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
191,191,23.20535,43.87881,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
192,192,-19.374804,27.085192,6.5,"In Eclipse Jetty versions 9.4.0 through 9.4.8, when using the optional Jetty provided FileSessionDataStore for persistent storage of HttpSession details, it is possible for a malicious user to access/hijack other HttpSessions and even delete unmatched HttpSessions present in the FileSystem's storage for the FileSessionDataStore.",45,eclipse jetty versions using optional jetty provided filesessiondatastore persistent storage httpsession details possible malicious user accesshijack httpsessions even delete unmatched httpsessions present filesystems storage filesessiondatastore,"['eclipse', 'jetty', 'versions', 'using', 'optional', 'jetty', 'provided', 'filesessiondatastore', 'persistent', 'storage', 'httpsession', 'details', 'possible', 'malicious', 'user', 'accesshijack', 'httpsessions', 'even', 'delete', 'unmatched', 'httpsessions', 'present', 'filesystems', 'storage', 'filesessiondatastore']"
193,193,-12.321202,23.637623,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
194,194,52.284405,41.60297,5.0,"In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",35,eclipse jetty version older older older server running os jetty version combination reveal configured fully qualified directory base resource location output error finding context matches requested path default server behavior jettydistribution jettyhome include end handler tree defaulthandler responsible reporting error presents various configured contexts html users click produced html includes output contains configured fully qualified directory base resource location context,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'running', 'os', 'jetty', 'version', 'combination', 'reveal', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'output', 'error', 'finding', 'context', 'matches', 'requested', 'path', 'default', 'server', 'behavior', 'jettydistribution', 'jettyhome', 'include', 'end', 'handler', 'tree', 'defaulthandler', 'responsible', 'reporting', 'error', 'presents', 'various', 'configured', 'contexts', 'html', 'users', 'click', 'produced', 'html', 'includes', 'output', 'contains', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'context']"
195,195,-35.32563,20.432983,5.8,"In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.",46,eclipse jetty version rc alpha beta alpha beta gzip request body inflation enabled requests different clients multiplexed onto single connection attacker send request body received entirely consumed application subsequent request connection see body prepended body attacker see data may inject data body subsequent request,"['eclipse', 'jetty', 'version', 'rc', 'alpha', 'beta', 'alpha', 'beta', 'gzip', 'request', 'body', 'inflation', 'enabled', 'requests', 'different', 'clients', 'multiplexed', 'onto', 'single', 'connection', 'attacker', 'send', 'request', 'body', 'received', 'entirely', 'consumed', 'application', 'subsequent', 'request', 'connection', 'see', 'body', 'prepended', 'body', 'attacker', 'see', 'data', 'may', 'inject', 'data', 'body', 'subsequent', 'request']"
196,196,-40.94458,-12.065532,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
197,197,-31.053614,-41.944942,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
198,198,14.435211,69.77935,5.3,"Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `""` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=""b; JSESSIONID=1337; c=d""` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",38,jetty java based web server servlet engine nonstandard cookie parsing jetty may allow attacker smuggle cookies within cookies otherwise perform unintended behavior tampering cookie parsing mechanism jetty sees cookie value starts double quote continue read cookie string sees closing quote even semicolon encountered cookie header displaylanguageb jsessionid cd parsed one cookie name displaylanguage value jsessionid cd instead separate cookies security implications say jsessionid httponly cookie displaylanguage cookie value rendered page attacker smuggle jsessionid cookie displaylanguage cookie thereby exfiltrate significant intermediary enacting policy based cookies smuggled cookie bypass policy yet still seen jetty server logging system issue addressed versions beta users advised upgrade known workarounds issue,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'nonstandard', 'cookie', 'parsing', 'jetty', 'may', 'allow', 'attacker', 'smuggle', 'cookies', 'within', 'cookies', 'otherwise', 'perform', 'unintended', 'behavior', 'tampering', 'cookie', 'parsing', 'mechanism', 'jetty', 'sees', 'cookie', 'value', 'starts', 'double', 'quote', 'continue', 'read', 'cookie', 'string', 'sees', 'closing', 'quote', 'even', 'semicolon', 'encountered', 'cookie', 'header', 'displaylanguageb', 'jsessionid', 'cd', 'parsed', 'one', 'cookie', 'name', 'displaylanguage', 'value', 'jsessionid', 'cd', 'instead', 'separate', 'cookies', 'security', 'implications', 'say', 'jsessionid', 'httponly', 'cookie', 'displaylanguage', 'cookie', 'value', 'rendered', 'page', 'attacker', 'smuggle', 'jsessionid', 'cookie', 'displaylanguage', 'cookie', 'thereby', 'exfiltrate', 'significant', 'intermediary', 'enacting', 'policy', 'based', 'cookies', 'smuggled', 'cookie', 'bypass', 'policy', 'yet', 'still', 'seen', 'jetty', 'server', 'logging', 'system', 'issue', 'addressed', 'versions', 'beta', 'users', 'advised', 'upgrade', 'known', 'workarounds', 'issue']"
199,199,-35.534534,-20.090239,7.5,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.",47,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled http handled poorly http style request line ie method space uri space version declares version http accepted treated request deployed behind intermediary also accepted passed version act response sent could interpreted intermediary http headers could used poison cache server allowed origin client generate arbitrary content response,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'http', 'handled', 'poorly', 'http', 'style', 'request', 'line', 'ie', 'method', 'space', 'uri', 'space', 'version', 'declares', 'version', 'http', 'accepted', 'treated', 'request', 'deployed', 'behind', 'intermediary', 'also', 'accepted', 'passed', 'version', 'act', 'response', 'sent', 'could', 'interpreted', 'intermediary', 'http', 'headers', 'could', 'used', 'poison', 'cache', 'server', 'allowed', 'origin', 'client', 'generate', 'arbitrary', 'content', 'response']"
200,200,-34.104256,28.29448,9.8,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",39,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled transferencoding chunks handled poorly chunk length parsing integer overflow thus large chunk size could interpreted smaller chunk size content sent chunk body could interpreted pipelined request jetty deployed behind intermediary imposed authorization intermediary allowed arbitrarily large chunks passed unchanged could used bypass authorization imposed intermediary fake pipelined request would interpreted intermediary request,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'transferencoding', 'chunks', 'handled', 'poorly', 'chunk', 'length', 'parsing', 'integer', 'overflow', 'thus', 'large', 'chunk', 'size', 'could', 'interpreted', 'smaller', 'chunk', 'size', 'content', 'sent', 'chunk', 'body', 'could', 'interpreted', 'pipelined', 'request', 'jetty', 'deployed', 'behind', 'intermediary', 'imposed', 'authorization', 'intermediary', 'allowed', 'arbitrarily', 'large', 'chunks', 'passed', 'unchanged', 'could', 'used', 'bypass', 'authorization', 'imposed', 'intermediary', 'fake', 'pipelined', 'request', 'would', 'interpreted', 'intermediary', 'request']"
201,201,-31.77829,10.925833,9.8,"In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization. Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2017-7658 for details",40,eclipse jetty server versions older non httpx configurations httpx configurations presented two contentlengths headers jetty ignored second presented contentlength chunked encoding header contentlength ignored per rfc intermediary decided shorter length still passed longer body body content could interpreted jetty pipelined request intermediary imposing authorization fake pipelined request would bypass authorization sonatypes research suggests cves details differ defined nvd see details,"['eclipse', 'jetty', 'server', 'versions', 'older', 'non', 'httpx', 'configurations', 'httpx', 'configurations', 'presented', 'two', 'contentlengths', 'headers', 'jetty', 'ignored', 'second', 'presented', 'contentlength', 'chunked', 'encoding', 'header', 'contentlength', 'ignored', 'per', 'rfc', 'intermediary', 'decided', 'shorter', 'length', 'still', 'passed', 'longer', 'body', 'body', 'content', 'could', 'interpreted', 'jetty', 'pipelined', 'request', 'intermediary', 'imposing', 'authorization', 'fake', 'pipelined', 'request', 'would', 'bypass', 'authorization', 'sonatypes', 'research', 'suggests', 'cves', 'details', 'differ', 'defined', 'nvd', 'see', 'details']"
202,202,-38.049015,-12.388823,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
203,203,-22.70825,51.562138,7.8,"In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",41,eclipse jetty alpha alpha cpu usage reach upon receiving large invalid tls frame,"['eclipse', 'jetty', 'alpha', 'alpha', 'cpu', 'usage', 'reach', 'upon', 'receiving', 'large', 'invalid', 'tls', 'frame']"
204,204,-20.044413,-67.30216,7.5,"Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",42,jetty prone timing channel utilsecuritypasswordjava makes easier remote attackers obtain access observing elapsed times rejection incorrect passwords,"['jetty', 'prone', 'timing', 'channel', 'utilsecuritypasswordjava', 'makes', 'easier', 'remote', 'attackers', 'obtain', 'access', 'observing', 'elapsed', 'times', 'rejection', 'incorrect', 'passwords']"
205,205,23.52362,46.496136,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
206,206,-13.60095,26.37969,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
207,207,42.333668,29.82044,5.0,"In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",43,eclipse jetty version server running windows exposure fully qualified base resource directory name windows remote client configured showing listing directory contents information reveal restricted content configured base resource directories,"['eclipse', 'jetty', 'version', 'server', 'running', 'windows', 'exposure', 'fully', 'qualified', 'base', 'resource', 'directory', 'name', 'windows', 'remote', 'client', 'configured', 'showing', 'listing', 'directory', 'contents', 'information', 'reveal', 'restricted', 'content', 'configured', 'base', 'resource', 'directories']"
208,208,-33.18081,-43.802727,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
209,209,25.943792,0.48771602,5.0,"Apache Camel's File is vulnerable to directory traversal. Camel 2.21.0 to 2.21.3, 2.22.0 to 2.22.2, 2.23.0 and the unsupported Camel 2.x (2.19 and earlier) versions may be also affected.",48,apache camels file directory traversal camel unsupported camel earlier versions may also affected,"['apache', 'camels', 'file', 'directory', 'traversal', 'camel', 'unsupported', 'camel', 'earlier', 'versions', 'may', 'also', 'affected']"
210,210,25.875303,0.4653262,5.0,Server-Side Template Injection and arbitrary file disclosure on Camel templating components,48,serverside template injection arbitrary file disclosure camel templating components,"['serverside', 'template', 'injection', 'arbitrary', 'file', 'disclosure', 'camel', 'templating', 'components']"
211,211,-10.340602,31.081985,4.3,"By default, Apache CXF creates a /services page containing a listing of the available endpoint names and addresses. This webpage is vulnerable to a reflected Cross-Site Scripting (XSS) attack via the styleSheetPath, which allows a malicious actor to inject javascript into the web page. This vulnerability affects all versions of Apache CXF prior to 3.4.1 and 3.3.8. Please note that this is a separate issue to CVE-2019-17573.",49,default apache cxf creates services page containing listing available endpoint names addresses webpage reflected crosssite scripting xss attack via stylesheetpath allows malicious actor inject javascript web page vulnerability affects versions apache cxf prior please note separate issue cve,"['default', 'apache', 'cxf', 'creates', 'services', 'page', 'containing', 'listing', 'available', 'endpoint', 'names', 'addresses', 'webpage', 'reflected', 'crosssite', 'scripting', 'xss', 'attack', 'via', 'stylesheetpath', 'allows', 'malicious', 'actor', 'inject', 'javascript', 'web', 'page', 'vulnerability', 'affects', 'versions', 'apache', 'cxf', 'prior', 'please', 'note', 'separate', 'issue', 'cve']"
212,212,-10.405814,31.00704,7.5,"A vulnerability in Apache CXF before versions 3.5.5 and 3.4.10 allows an attacker to perform a remote directory listing or code exfiltration. The vulnerability only applies when the CXFServlet is configured with both the static-resources-list and redirect-query-check attributes. These attributes are not supposed to be used together, and so the vulnerability can only arise if the CXF service is misconfigured.",49,vulnerability apache cxf versions allows attacker perform remote directory listing code exfiltration vulnerability applies cxfservlet configured staticresourceslist redirectquerycheck attributes attributes supposed used together vulnerability arise cxf service misconfigured,"['vulnerability', 'apache', 'cxf', 'versions', 'allows', 'attacker', 'perform', 'remote', 'directory', 'listing', 'code', 'exfiltration', 'vulnerability', 'applies', 'cxfservlet', 'configured', 'staticresourceslist', 'redirectquerycheck', 'attributes', 'attributes', 'supposed', 'used', 'together', 'vulnerability', 'arise', 'cxf', 'service', 'misconfigured']"
213,213,-9.802435,31.696451,9.8,A SSRF vulnerability in parsing the href attribute of XOP:Include in MTOM requests in versions of Apache CXF before 3.5.5 and 3.4.10 allows an attacker to perform SSRF style attacks on webservices that take at least one parameter of any type.,49,ssrf vulnerability parsing href attribute xopinclude mtom requests versions apache cxf allows attacker perform ssrf style attacks webservices take least one parameter type,"['ssrf', 'vulnerability', 'parsing', 'href', 'attribute', 'xopinclude', 'mtom', 'requests', 'versions', 'apache', 'cxf', 'allows', 'attacker', 'perform', 'ssrf', 'style', 'attacks', 'webservices', 'take', 'least', 'one', 'parameter', 'type']"
214,214,-57.836143,19.467363,7.5,"Those using Woodstox to parse XML data may be vulnerable to Denial of Service attacks (DOS) if DTD support is enabled. If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow. This effect may support a denial of service attack.",13,using woodstox parse xml data may denial service attacks dos dtd support enabled parser running user supplied input attacker may supply content causes parser crash stackoverflow effect may support denial service attack,"['using', 'woodstox', 'parse', 'xml', 'data', 'may', 'denial', 'service', 'attacks', 'dos', 'dtd', 'support', 'enabled', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow', 'effect', 'may', 'support', 'denial', 'service', 'attack']"
215,215,32.6837,-2.4655786,6.5,"A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.",1,version code base contains usages objectinputstream without type checks allows attacker inject arbitrarily serialized java objects would get deserialized privileged context potentially lead remote code execution,"['version', 'code', 'base', 'contains', 'usages', 'objectinputstream', 'without', 'type', 'checks', 'allows', 'attacker', 'inject', 'arbitrarily', 'serialized', 'java', 'objects', 'would', 'get', 'deserialized', 'privileged', 'context', 'potentially', 'lead', 'remote', 'code', 'execution']"
216,216,-18.764452,-5.247418,5.0,"Both Spring Security 3.2.x, 4.0.x, 4.1.0 and the Spring Framework 3.2.x, 4.0.x, 4.1.x, 4.2.x rely on URL pattern mappings for authorization and for mapping requests to controllers respectively. Differences in the strictness of the pattern matching mechanisms, for example with regards to space trimming in path segments, can lead Spring Security to not recognize certain paths as not protected that are in fact mapped to Spring MVC controllers that should be protected. The problem is compounded by the fact that the Spring Framework provides richer features with regards to pattern matching as well as by the fact that pattern matching in each Spring Security and the Spring Framework can easily be customized creating additional differences.",50,spring security spring framework rely url pattern mappings authorization mapping requests controllers respectively differences strictness pattern matching mechanisms example regards space trimming path segments lead spring security recognize certain paths protected fact mapped spring mvc controllers protected problem compounded fact spring framework provides richer features regards pattern matching well fact pattern matching spring security spring framework easily customized creating additional differences,"['spring', 'security', 'spring', 'framework', 'rely', 'url', 'pattern', 'mappings', 'authorization', 'mapping', 'requests', 'controllers', 'respectively', 'differences', 'strictness', 'pattern', 'matching', 'mechanisms', 'example', 'regards', 'space', 'trimming', 'path', 'segments', 'lead', 'spring', 'security', 'recognize', 'certain', 'paths', 'protected', 'fact', 'mapped', 'spring', 'mvc', 'controllers', 'protected', 'problem', 'compounded', 'fact', 'spring', 'framework', 'provides', 'richer', 'features', 'regards', 'pattern', 'matching', 'well', 'fact', 'pattern', 'matching', 'spring', 'security', 'spring', 'framework', 'easily', 'customized', 'creating', 'additional', 'differences']"
217,217,-17.902634,-4.5497327,5.0,"Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.",50,spring security spring security spring framework consider url path parameters processing security constraints adding url path parameter special encodings attacker may able bypass security constraint root issue lack clarity regarding handling path parameters servlet specification servlet containers include path parameters value returned getpathinfo spring security uses value returned getpathinfo part process mapping requests security constraints particular attack different character encodings used path parameters allows secured spring mvc static resource urls bypassed,"['spring', 'security', 'spring', 'security', 'spring', 'framework', 'consider', 'url', 'path', 'parameters', 'processing', 'security', 'constraints', 'adding', 'url', 'path', 'parameter', 'special', 'encodings', 'attacker', 'may', 'able', 'bypass', 'security', 'constraint', 'root', 'issue', 'lack', 'clarity', 'regarding', 'handling', 'path', 'parameters', 'servlet', 'specification', 'servlet', 'containers', 'include', 'path', 'parameters', 'value', 'returned', 'getpathinfo', 'spring', 'security', 'uses', 'value', 'returned', 'getpathinfo', 'part', 'process', 'mapping', 'requests', 'security', 'constraints', 'particular', 'attack', 'different', 'character', 'encodings', 'used', 'path', 'parameters', 'allows', 'secured', 'spring', 'mvc', 'static', 'resource', 'urls', 'bypassed']"
218,218,-20.538874,-13.729718,9.8,"In Spring Security, versions 5.7.x prior to 5.7.8, versions 5.8.x prior to 5.8.3, and versions 6.0.x prior to 6.0.3, the logout support does not properly clean the security context if using serialized versions. Additionally, it is not possible to explicitly save an empty security context to the HttpSessionSecurityContextRepository. This vulnerability can keep users authenticated even after they performed logout. Users of affected versions should apply the following mitigation. 5.7.x users should upgrade to 5.7.8. 5.8.x users should upgrade to 5.8.3. 6.0.x users should upgrade to 6.0.3.",51,spring security versions prior versions prior versions prior logout support properly clean security context using serialized versions additionally possible explicitly save empty security context httpsessionsecuritycontextrepository vulnerability keep users authenticated even performed logout users affected versions apply following mitigation users upgrade users upgrade users upgrade,"['spring', 'security', 'versions', 'prior', 'versions', 'prior', 'versions', 'prior', 'logout', 'support', 'properly', 'clean', 'security', 'context', 'using', 'serialized', 'versions', 'additionally', 'possible', 'explicitly', 'save', 'empty', 'security', 'context', 'httpsessionsecuritycontextrepository', 'vulnerability', 'keep', 'users', 'authenticated', 'even', 'performed', 'logout', 'users', 'affected', 'versions', 'apply', 'following', 'mitigation', 'users', 'upgrade', 'users', 'upgrade', 'users', 'upgrade']"
219,219,-18.912138,-10.887907,7.5,"Spring Security, versions 4.2.x up to 4.2.12, and older unsupported versions support plain text passwords using PlaintextPasswordEncoder. If an application using an affected version of Spring Security is leveraging PlaintextPasswordEncoder and a user has a null encoded password, a malicious user (or attacker) can authenticate using a password of ""null"".",51,spring security versions older unsupported versions support plain text passwords using plaintextpasswordencoder application using affected version spring security leveraging plaintextpasswordencoder user null encoded password malicious user attacker authenticate using password null,"['spring', 'security', 'versions', 'older', 'unsupported', 'versions', 'support', 'plain', 'text', 'passwords', 'using', 'plaintextpasswordencoder', 'application', 'using', 'affected', 'version', 'spring', 'security', 'leveraging', 'plaintextpasswordencoder', 'user', 'null', 'encoded', 'password', 'malicious', 'user', 'attacker', 'authenticate', 'using', 'password', 'null']"
220,220,-20.995724,-11.391709,5.0,"Spring Security versions 4.2.x prior to 4.2.12, 5.0.x prior to 5.0.12, and 5.1.x prior to 5.1.5 contain an insecure randomness vulnerability when using SecureRandomFactoryBean#setSeed to configure a SecureRandom instance. In order to be impacted, an honest application must provide a seed and make the resulting random material available to an attacker for inspection.",51,spring security versions prior prior prior contain insecure randomness vulnerability using securerandomfactorybeansetseed configure securerandom instance order impacted honest application must provide seed make resulting random material available attacker inspection,"['spring', 'security', 'versions', 'prior', 'prior', 'prior', 'contain', 'insecure', 'randomness', 'vulnerability', 'using', 'securerandomfactorybeansetseed', 'configure', 'securerandom', 'instance', 'order', 'impacted', 'honest', 'application', 'must', 'provide', 'seed', 'make', 'resulting', 'random', 'material', 'available', 'attacker', 'inspection']"
221,221,3.1477695,-23.042631,7.5,"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",52,spring mvc spring webflux application running jdk may remote code execution rce via data binding specific exploit requires application run tomcat war deployment application deployed spring boot executable jar ie default exploit however nature vulnerability general may ways exploit,"['spring', 'mvc', 'spring', 'webflux', 'application', 'running', 'jdk', 'may', 'remote', 'code', 'execution', 'rce', 'via', 'data', 'binding', 'specific', 'exploit', 'requires', 'application', 'run', 'tomcat', 'war', 'deployment', 'application', 'deployed', 'spring', 'boot', 'executable', 'jar', 'ie', 'default', 'exploit', 'however', 'nature', 'vulnerability', 'general', 'may', 'ways', 'exploit']"
222,222,-42.935436,44.276745,5.0,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",53,spring framework versions older unsupported versions patterns disallowedfields databinder case sensitive means field effectively protected unless listed upper lower case first character field including upper lower case first character nested fields within property path,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'patterns', 'disallowedfields', 'databinder', 'case', 'sensitive', 'means', 'field', 'effectively', 'protected', 'unless', 'listed', 'upper', 'lower', 'case', 'first', 'character', 'field', 'including', 'upper', 'lower', 'case', 'first', 'character', 'nested', 'fields', 'within', 'property', 'path']"
223,223,-17.474957,-4.219258,5.0,"An issue was discovered in Pivotal Spring Security before 3.2.10, 4.1.x before 4.1.4, and 4.2.x before 4.2.1. Spring Security does not consider URL path parameters when processing security constraints. By adding a URL path parameter with an encoded ""/"" to a request, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. The unexpected presence of path parameters can cause a constraint to be bypassed. Users of Apache Tomcat (all current versions) are not affected by this vulnerability since Tomcat follows the guidance previously provided by the Servlet Expert group and strips path parameters from the value returned by getContextPath(), getServletPath(), and getPathInfo(). Users of other Servlet containers based on Apache Tomcat may or may not be affected depending on whether or not the handling of path parameters has been modified. Users of IBM WebSphere Application Server 8.5.x are known to be affected. Users of other containers that implement the Servlet specification may be affected.",50,issue discovered pivotal spring security spring security consider url path parameters processing security constraints adding url path parameter encoded request attacker may able bypass security constraint root issue lack clarity regarding handling path parameters servlet specification servlet containers include path parameters value returned getpathinfo spring security uses value returned getpathinfo part process mapping requests security constraints unexpected presence path parameters cause constraint bypassed users apache tomcat current versions affected vulnerability since tomcat follows guidance previously provided servlet expert group strips path parameters value returned getcontextpath getservletpath getpathinfo users servlet containers based apache tomcat may may affected depending whether handling path parameters modified users ibm websphere application server known affected users containers implement servlet specification may affected,"['issue', 'discovered', 'pivotal', 'spring', 'security', 'spring', 'security', 'consider', 'url', 'path', 'parameters', 'processing', 'security', 'constraints', 'adding', 'url', 'path', 'parameter', 'encoded', 'request', 'attacker', 'may', 'able', 'bypass', 'security', 'constraint', 'root', 'issue', 'lack', 'clarity', 'regarding', 'handling', 'path', 'parameters', 'servlet', 'specification', 'servlet', 'containers', 'include', 'path', 'parameters', 'value', 'returned', 'getpathinfo', 'spring', 'security', 'uses', 'value', 'returned', 'getpathinfo', 'part', 'process', 'mapping', 'requests', 'security', 'constraints', 'unexpected', 'presence', 'path', 'parameters', 'cause', 'constraint', 'bypassed', 'users', 'apache', 'tomcat', 'current', 'versions', 'affected', 'vulnerability', 'since', 'tomcat', 'follows', 'guidance', 'previously', 'provided', 'servlet', 'expert', 'group', 'strips', 'path', 'parameters', 'value', 'returned', 'getcontextpath', 'getservletpath', 'getpathinfo', 'users', 'servlet', 'containers', 'based', 'apache', 'tomcat', 'may', 'may', 'affected', 'depending', 'whether', 'handling', 'path', 'parameters', 'modified', 'users', 'ibm', 'websphere', 'application', 'server', 'known', 'affected', 'users', 'containers', 'implement', 'servlet', 'specification', 'may', 'affected']"
224,224,-17.902735,-4.54491,5.0,"Spring Security (Spring Security 4.1.x before 4.1.5, 4.2.x before 4.2.4, and 5.0.x before 5.0.1; and Spring Framework 4.3.x before 4.3.14 and 5.0.x before 5.0.3) does not consider URL path parameters when processing security constraints. By adding a URL path parameter with special encodings, an attacker may be able to bypass a security constraint. The root cause of this issue is a lack of clarity regarding the handling of path parameters in the Servlet Specification. Some Servlet containers include path parameters in the value returned for getPathInfo() and some do not. Spring Security uses the value returned by getPathInfo() as part of the process of mapping requests to security constraints. In this particular attack, different character encodings used in path parameters allows secured Spring MVC static resource URLs to be bypassed.",50,spring security spring security spring framework consider url path parameters processing security constraints adding url path parameter special encodings attacker may able bypass security constraint root issue lack clarity regarding handling path parameters servlet specification servlet containers include path parameters value returned getpathinfo spring security uses value returned getpathinfo part process mapping requests security constraints particular attack different character encodings used path parameters allows secured spring mvc static resource urls bypassed,"['spring', 'security', 'spring', 'security', 'spring', 'framework', 'consider', 'url', 'path', 'parameters', 'processing', 'security', 'constraints', 'adding', 'url', 'path', 'parameter', 'special', 'encodings', 'attacker', 'may', 'able', 'bypass', 'security', 'constraint', 'root', 'issue', 'lack', 'clarity', 'regarding', 'handling', 'path', 'parameters', 'servlet', 'specification', 'servlet', 'containers', 'include', 'path', 'parameters', 'value', 'returned', 'getpathinfo', 'spring', 'security', 'uses', 'value', 'returned', 'getpathinfo', 'part', 'process', 'mapping', 'requests', 'security', 'constraints', 'particular', 'attack', 'different', 'character', 'encodings', 'used', 'path', 'parameters', 'allows', 'secured', 'spring', 'mvc', 'static', 'resource', 'urls', 'bypassed']"
225,225,-20.025318,-11.615317,9.0,"Spring Security 5.4.x prior to 5.4.4, 5.3.x prior to 5.3.8.RELEASE, 5.2.x prior to 5.2.9.RELEASE, and older unsupported versions can fail to save the SecurityContext if it is changed more than once in a single request.A malicious user cannot cause the bug to happen (it must be programmed in). However, if the application's intent is to only allow the user to run with elevated privileges in a small portion of the application, the bug can be leveraged to extend those privileges to the rest of the application.",51,spring security prior prior release prior release older unsupported versions fail save securitycontext changed single requesta malicious user bug happen must programmed however applications intent allow user run elevated privileges small portion application bug leveraged extend privileges rest application,"['spring', 'security', 'prior', 'prior', 'release', 'prior', 'release', 'older', 'unsupported', 'versions', 'fail', 'save', 'securitycontext', 'changed', 'single', 'requesta', 'malicious', 'user', 'bug', 'happen', 'must', 'programmed', 'however', 'applications', 'intent', 'allow', 'user', 'run', 'elevated', 'privileges', 'small', 'portion', 'application', 'bug', 'leveraged', 'extend', 'privileges', 'rest', 'application']"
226,226,-19.50959,-5.135154,7.5,"In spring security versions prior to 5.4.11+, 5.5.7+ , 5.6.4+ and older unsupported versions, RegexRequestMatcher can easily be misconfigured to be bypassed on some servlet containers. Applications using RegexRequestMatcher with `.` in the regular expression are possibly vulnerable to an authorization bypass.",50,spring security versions prior older unsupported versions regexrequestmatcher easily misconfigured bypassed servlet containers applications using regexrequestmatcher regular expression possibly authorization bypass,"['spring', 'security', 'versions', 'prior', 'older', 'unsupported', 'versions', 'regexrequestmatcher', 'easily', 'misconfigured', 'bypassed', 'servlet', 'containers', 'applications', 'using', 'regexrequestmatcher', 'regular', 'expression', 'possibly', 'authorization', 'bypass']"
227,227,-20.538874,-13.729718,9.8,"In Spring Security, versions 5.7.x prior to 5.7.8, versions 5.8.x prior to 5.8.3, and versions 6.0.x prior to 6.0.3, the logout support does not properly clean the security context if using serialized versions. Additionally, it is not possible to explicitly save an empty security context to the HttpSessionSecurityContextRepository. This vulnerability can keep users authenticated even after they performed logout. Users of affected versions should apply the following mitigation. 5.7.x users should upgrade to 5.7.8. 5.8.x users should upgrade to 5.8.3. 6.0.x users should upgrade to 6.0.3.",51,spring security versions prior versions prior versions prior logout support properly clean security context using serialized versions additionally possible explicitly save empty security context httpsessionsecuritycontextrepository vulnerability keep users authenticated even performed logout users affected versions apply following mitigation users upgrade users upgrade users upgrade,"['spring', 'security', 'versions', 'prior', 'versions', 'prior', 'versions', 'prior', 'logout', 'support', 'properly', 'clean', 'security', 'context', 'using', 'serialized', 'versions', 'additionally', 'possible', 'explicitly', 'save', 'empty', 'security', 'context', 'httpsessionsecuritycontextrepository', 'vulnerability', 'keep', 'users', 'authenticated', 'even', 'performed', 'logout', 'users', 'affected', 'versions', 'apply', 'following', 'mitigation', 'users', 'upgrade', 'users', 'upgrade', 'users', 'upgrade']"
228,228,-18.521832,-30.204403,4.0,"Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",54,spring framework versions prior versions prior older unsupported versions allows applications expose stomp websocket endpoints simple inmemory stomp broker springmessaging module malicious user attacker craft message broker lead regular expression denial service attack,"['spring', 'framework', 'versions', 'prior', 'versions', 'prior', 'older', 'unsupported', 'versions', 'allows', 'applications', 'expose', 'stomp', 'websocket', 'endpoints', 'simple', 'inmemory', 'stomp', 'broker', 'springmessaging', 'module', 'malicious', 'user', 'attacker', 'craft', 'message', 'broker', 'lead', 'regular', 'expression', 'denial', 'service', 'attack']"
229,229,-18.354433,-30.122622,7.5,"Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, allow applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a remote code execution attack.",54,spring framework versions prior versions prior older unsupported versions allow applications expose stomp websocket endpoints simple inmemory stomp broker springmessaging module malicious user attacker craft message broker lead remote code execution attack,"['spring', 'framework', 'versions', 'prior', 'versions', 'prior', 'older', 'unsupported', 'versions', 'allow', 'applications', 'expose', 'stomp', 'websocket', 'endpoints', 'simple', 'inmemory', 'stomp', 'broker', 'springmessaging', 'module', 'malicious', 'user', 'attacker', 'craft', 'message', 'broker', 'lead', 'remote', 'code', 'execution', 'attack']"
230,230,-9.804438,76.28993,4.0,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",55,spring framework versions older unsupported versions possible user provide specially crafted spel expression may cause denial service condition,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denial', 'service', 'condition']"
231,231,-59.461414,-26.82877,6.5,"In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",56,spring framework versions release release older unsupported versions possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'release', 'release', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
232,232,-2.763201,55.157314,6.5,"In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",57,spring framework versions prior release possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'prior', 'release', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
233,233,-3.990791,-11.596862,4.3,"Pivotal Spring Framework before 3.2.14 and 4.x before 4.1.7 do not properly process inline DTD declarations when DTD is not entirely disabled, which allows remote attackers to cause a denial of service (memory consumption and out-of-memory errors) via a crafted XML file.",58,pivotal spring framework properly process inline dtd declarations dtd entirely disabled allows remote attackers cause denial service memory consumption outofmemory errors via crafted xml file,"['pivotal', 'spring', 'framework', 'properly', 'process', 'inline', 'dtd', 'declarations', 'dtd', 'entirely', 'disabled', 'allows', 'remote', 'attackers', 'cause', 'denial', 'service', 'memory', 'consumption', 'outofmemory', 'errors', 'via', 'crafted', 'xml', 'file']"
234,234,-3.1750014,-10.152458,7.5,"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",58,pivotal spring framework suffers potential remote code execution rce issue used java deserialization data depending library implemented within product issue may occur authentication may required note vendors position data intended use case products behavior changed users rely deserialization trusted data,"['pivotal', 'spring', 'framework', 'suffers', 'potential', 'remote', 'code', 'execution', 'rce', 'issue', 'used', 'java', 'deserialization', 'data', 'depending', 'library', 'implemented', 'within', 'product', 'issue', 'may', 'occur', 'authentication', 'may', 'required', 'note', 'vendors', 'position', 'data', 'intended', 'use', 'case', 'products', 'behavior', 'changed', 'users', 'rely', 'deserialization', 'trusted', 'data']"
235,235,-15.568024,-14.329594,4.3,"Spring Framework (versions 5.0.x prior to 5.0.7, versions 4.3.x prior to 4.3.18, and older unsupported versions) allow web applications to change the HTTP request method to any HTTP method (including TRACE) using the HiddenHttpMethodFilter in Spring MVC. If an application has a pre-existing XSS vulnerability, a malicious user (or attacker) can use this filter to escalate to an XST (Cross Site Tracing) attack.",59,spring framework versions prior versions prior older unsupported versions allow web applications change http request method http method including trace using hiddenhttpmethodfilter spring mvc application preexisting xss vulnerability malicious user attacker use filter escalate xst cross site tracing attack,"['spring', 'framework', 'versions', 'prior', 'versions', 'prior', 'older', 'unsupported', 'versions', 'allow', 'web', 'applications', 'change', 'http', 'request', 'method', 'http', 'method', 'including', 'trace', 'using', 'hiddenhttpmethodfilter', 'spring', 'mvc', 'application', 'preexisting', 'xss', 'vulnerability', 'malicious', 'user', 'attacker', 'use', 'filter', 'escalate', 'xst', 'cross', 'site', 'tracing', 'attack']"
236,236,-13.513433,-9.419436,6.0,"Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.",60,spring framework versions prior versions prior older unsupported versions provide clientside support multipart requests spring mvc spring webflux server application server receives input remote client uses input make multipart request another server server exposed attack extra multipart inserted content request server causing server use wrong value part expects could lead privilege escalation example part content represents username user roles,"['spring', 'framework', 'versions', 'prior', 'versions', 'prior', 'older', 'unsupported', 'versions', 'provide', 'clientside', 'support', 'multipart', 'requests', 'spring', 'mvc', 'spring', 'webflux', 'server', 'application', 'server', 'receives', 'input', 'remote', 'client', 'uses', 'input', 'make', 'multipart', 'request', 'another', 'server', 'server', 'exposed', 'attack', 'extra', 'multipart', 'inserted', 'content', 'request', 'server', 'causing', 'server', 'use', 'wrong', 'value', 'part', 'expects', 'could', 'lead', 'privilege', 'escalation', 'example', 'part', 'content', 'represents', 'username', 'user', 'roles']"
237,237,-9.855834,-21.375496,3.6,"In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",21,spring framework versions older unsupported versions protections rfd attacks cve may bypassed depending browser used use jsessionid path parameter,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'protections', 'rfd', 'attacks', 'cve', 'may', 'bypassed', 'depending', 'browser', 'used', 'use', 'jsessionid', 'path', 'parameter']"
238,238,33.5852,16.562237,4.6,** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.,61,unsupported assigned springboot versions prior version vrelease temporary directory hijacking vulnerability impacted orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir method note vulnerability affects products andor versions longer supported maintainer,"['unsupported', 'assigned', 'springboot', 'versions', 'prior', 'version', 'vrelease', 'temporary', 'directory', 'hijacking', 'vulnerability', 'impacted', 'orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir', 'method', 'note', 'vulnerability', 'affects', 'products', 'andor', 'versions', 'longer', 'supported', 'maintainer']"
239,239,-20.519024,-23.035364,7.5,"In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.",62,spring boot versions older unsupported versions potential denialofservice dos attack spring mvc used together reverse proxy cache,"['spring', 'boot', 'versions', 'older', 'unsupported', 'versions', 'potential', 'denialofservice', 'dos', 'attack', 'spring', 'mvc', 'used', 'together', 'reverse', 'proxy', 'cache']"
240,240,40.83986,-8.967619,9.8,QOS.ch Logback before 1.2.0 has a serialization vulnerability affecting the SocketServer and ServerSocketReceiver components. Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2017-5929 for details,5,qosch logback serialization vulnerability affecting socketserver serversocketreceiver components sonatypes research suggests cves details differ defined nvd see details,"['qosch', 'logback', 'serialization', 'vulnerability', 'affecting', 'socketserver', 'serversocketreceiver', 'components', 'sonatypes', 'research', 'suggests', 'cves', 'details', 'differ', 'defined', 'nvd', 'see', 'details']"
241,241,21.03605,-45.92054,8.5,"In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",24,logback version prior versions attacker required privileges edit configurations files could craft malicious configuration allowing execute arbitrary code loaded ldap servers,"['logback', 'version', 'prior', 'versions', 'attacker', 'required', 'privileges', 'edit', 'configurations', 'files', 'could', 'craft', 'malicious', 'configuration', 'allowing', 'execute', 'arbitrary', 'code', 'loaded', 'ldap', 'servers']"
242,242,21.101345,-46.372902,8.5,"In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",24,logback version prior versions attacker required privileges edit configurations files could craft malicious configuration allowing execute arbitrary code loaded ldap servers,"['logback', 'version', 'prior', 'versions', 'attacker', 'required', 'privileges', 'edit', 'configurations', 'files', 'could', 'craft', 'malicious', 'configuration', 'allowing', 'execute', 'arbitrary', 'code', 'loaded', 'ldap', 'servers']"
243,243,-76.85709,6.82743,7.5,"The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",8,alias feature snakeyaml allows entity expansion load operation related issue cve,"['alias', 'feature', 'snakeyaml', 'allows', 'entity', 'expansion', 'load', 'operation', 'related', 'issue', 'cve']"
244,244,-49.17008,6.1581073,9.8,SnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.,9,snakeyamls constructor class restrict types instantiated deserialization deserializing yaml content provided attacker lead remote code execution recommend using snakeyamls safeconsturctor parsing content restrict deserialization recommend upgrading version beyond,"['snakeyamls', 'constructor', 'class', 'restrict', 'types', 'instantiated', 'deserialization', 'deserializing', 'yaml', 'content', 'provided', 'attacker', 'lead', 'remote', 'code', 'execution', 'recommend', 'using', 'snakeyamls', 'safeconsturctor', 'parsing', 'content', 'restrict', 'deserialization', 'recommend', 'upgrading', 'version', 'beyond']"
245,245,-69.81176,4.852778,7.5,The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.,10,package orgyamlsnakeyaml denial service dos due missing nested depth limitation collections,"['package', 'orgyamlsnakeyaml', 'denial', 'service', 'dos', 'due', 'missing', 'nested', 'depth', 'limitation', 'collections']"
246,246,-59.133007,6.7640624,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
247,247,-57.292664,5.9112267,5.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
248,248,-58.09759,4.980061,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
249,249,-64.840675,12.345148,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",12,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
250,250,-59.196587,18.353094,6.5,"Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",13,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stack overflow effect may support denial service attack,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stack', 'overflow', 'effect', 'may', 'support', 'denial', 'service', 'attack']"
251,251,15.583335,-14.255947,9.3,"When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).",29,running windows enablecmdlinearguments enabled cgi servlet apache tomcat remote code execution due bug way jre passes command line arguments windows cgi servlet disabled default cgi option enablecmdlinearguments disable default tomcat disabled default versions response vulnerability detailed explanation jre behaviour see markus wulftanges blog archived msdn blog,"['running', 'windows', 'enablecmdlinearguments', 'enabled', 'cgi', 'servlet', 'apache', 'tomcat', 'remote', 'code', 'execution', 'due', 'bug', 'way', 'jre', 'passes', 'command', 'line', 'arguments', 'windows', 'cgi', 'servlet', 'disabled', 'default', 'cgi', 'option', 'enablecmdlinearguments', 'disable', 'default', 'tomcat', 'disabled', 'default', 'versions', 'response', 'vulnerability', 'detailed', 'explanation', 'jre', 'behaviour', 'see', 'markus', 'wulftanges', 'blog', 'archived', 'msdn', 'blog']"
252,252,19.950321,-39.634655,7.5,"If a web application sends a WebSocket message concurrently with the WebSocket connection closing when running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the application will continue to use the socket after it has been closed. The error handling triggered in this case could cause the a pooled object to be placed in the pool twice. This could result in subsequent connections using the same object concurrently which could result in data being returned to the wrong use and/or other errors.",24,web application sends websocket message concurrently websocket connection closing running apache tomcat apache tomcat possible application continue use socket closed error handling triggered case could cause pooled object placed pool twice could result subsequent connections using object concurrently could result data returned wrong use andor errors,"['web', 'application', 'sends', 'websocket', 'message', 'concurrently', 'websocket', 'connection', 'closing', 'running', 'apache', 'tomcat', 'apache', 'tomcat', 'possible', 'application', 'continue', 'use', 'socket', 'closed', 'error', 'handling', 'triggered', 'case', 'could', 'cause', 'pooled', 'object', 'placed', 'pool', 'twice', 'could', 'result', 'subsequent', 'connections', 'using', 'object', 'concurrently', 'could', 'result', 'data', 'returned', 'wrong', 'use', 'andor', 'errors']"
253,253,-6.759481,9.844419,4.3,A vulnerability was found in Hibernate-Validator. The SafeHtml validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions. This vulnerability can result in an XSS attack.,17,vulnerability hibernatevalidator safehtml validator annotation fails properly sanitize payloads consisting potentially malicious code html comments instructions vulnerability result xss attack,"['vulnerability', 'hibernatevalidator', 'safehtml', 'validator', 'annotation', 'fails', 'properly', 'sanitize', 'payloads', 'consisting', 'potentially', 'malicious', 'code', 'html', 'comments', 'instructions', 'vulnerability', 'result', 'xss', 'attack']"
254,254,-8.086137,7.6388416,5.0,"A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.",17,hibernate validator version final bug message interpolation processor enables invalid el expressions evaluated valid allows attackers bypass input sanitation escaping stripping controls developers may put place handling usercontrolled data error messages,"['hibernate', 'validator', 'version', 'final', 'bug', 'message', 'interpolation', 'processor', 'enables', 'invalid', 'el', 'expressions', 'evaluated', 'valid', 'allows', 'attackers', 'bypass', 'input', 'sanitation', 'escaping', 'stripping', 'controls', 'developers', 'may', 'put', 'place', 'handling', 'usercontrolled', 'data', 'error', 'messages']"
255,255,-3.4844413,-10.414859,7.5,"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",58,pivotal spring framework suffers potential remote code execution rce issue used java deserialization data depending library implemented within product issue may occur authentication may required note vendors position data intended use case products behavior changed users rely deserialization trusted data,"['pivotal', 'spring', 'framework', 'suffers', 'potential', 'remote', 'code', 'execution', 'rce', 'issue', 'used', 'java', 'deserialization', 'data', 'depending', 'library', 'implemented', 'within', 'product', 'issue', 'may', 'occur', 'authentication', 'may', 'required', 'note', 'vendors', 'position', 'data', 'intended', 'use', 'case', 'products', 'behavior', 'changed', 'users', 'rely', 'deserialization', 'trusted', 'data']"
256,256,-14.635179,-13.863408,5.0,"Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.",59,spring framework version versions prior versions prior older unsupported versions branch provide support range requests serving static resources resourcehttprequesthandler starting annotated controller returns orgspringframeworkcoreioresource malicious user attacker add range header high number ranges wide ranges overlap denial service attack vulnerability affects applications depend either springwebmvc springwebflux applications must also registration serving static resources eg js css images others annotated controller returns orgspringframeworkcoreioresource spring boot applications depend springbootstarterweb springbootstarterwebflux ready serve static resources box therefore,"['spring', 'framework', 'version', 'versions', 'prior', 'versions', 'prior', 'older', 'unsupported', 'versions', 'branch', 'provide', 'support', 'range', 'requests', 'serving', 'static', 'resources', 'resourcehttprequesthandler', 'starting', 'annotated', 'controller', 'returns', 'orgspringframeworkcoreioresource', 'malicious', 'user', 'attacker', 'add', 'range', 'header', 'high', 'number', 'ranges', 'wide', 'ranges', 'overlap', 'denial', 'service', 'attack', 'vulnerability', 'affects', 'applications', 'depend', 'either', 'springwebmvc', 'springwebflux', 'applications', 'must', 'also', 'registration', 'serving', 'static', 'resources', 'eg', 'js', 'css', 'images', 'others', 'annotated', 'controller', 'returns', 'orgspringframeworkcoreioresource', 'spring', 'boot', 'applications', 'depend', 'springbootstarterweb', 'springbootstarterwebflux', 'ready', 'serve', 'static', 'resources', 'box', 'therefore']"
257,257,-9.35435,-21.449232,3.6,"In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",21,spring framework versions older unsupported versions protections rfd attacks cve may bypassed depending browser used use jsessionid path parameter,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'protections', 'rfd', 'attacks', 'cve', 'may', 'bypassed', 'depending', 'browser', 'used', 'use', 'jsessionid', 'path', 'parameter']"
258,258,3.6851435,-21.897636,7.5,"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",52,spring mvc spring webflux application running jdk may remote code execution rce via data binding specific exploit requires application run tomcat war deployment application deployed spring boot executable jar ie default exploit however nature vulnerability general may ways exploit,"['spring', 'mvc', 'spring', 'webflux', 'application', 'running', 'jdk', 'may', 'remote', 'code', 'execution', 'rce', 'via', 'data', 'binding', 'specific', 'exploit', 'requires', 'application', 'run', 'tomcat', 'war', 'deployment', 'application', 'deployed', 'spring', 'boot', 'executable', 'jar', 'ie', 'default', 'exploit', 'however', 'nature', 'vulnerability', 'general', 'may', 'ways', 'exploit']"
259,259,-42.692665,45.080177,5.0,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",53,spring framework versions older unsupported versions patterns disallowedfields databinder case sensitive means field effectively protected unless listed upper lower case first character field including upper lower case first character nested fields within property path,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'patterns', 'disallowedfields', 'databinder', 'case', 'sensitive', 'means', 'field', 'effectively', 'protected', 'unless', 'listed', 'upper', 'lower', 'case', 'first', 'character', 'field', 'including', 'upper', 'lower', 'case', 'first', 'character', 'nested', 'fields', 'within', 'property', 'path']"
260,260,-14.820778,-17.405252,2.6,"Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.",63,spring framework versions prior csrf attacks cors preflight requests target spring mvc springwebmvc module spring webflux springwebflux module endpoints nonauthenticated endpoints preflight requests include credentials therefore requests fail authentication however notable exception chrome based browsers using client certificates authentication since chrome sends tls client certificates cors preflight requests violation spec requirements http body sent received result attack,"['spring', 'framework', 'versions', 'prior', 'csrf', 'attacks', 'cors', 'preflight', 'requests', 'target', 'spring', 'mvc', 'springwebmvc', 'module', 'spring', 'webflux', 'springwebflux', 'module', 'endpoints', 'nonauthenticated', 'endpoints', 'preflight', 'requests', 'include', 'credentials', 'therefore', 'requests', 'fail', 'authentication', 'however', 'notable', 'exception', 'chrome', 'based', 'browsers', 'using', 'client', 'certificates', 'authentication', 'since', 'chrome', 'sends', 'tls', 'client', 'certificates', 'cors', 'preflight', 'requests', 'violation', 'spec', 'requirements', 'http', 'body', 'sent', 'received', 'result', 'attack']"
261,261,-11.962507,-31.610615,4.0,"In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.",64,spring framework versions older unsupported versions possible user provide malicious input cause insertion additional log entries followup cve protects additional types input places spring framework codebase,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'malicious', 'input', 'cause', 'insertion', 'additional', 'log', 'entries', 'followup', 'cve', 'protects', 'additional', 'types', 'input', 'places', 'spring', 'framework', 'codebase']"
262,262,-10.1453,77.21159,4.0,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",55,spring framework versions older unsupported versions possible user provide specially crafted spel expression may cause denial service condition,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denial', 'service', 'condition']"
263,263,-59.105465,-27.334703,6.5,"In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",56,spring framework versions release release older unsupported versions possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'release', 'release', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
264,264,-2.9654999,56.386066,6.5,"In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",57,spring framework versions prior release possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'prior', 'release', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
265,265,42.670414,26.823011,4.4,"In Eclipse Jetty versions 1.0 thru 9.4.32.v20200930, 10.0.0.alpha1 thru 10.0.0.beta2, and 11.0.0.alpha1 thru 11.0.0.beta2O, on Unix like systems, the system's temporary directory is shared between all users on that system. A collocated user can observe the process of creating a temporary sub directory in the shared temporary directory and race to complete the creation of the temporary subdirectory. If the attacker wins the race then they will have read and write permission to the subdirectory used to unpack web applications, including their WEB-INF/lib jar files and JSP files. If any code is ever executed out of this temporary directory, this can lead to a local privilege escalation vulnerability.",43,eclipse jetty versions thru alpha thru beta alpha thru betao unix like systems systems temporary directory shared users system collocated user observe process creating temporary sub directory shared temporary directory race complete creation temporary subdirectory attacker wins race read write permission subdirectory used unpack web applications including webinflib jar files jsp files code ever executed temporary directory lead local privilege escalation vulnerability,"['eclipse', 'jetty', 'versions', 'thru', 'alpha', 'thru', 'beta', 'alpha', 'thru', 'betao', 'unix', 'like', 'systems', 'systems', 'temporary', 'directory', 'shared', 'users', 'system', 'collocated', 'user', 'observe', 'process', 'creating', 'temporary', 'sub', 'directory', 'shared', 'temporary', 'directory', 'race', 'complete', 'creation', 'temporary', 'subdirectory', 'attacker', 'wins', 'race', 'read', 'write', 'permission', 'subdirectory', 'used', 'unpack', 'web', 'applications', 'including', 'webinflib', 'jar', 'files', 'jsp', 'files', 'code', 'ever', 'executed', 'temporary', 'directory', 'lead', 'local', 'privilege', 'escalation', 'vulnerability']"
266,266,22.446741,46.764595,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
267,267,-15.668824,24.759382,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
268,268,-13.513434,-9.419436,6.0,"Spring Framework, versions 5.0 prior to 5.0.5 and versions 4.3 prior to 4.3.15 and older unsupported versions, provide client-side support for multipart requests. When Spring MVC or Spring WebFlux server application (server A) receives input from a remote client, and then uses that input to make a multipart request to another server (server B), it can be exposed to an attack, where an extra multipart is inserted in the content of the request from server A, causing server B to use the wrong value for a part it expects. This could to lead privilege escalation, for example, if the part content represents a username or user roles.",60,spring framework versions prior versions prior older unsupported versions provide clientside support multipart requests spring mvc spring webflux server application server receives input remote client uses input make multipart request another server server exposed attack extra multipart inserted content request server causing server use wrong value part expects could lead privilege escalation example part content represents username user roles,"['spring', 'framework', 'versions', 'prior', 'versions', 'prior', 'older', 'unsupported', 'versions', 'provide', 'clientside', 'support', 'multipart', 'requests', 'spring', 'mvc', 'spring', 'webflux', 'server', 'application', 'server', 'receives', 'input', 'remote', 'client', 'uses', 'input', 'make', 'multipart', 'request', 'another', 'server', 'server', 'exposed', 'attack', 'extra', 'multipart', 'inserted', 'content', 'request', 'server', 'causing', 'server', 'use', 'wrong', 'value', 'part', 'expects', 'could', 'lead', 'privilege', 'escalation', 'example', 'part', 'content', 'represents', 'username', 'user', 'roles']"
269,269,34.38928,17.038631,4.6,** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.,61,unsupported assigned springboot versions prior version vrelease temporary directory hijacking vulnerability impacted orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir method note vulnerability affects products andor versions longer supported maintainer,"['unsupported', 'assigned', 'springboot', 'versions', 'prior', 'version', 'vrelease', 'temporary', 'directory', 'hijacking', 'vulnerability', 'impacted', 'orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir', 'method', 'note', 'vulnerability', 'affects', 'products', 'andor', 'versions', 'longer', 'supported', 'maintainer']"
270,270,-20.0883,-23.414133,7.5,"In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.",62,spring boot versions older unsupported versions potential denialofservice dos attack spring mvc used together reverse proxy cache,"['spring', 'boot', 'versions', 'older', 'unsupported', 'versions', 'potential', 'denialofservice', 'dos', 'attack', 'spring', 'mvc', 'used', 'together', 'reverse', 'proxy', 'cache']"
271,271,20.62543,-46.444202,8.5,"In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",24,logback version prior versions attacker required privileges edit configurations files could craft malicious configuration allowing execute arbitrary code loaded ldap servers,"['logback', 'version', 'prior', 'versions', 'attacker', 'required', 'privileges', 'edit', 'configurations', 'files', 'could', 'craft', 'malicious', 'configuration', 'allowing', 'execute', 'arbitrary', 'code', 'loaded', 'ldap', 'servers']"
272,272,20.554338,-45.993702,8.5,"In logback version 1.2.7 and prior versions, an attacker with the required privileges to edit configurations files could craft a malicious configuration allowing to execute arbitrary code loaded from LDAP servers.",24,logback version prior versions attacker required privileges edit configurations files could craft malicious configuration allowing execute arbitrary code loaded ldap servers,"['logback', 'version', 'prior', 'versions', 'attacker', 'required', 'privileges', 'edit', 'configurations', 'files', 'could', 'craft', 'malicious', 'configuration', 'allowing', 'execute', 'arbitrary', 'code', 'loaded', 'ldap', 'servers']"
273,273,-76.85709,6.82743,7.5,"The Alias feature in SnakeYAML before 1.26 allows entity expansion during a load operation, a related issue to CVE-2003-1564.",8,alias feature snakeyaml allows entity expansion load operation related issue cve,"['alias', 'feature', 'snakeyaml', 'allows', 'entity', 'expansion', 'load', 'operation', 'related', 'issue', 'cve']"
274,274,-48.798058,6.725011,9.8,SnakeYaml's Constructor() class does not restrict types which can be instantiated during deserialization. Deserializing yaml content provided by an attacker can lead to remote code execution. We recommend using SnakeYaml's SafeConsturctor when parsing untrusted content to restrict deserialization. We recommend upgrading to version 2.0 and beyond.,9,snakeyamls constructor class restrict types instantiated deserialization deserializing yaml content provided attacker lead remote code execution recommend using snakeyamls safeconsturctor parsing content restrict deserialization recommend upgrading version beyond,"['snakeyamls', 'constructor', 'class', 'restrict', 'types', 'instantiated', 'deserialization', 'deserializing', 'yaml', 'content', 'provided', 'attacker', 'lead', 'remote', 'code', 'execution', 'recommend', 'using', 'snakeyamls', 'safeconsturctor', 'parsing', 'content', 'restrict', 'deserialization', 'recommend', 'upgrading', 'version', 'beyond']"
275,275,-69.785965,5.4226985,7.5,The package org.yaml:snakeyaml from 0 and before 1.31 are vulnerable to Denial of Service (DoS) due missing to nested depth limitation for collections.,10,package orgyamlsnakeyaml denial service dos due missing nested depth limitation collections,"['package', 'orgyamlsnakeyaml', 'denial', 'service', 'dos', 'due', 'missing', 'nested', 'depth', 'limitation', 'collections']"
276,276,-58.6461,3.6566691,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
277,277,-56.97783,4.8561225,5.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
278,278,-57.621006,3.8914342,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stackoverflow.",11,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
279,279,-64.840675,12.345148,6.5,"Using snakeYAML to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack-overflow.",12,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stackoverflow,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stackoverflow']"
280,280,-59.43501,18.769566,6.5,"Those using Snakeyaml to parse untrusted YAML files may be vulnerable to Denial of Service attacks (DOS). If the parser is running on user supplied input, an attacker may supply content that causes the parser to crash by stack overflow. This effect may support a denial of service attack.",13,using snakeyaml parse yaml files may denial service attacks dos parser running user supplied input attacker may supply content causes parser crash stack overflow effect may support denial service attack,"['using', 'snakeyaml', 'parse', 'yaml', 'files', 'may', 'denial', 'service', 'attacks', 'dos', 'parser', 'running', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'crash', 'stack', 'overflow', 'effect', 'may', 'support', 'denial', 'service', 'attack']"
281,281,13.420978,20.777248,4.3,"Fasterxml Jackson version Before 2.9.8 contains a CWE-20: Improper Input Validation vulnerability in Jackson-Modules-Java8 that can result in Causes a denial-of-service (DoS). This attack appear to be exploitable via The victim deserializes malicious input, specifically very large values in the nanoseconds field of a time value. This vulnerability appears to have been fixed in 2.9.8.",2,fasterxml jackson version contains cwe improper input validation vulnerability jacksonmodulesjava result causes denialofservice dos attack appear exploitable via victim deserializes malicious input specifically large values nanoseconds field time value vulnerability appears fixed,"['fasterxml', 'jackson', 'version', 'contains', 'cwe', 'improper', 'input', 'validation', 'vulnerability', 'jacksonmodulesjava', 'result', 'causes', 'denialofservice', 'dos', 'attack', 'appear', 'exploitable', 'via', 'victim', 'deserializes', 'malicious', 'input', 'specifically', 'large', 'values', 'nanoseconds', 'field', 'time', 'value', 'vulnerability', 'appears', 'fixed']"
282,282,-6.7594776,9.8444195,4.3,A vulnerability was found in Hibernate-Validator. The SafeHtml validator annotation fails to properly sanitize payloads consisting of potentially malicious code in HTML comments and instructions. This vulnerability can result in an XSS attack.,17,vulnerability hibernatevalidator safehtml validator annotation fails properly sanitize payloads consisting potentially malicious code html comments instructions vulnerability result xss attack,"['vulnerability', 'hibernatevalidator', 'safehtml', 'validator', 'annotation', 'fails', 'properly', 'sanitize', 'payloads', 'consisting', 'potentially', 'malicious', 'code', 'html', 'comments', 'instructions', 'vulnerability', 'result', 'xss', 'attack']"
283,283,-8.0861845,7.638806,5.0,"A flaw was found in Hibernate Validator version 6.1.2.Final. A bug in the message interpolation processor enables invalid EL expressions to be evaluated as if they were valid. This flaw allows attackers to bypass input sanitation (escaping, stripping) controls that developers may have put in place when handling user-controlled data in error messages.",17,hibernate validator version final bug message interpolation processor enables invalid el expressions evaluated valid allows attackers bypass input sanitation escaping stripping controls developers may put place handling usercontrolled data error messages,"['hibernate', 'validator', 'version', 'final', 'bug', 'message', 'interpolation', 'processor', 'enables', 'invalid', 'el', 'expressions', 'evaluated', 'valid', 'allows', 'attackers', 'bypass', 'input', 'sanitation', 'escaping', 'stripping', 'controls', 'developers', 'may', 'put', 'place', 'handling', 'usercontrolled', 'data', 'error', 'messages']"
284,284,-3.0727382,-10.7715845,7.5,"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",58,pivotal spring framework suffers potential remote code execution rce issue used java deserialization data depending library implemented within product issue may occur authentication may required note vendors position data intended use case products behavior changed users rely deserialization trusted data,"['pivotal', 'spring', 'framework', 'suffers', 'potential', 'remote', 'code', 'execution', 'rce', 'issue', 'used', 'java', 'deserialization', 'data', 'depending', 'library', 'implemented', 'within', 'product', 'issue', 'may', 'occur', 'authentication', 'may', 'required', 'note', 'vendors', 'position', 'data', 'intended', 'use', 'case', 'products', 'behavior', 'changed', 'users', 'rely', 'deserialization', 'trusted', 'data']"
285,285,-14.635179,-13.863408,5.0,"Spring Framework, version 5.1, versions 5.0.x prior to 5.0.10, versions 4.3.x prior to 4.3.20, and older unsupported versions on the 4.2.x branch provide support for range requests when serving static resources through the ResourceHttpRequestHandler, or starting in 5.0 when an annotated controller returns an org.springframework.core.io.Resource. A malicious user (or attacker) can add a range header with a high number of ranges, or with wide ranges that overlap, or both, for a denial of service attack. This vulnerability affects applications that depend on either spring-webmvc or spring-webflux. Such applications must also have a registration for serving static resources (e.g. JS, CSS, images, and others), or have an annotated controller that returns an org.springframework.core.io.Resource. Spring Boot applications that depend on spring-boot-starter-web or spring-boot-starter-webflux are ready to serve static resources out of the box and are therefore vulnerable.",59,spring framework version versions prior versions prior older unsupported versions branch provide support range requests serving static resources resourcehttprequesthandler starting annotated controller returns orgspringframeworkcoreioresource malicious user attacker add range header high number ranges wide ranges overlap denial service attack vulnerability affects applications depend either springwebmvc springwebflux applications must also registration serving static resources eg js css images others annotated controller returns orgspringframeworkcoreioresource spring boot applications depend springbootstarterweb springbootstarterwebflux ready serve static resources box therefore,"['spring', 'framework', 'version', 'versions', 'prior', 'versions', 'prior', 'older', 'unsupported', 'versions', 'branch', 'provide', 'support', 'range', 'requests', 'serving', 'static', 'resources', 'resourcehttprequesthandler', 'starting', 'annotated', 'controller', 'returns', 'orgspringframeworkcoreioresource', 'malicious', 'user', 'attacker', 'add', 'range', 'header', 'high', 'number', 'ranges', 'wide', 'ranges', 'overlap', 'denial', 'service', 'attack', 'vulnerability', 'affects', 'applications', 'depend', 'either', 'springwebmvc', 'springwebflux', 'applications', 'must', 'also', 'registration', 'serving', 'static', 'resources', 'eg', 'js', 'css', 'images', 'others', 'annotated', 'controller', 'returns', 'orgspringframeworkcoreioresource', 'spring', 'boot', 'applications', 'depend', 'springbootstarterweb', 'springbootstarterwebflux', 'ready', 'serve', 'static', 'resources', 'box', 'therefore']"
286,286,-7.7989564,-20.814966,7.6,"In Spring Framework, versions 5.2.x prior to 5.2.3, versions 5.1.x prior to 5.1.13, and versions 5.0.x prior to 5.0.16, an application is vulnerable to a reflected file download (RFD) attack when it sets a ""Content-Disposition"" header in the response where the filename attribute is derived from user supplied input.",21,spring framework versions prior versions prior versions prior application reflected file download rfd attack sets contentdisposition header response filename attribute derived user supplied input,"['spring', 'framework', 'versions', 'prior', 'versions', 'prior', 'versions', 'prior', 'application', 'reflected', 'file', 'download', 'rfd', 'attack', 'sets', 'contentdisposition', 'header', 'response', 'filename', 'attribute', 'derived', 'user', 'supplied', 'input']"
287,287,-9.562068,-20.910456,3.6,"In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",21,spring framework versions older unsupported versions protections rfd attacks cve may bypassed depending browser used use jsessionid path parameter,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'protections', 'rfd', 'attacks', 'cve', 'may', 'bypassed', 'depending', 'browser', 'used', 'use', 'jsessionid', 'path', 'parameter']"
288,288,-12.609925,-31.619331,4.0,"In Spring Framework versions 5.3.0 - 5.3.10, 5.2.0 - 5.2.17, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries.",64,spring framework versions older unsupported versions possible user provide malicious input cause insertion additional log entries,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'malicious', 'input', 'cause', 'insertion', 'additional', 'log', 'entries']"
289,289,-13.780916,-10.594991,4.6,"In Spring Framework, versions 5.2.x prior to 5.2.15 and versions 5.3.x prior to 5.3.7, a WebFlux application is vulnerable to a privilege escalation: by (re)creating the temporary storage directory, a locally authenticated malicious user can read or modify files that have been uploaded to the WebFlux application, or overwrite arbitrary files with multipart request data.",60,spring framework versions prior versions prior webflux application privilege escalation recreating temporary storage directory locally authenticated malicious user read modify files uploaded webflux application overwrite arbitrary files multipart request data,"['spring', 'framework', 'versions', 'prior', 'versions', 'prior', 'webflux', 'application', 'privilege', 'escalation', 'recreating', 'temporary', 'storage', 'directory', 'locally', 'authenticated', 'malicious', 'user', 'read', 'modify', 'files', 'uploaded', 'webflux', 'application', 'overwrite', 'arbitrary', 'files', 'multipart', 'request', 'data']"
290,290,2.9456785,-22.48332,7.5,"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",52,spring mvc spring webflux application running jdk may remote code execution rce via data binding specific exploit requires application run tomcat war deployment application deployed spring boot executable jar ie default exploit however nature vulnerability general may ways exploit,"['spring', 'mvc', 'spring', 'webflux', 'application', 'running', 'jdk', 'may', 'remote', 'code', 'execution', 'rce', 'via', 'data', 'binding', 'specific', 'exploit', 'requires', 'application', 'run', 'tomcat', 'war', 'deployment', 'application', 'deployed', 'spring', 'boot', 'executable', 'jar', 'ie', 'default', 'exploit', 'however', 'nature', 'vulnerability', 'general', 'may', 'ways', 'exploit']"
291,291,-14.810621,-17.396767,2.6,"Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.",63,spring framework versions prior csrf attacks cors preflight requests target spring mvc springwebmvc module spring webflux springwebflux module endpoints nonauthenticated endpoints preflight requests include credentials therefore requests fail authentication however notable exception chrome based browsers using client certificates authentication since chrome sends tls client certificates cors preflight requests violation spec requirements http body sent received result attack,"['spring', 'framework', 'versions', 'prior', 'csrf', 'attacks', 'cors', 'preflight', 'requests', 'target', 'spring', 'mvc', 'springwebmvc', 'module', 'spring', 'webflux', 'springwebflux', 'module', 'endpoints', 'nonauthenticated', 'endpoints', 'preflight', 'requests', 'include', 'credentials', 'therefore', 'requests', 'fail', 'authentication', 'however', 'notable', 'exception', 'chrome', 'based', 'browsers', 'using', 'client', 'certificates', 'authentication', 'since', 'chrome', 'sends', 'tls', 'client', 'certificates', 'cors', 'preflight', 'requests', 'violation', 'spec', 'requirements', 'http', 'body', 'sent', 'received', 'result', 'attack']"
292,292,-12.231715,-31.116495,4.0,"In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.",64,spring framework versions older unsupported versions possible user provide malicious input cause insertion additional log entries followup cve protects additional types input places spring framework codebase,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'malicious', 'input', 'cause', 'insertion', 'additional', 'log', 'entries', 'followup', 'cve', 'protects', 'additional', 'types', 'input', 'places', 'spring', 'framework', 'codebase']"
293,293,-43.15529,43.45864,5.0,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",53,spring framework versions older unsupported versions patterns disallowedfields databinder case sensitive means field effectively protected unless listed upper lower case first character field including upper lower case first character nested fields within property path,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'patterns', 'disallowedfields', 'databinder', 'case', 'sensitive', 'means', 'field', 'effectively', 'protected', 'unless', 'listed', 'upper', 'lower', 'case', 'first', 'character', 'field', 'including', 'upper', 'lower', 'case', 'first', 'character', 'nested', 'fields', 'within', 'property', 'path']"
294,294,-10.1453,77.21159,4.0,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",55,spring framework versions older unsupported versions possible user provide specially crafted spel expression may cause denial service condition,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denial', 'service', 'condition']"
295,295,-58.489624,-27.278341,6.5,"In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",56,spring framework versions release release older unsupported versions possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'release', 'release', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
296,296,-3.4440536,55.98912,6.5,"In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",57,spring framework versions prior release possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'prior', 'release', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
297,297,33.956425,17.418854,4.6,** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.,61,unsupported assigned springboot versions prior version vrelease temporary directory hijacking vulnerability impacted orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir method note vulnerability affects products andor versions longer supported maintainer,"['unsupported', 'assigned', 'springboot', 'versions', 'prior', 'version', 'vrelease', 'temporary', 'directory', 'hijacking', 'vulnerability', 'impacted', 'orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir', 'method', 'note', 'vulnerability', 'affects', 'products', 'andor', 'versions', 'longer', 'supported', 'maintainer']"
298,298,-43.51891,44.87749,5.0,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",53,spring framework versions older unsupported versions patterns disallowedfields databinder case sensitive means field effectively protected unless listed upper lower case first character field including upper lower case first character nested fields within property path,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'patterns', 'disallowedfields', 'databinder', 'case', 'sensitive', 'means', 'field', 'effectively', 'protected', 'unless', 'listed', 'upper', 'lower', 'case', 'first', 'character', 'field', 'including', 'upper', 'lower', 'case', 'first', 'character', 'nested', 'fields', 'within', 'property', 'path']"
299,299,-20.288906,-22.505783,7.5,"In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.",62,spring boot versions older unsupported versions potential denialofservice dos attack spring mvc used together reverse proxy cache,"['spring', 'boot', 'versions', 'older', 'unsupported', 'versions', 'potential', 'denialofservice', 'dos', 'attack', 'spring', 'mvc', 'used', 'together', 'reverse', 'proxy', 'cache']"
300,300,33.457653,17.12599,4.6,** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.,61,unsupported assigned springboot versions prior version vrelease temporary directory hijacking vulnerability impacted orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir method note vulnerability affects products andor versions longer supported maintainer,"['unsupported', 'assigned', 'springboot', 'versions', 'prior', 'version', 'vrelease', 'temporary', 'directory', 'hijacking', 'vulnerability', 'impacted', 'orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir', 'method', 'note', 'vulnerability', 'affects', 'products', 'andor', 'versions', 'longer', 'supported', 'maintainer']"
301,301,-43.745056,44.06209,5.0,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",53,spring framework versions older unsupported versions patterns disallowedfields databinder case sensitive means field effectively protected unless listed upper lower case first character field including upper lower case first character nested fields within property path,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'patterns', 'disallowedfields', 'databinder', 'case', 'sensitive', 'means', 'field', 'effectively', 'protected', 'unless', 'listed', 'upper', 'lower', 'case', 'first', 'character', 'field', 'including', 'upper', 'lower', 'case', 'first', 'character', 'nested', 'fields', 'within', 'property', 'path']"
302,302,4.0106134,-22.415197,7.5,"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",52,spring mvc spring webflux application running jdk may remote code execution rce via data binding specific exploit requires application run tomcat war deployment application deployed spring boot executable jar ie default exploit however nature vulnerability general may ways exploit,"['spring', 'mvc', 'spring', 'webflux', 'application', 'running', 'jdk', 'may', 'remote', 'code', 'execution', 'rce', 'via', 'data', 'binding', 'specific', 'exploit', 'requires', 'application', 'run', 'tomcat', 'war', 'deployment', 'application', 'deployed', 'spring', 'boot', 'executable', 'jar', 'ie', 'default', 'exploit', 'however', 'nature', 'vulnerability', 'general', 'may', 'ways', 'exploit']"
303,303,-9.176316,77.0493,4.0,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",55,spring framework versions older unsupported versions possible user provide specially crafted spel expression may cause denial service condition,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denial', 'service', 'condition']"
304,304,-59.202927,-26.265203,6.5,"In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",56,spring framework versions release release older unsupported versions possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'release', 'release', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
305,305,-2.3839672,56.161713,6.5,"In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",57,spring framework versions prior release possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'prior', 'release', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
306,306,-19.714924,-22.562292,7.5,"In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.",62,spring boot versions older unsupported versions potential denialofservice dos attack spring mvc used together reverse proxy cache,"['spring', 'boot', 'versions', 'older', 'unsupported', 'versions', 'potential', 'denialofservice', 'dos', 'attack', 'spring', 'mvc', 'used', 'together', 'reverse', 'proxy', 'cache']"
307,307,16.22239,24.219887,7.5,A stack overflow in the XML.toJSONObject component of hutool-json v5.8.10 allows attackers to cause a Denial of Service (DoS) via crafted JSON or XML data.,2,stack overflow xmltojsonobject component hutooljson allows attackers cause denial service dos via crafted json xml data,"['stack', 'overflow', 'xmltojsonobject', 'component', 'hutooljson', 'allows', 'attackers', 'cause', 'denial', 'service', 'dos', 'via', 'crafted', 'json', 'xml', 'data']"
308,308,1.7732732,40.74253,6.8,"HtmlUnit prior to 2.37.0 contains code execution vulnerabilities. HtmlUnit initializes Rhino engine improperly, hence a malicious JavScript code can execute arbitrary Java code on the application. Moreover, when embedded in Android application, Android-specific initialization of Rhino engine is done in an improper way, hence a malicious JavaScript code can execute arbitrary Java code on the application.",65,htmlunit prior contains code execution vulnerabilities htmlunit initializes rhino engine improperly hence malicious javscript code execute arbitrary java code application moreover embedded android application androidspecific initialization rhino engine done improper way hence malicious javascript code execute arbitrary java code application,"['htmlunit', 'prior', 'contains', 'code', 'execution', 'vulnerabilities', 'htmlunit', 'initializes', 'rhino', 'engine', 'improperly', 'hence', 'malicious', 'javscript', 'code', 'execute', 'arbitrary', 'java', 'code', 'application', 'moreover', 'embedded', 'android', 'application', 'androidspecific', 'initialization', 'rhino', 'engine', 'done', 'improper', 'way', 'hence', 'malicious', 'javascript', 'code', 'execute', 'arbitrary', 'java', 'code', 'application']"
309,309,-0.7612545,40.204784,9.8,"Versions of the package net.sourceforge.htmlunit:htmlunit from 0 and before 3.0.0 are vulnerable to Remote Code Execution (RCE) via XSTL, when browsing the attacker’s webpage.",65,versions package netsourceforgehtmlunithtmlunit remote code execution rce via xstl browsing attackers webpage,"['versions', 'package', 'netsourceforgehtmlunithtmlunit', 'remote', 'code', 'execution', 'rce', 'via', 'xstl', 'browsing', 'attackers', 'webpage']"
310,310,0.7661142,38.925064,7.5,"Those using HtmlUnit to browse untrusted webpages may be vulnerable to Denial of service attacks (DoS). If HtmlUnit is running on user supplied web pages, an attacker may supply content that causes HtmlUnit to crash by a stack overflow. This effect may support a denial of service attack.This issue affects htmlunit before 2.70.0.",65,using htmlunit browse webpages may denial service attacks dos htmlunit running user supplied web pages attacker may supply content causes htmlunit crash stack overflow effect may support denial service attackthis issue affects htmlunit,"['using', 'htmlunit', 'browse', 'webpages', 'may', 'denial', 'service', 'attacks', 'dos', 'htmlunit', 'running', 'user', 'supplied', 'web', 'pages', 'attacker', 'may', 'supply', 'content', 'causes', 'htmlunit', 'crash', 'stack', 'overflow', 'effect', 'may', 'support', 'denial', 'service', 'attackthis', 'issue', 'affects', 'htmlunit']"
311,311,-1.9199302,20.117376,7.5,"The TransformerFactory in Apache Xalan-Java before 2.7.2 does not properly restrict access to certain properties when FEATURE_SECURE_PROCESSING is enabled, which allows remote attackers to bypass expected restrictions and load arbitrary classes or access external resources via a crafted (1) xalan:content-header, (2) xalan:entities, (3) xslt:content-header, or (4) xslt:entities property, or a Java property that is bound to the XSLT 1.0 system-property function.",66,transformerfactory apache xalanjava properly restrict access certain properties featuresecureprocessing enabled allows remote attackers bypass expected restrictions load arbitrary classes access external resources via crafted xalancontentheader xalanentities xsltcontentheader xsltentities property java property bound xslt systemproperty function,"['transformerfactory', 'apache', 'xalanjava', 'properly', 'restrict', 'access', 'certain', 'properties', 'featuresecureprocessing', 'enabled', 'allows', 'remote', 'attackers', 'bypass', 'expected', 'restrictions', 'load', 'arbitrary', 'classes', 'access', 'external', 'resources', 'via', 'crafted', 'xalancontentheader', 'xalanentities', 'xsltcontentheader', 'xsltentities', 'property', 'java', 'property', 'bound', 'xslt', 'systemproperty', 'function']"
312,312,-1.3064487,20.767685,7.5,The Apache Xalan Java XSLT library is vulnerable to an integer truncation issue when processing malicious XSLT stylesheets. This can be used to corrupt Java class files generated by the internal XSLTC compiler and execute arbitrary Java bytecode. Users are recommended to update to version 2.7.3 or later. Note: Java runtimes (such as OpenJDK) include repackaged copies of Xalan.,66,apache xalan java xslt library integer truncation issue processing malicious xslt stylesheets used corrupt java class files generated internal xsltc compiler execute arbitrary java bytecode users recommended update version later note java runtimes openjdk include repackaged copies xalan,"['apache', 'xalan', 'java', 'xslt', 'library', 'integer', 'truncation', 'issue', 'processing', 'malicious', 'xslt', 'stylesheets', 'used', 'corrupt', 'java', 'class', 'files', 'generated', 'internal', 'xsltc', 'compiler', 'execute', 'arbitrary', 'java', 'bytecode', 'users', 'recommended', 'update', 'version', 'later', 'note', 'java', 'runtimes', 'openjdk', 'include', 'repackaged', 'copies', 'xalan']"
313,313,2.9368412,21.036764,7.8,"Apache Xerces2 Java Parser before 2.12.0 allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.",67,apache xerces java parser allows remote attackers cause denial service cpu consumption via crafted message xml service triggers hash table collisions,"['apache', 'xerces', 'java', 'parser', 'allows', 'remote', 'attackers', 'cause', 'denial', 'service', 'cpu', 'consumption', 'via', 'crafted', 'message', 'xml', 'service', 'triggers', 'hash', 'table', 'collisions']"
314,314,3.1906443,19.369322,7.1,"XMLscanner.java in Apache Xerces2 Java Parser before 2.12.0, as used in the Java Runtime Environment (JRE) in IBM Java 5.0 before 5.0 SR16-FP3, 6 before 6 SR14, 6.0.1 before 6.0.1 SR6, and 7 before 7 SR5 as well as Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, Java SE Embedded 7u40 and earlier, and possibly other products allows remote attackers to cause a denial of service via vectors related to XML attribute names.",67,xmlscannerjava apache xerces java parser used java runtime environment jre ibm java srfp sr sr sr well oracle java se earlier java se earlier java se earlier jrockit earlier jrockit earlier java se embedded earlier possibly products allows remote attackers cause denial service via vectors related xml attribute names,"['xmlscannerjava', 'apache', 'xerces', 'java', 'parser', 'used', 'java', 'runtime', 'environment', 'jre', 'ibm', 'java', 'srfp', 'sr', 'sr', 'sr', 'well', 'oracle', 'java', 'se', 'earlier', 'java', 'se', 'earlier', 'java', 'se', 'earlier', 'jrockit', 'earlier', 'jrockit', 'earlier', 'java', 'se', 'embedded', 'earlier', 'possibly', 'products', 'allows', 'remote', 'attackers', 'cause', 'denial', 'service', 'via', 'vectors', 'related', 'xml', 'attribute', 'names']"
315,315,5.5088496,21.505375,7.1,"There's a vulnerability within the Apache Xerces Java (XercesJ) XML parser when handling specially crafted XML document payloads. This causes, the XercesJ XML parser to wait in an infinite loop, which may sometimes consume system resources for prolonged duration. This vulnerability is present within XercesJ version 2.12.1 and the previous versions.",67,vulnerability within apache xerces java xercesj xml parser handling specially crafted xml document payloads causes xercesj xml parser wait infinite loop may sometimes consume system resources prolonged duration vulnerability present within xercesj version previous versions,"['vulnerability', 'within', 'apache', 'xerces', 'java', 'xercesj', 'xml', 'parser', 'handling', 'specially', 'crafted', 'xml', 'document', 'payloads', 'causes', 'xercesj', 'xml', 'parser', 'wait', 'infinite', 'loop', 'may', 'sometimes', 'consume', 'system', 'resources', 'prolonged', 'duration', 'vulnerability', 'present', 'within', 'xercesj', 'version', 'previous', 'versions']"
316,316,3.4703884,26.649658,5.9,"sonatype-2017-0348 - xerces:xercesImpl - Denial of Service (DoS) The software contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.",68,sonatype xercesxercesimpl denial service dos software contains multiple threads executable segments waiting release necessary lock resulting deadlock,"['sonatype', 'xercesxercesimpl', 'denial', 'service', 'dos', 'software', 'contains', 'multiple', 'threads', 'executable', 'segments', 'waiting', 'release', 'necessary', 'lock', 'resulting', 'deadlock']"
317,317,-1.6974952,36.425293,5.0,org.cyberneko.html is an html parser written in Java. The fork of `org.cyberneko.html` used by Nokogiri (Rubygem) raises a `java.lang.OutOfMemoryError` exception when parsing ill-formed HTML markup. Users are advised to upgrade to `>= 1.9.22.noko2`. Note: The upstream library `org.cyberneko.html` is no longer maintained. Nokogiri uses its own fork of this library located at https://github.com/sparklemotion/nekohtml and this CVE applies only to that fork. Other forks of nekohtml may have a similar vulnerability.,65,orgcybernekohtml html parser written java fork orgcybernekohtml used nokogiri rubygem raises javalangoutofmemoryerror exception parsing illformed html markup users advised upgrade noko note upstream library orgcybernekohtml longer maintained nokogiri uses fork library located cve applies fork forks nekohtml may similar vulnerability,"['orgcybernekohtml', 'html', 'parser', 'written', 'java', 'fork', 'orgcybernekohtml', 'used', 'nokogiri', 'rubygem', 'raises', 'javalangoutofmemoryerror', 'exception', 'parsing', 'illformed', 'html', 'markup', 'users', 'advised', 'upgrade', 'noko', 'note', 'upstream', 'library', 'orgcybernekohtml', 'longer', 'maintained', 'nokogiri', 'uses', 'fork', 'library', 'located', 'cve', 'applies', 'fork', 'forks', 'nekohtml', 'may', 'similar', 'vulnerability']"
318,318,-19.889112,-68.375046,7.5,"Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",42,jetty prone timing channel utilsecuritypasswordjava makes easier remote attackers obtain access observing elapsed times rejection incorrect passwords,"['jetty', 'prone', 'timing', 'channel', 'utilsecuritypasswordjava', 'makes', 'easier', 'remote', 'attackers', 'obtain', 'access', 'observing', 'elapsed', 'times', 'rejection', 'incorrect', 'passwords']"
319,319,-14.639714,25.58077,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
320,320,43.57141,29.042145,5.0,"In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",43,eclipse jetty version server running windows exposure fully qualified base resource directory name windows remote client configured showing listing directory contents information reveal restricted content configured base resource directories,"['eclipse', 'jetty', 'version', 'server', 'running', 'windows', 'exposure', 'fully', 'qualified', 'base', 'resource', 'directory', 'name', 'windows', 'remote', 'client', 'configured', 'showing', 'listing', 'directory', 'contents', 'information', 'reveal', 'restricted', 'content', 'configured', 'base', 'resource', 'directories']"
321,321,-32.13036,-44.505436,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
322,322,-22.507181,50.04832,7.8,"In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",41,eclipse jetty alpha alpha cpu usage reach upon receiving large invalid tls frame,"['eclipse', 'jetty', 'alpha', 'alpha', 'cpu', 'usage', 'reach', 'upon', 'receiving', 'large', 'invalid', 'tls', 'frame']"
323,323,-34.28765,26.847042,9.8,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",39,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled transferencoding chunks handled poorly chunk length parsing integer overflow thus large chunk size could interpreted smaller chunk size content sent chunk body could interpreted pipelined request jetty deployed behind intermediary imposed authorization intermediary allowed arbitrarily large chunks passed unchanged could used bypass authorization imposed intermediary fake pipelined request would interpreted intermediary request,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'transferencoding', 'chunks', 'handled', 'poorly', 'chunk', 'length', 'parsing', 'integer', 'overflow', 'thus', 'large', 'chunk', 'size', 'could', 'interpreted', 'smaller', 'chunk', 'size', 'content', 'sent', 'chunk', 'body', 'could', 'interpreted', 'pipelined', 'request', 'jetty', 'deployed', 'behind', 'intermediary', 'imposed', 'authorization', 'intermediary', 'allowed', 'arbitrarily', 'large', 'chunks', 'passed', 'unchanged', 'could', 'used', 'bypass', 'authorization', 'imposed', 'intermediary', 'fake', 'pipelined', 'request', 'would', 'interpreted', 'intermediary', 'request']"
324,324,-33.209892,10.636739,9.8,"In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization. Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2017-7658 for details",40,eclipse jetty server versions older non httpx configurations httpx configurations presented two contentlengths headers jetty ignored second presented contentlength chunked encoding header contentlength ignored per rfc intermediary decided shorter length still passed longer body body content could interpreted jetty pipelined request intermediary imposing authorization fake pipelined request would bypass authorization sonatypes research suggests cves details differ defined nvd see details,"['eclipse', 'jetty', 'server', 'versions', 'older', 'non', 'httpx', 'configurations', 'httpx', 'configurations', 'presented', 'two', 'contentlengths', 'headers', 'jetty', 'ignored', 'second', 'presented', 'contentlength', 'chunked', 'encoding', 'header', 'contentlength', 'ignored', 'per', 'rfc', 'intermediary', 'decided', 'shorter', 'length', 'still', 'passed', 'longer', 'body', 'body', 'content', 'could', 'interpreted', 'jetty', 'pipelined', 'request', 'intermediary', 'imposing', 'authorization', 'fake', 'pipelined', 'request', 'would', 'bypass', 'authorization', 'sonatypes', 'research', 'suggests', 'cves', 'details', 'differ', 'defined', 'nvd', 'see', 'details']"
325,325,-39.66492,-12.799439,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
326,326,43.132675,-34.19849,5.0,"WebSocket08FrameDecoder in Netty 3.6.x before 3.6.9, 3.7.x before 3.7.1, 3.8.x before 3.8.2, 3.9.x before 3.9.1, and 4.0.x before 4.0.19 allows remote attackers to cause a denial of service (memory consumption) via a TextWebSocketFrame followed by a long stream of ContinuationWebSocketFrames.",6,websocketframedecoder netty allows remote attackers cause denial service memory consumption via textwebsocketframe followed long stream continuationwebsocketframes,"['websocketframedecoder', 'netty', 'allows', 'remote', 'attackers', 'cause', 'denial', 'service', 'memory', 'consumption', 'via', 'textwebsocketframe', 'followed', 'long', 'stream', 'continuationwebsocketframes']"
327,327,42.94922,-34.130363,4.3,"Netty before 3.9.8.Final, 3.10.x before 3.10.3.Final, 4.0.x before 4.0.28.Final, and 4.1.x before 4.1.0.Beta5 and Play Framework 2.x before 2.3.9 might allow remote attackers to bypass the httpOnly flag on cookies and obtain sensitive information by leveraging improper validation of cookie name and value characters.",6,netty final final final beta play framework might allow remote attackers bypass httponly flag cookies obtain sensitive information leveraging improper validation cookie name value characters,"['netty', 'final', 'final', 'final', 'beta', 'play', 'framework', 'might', 'allow', 'remote', 'attackers', 'bypass', 'httponly', 'flag', 'cookies', 'obtain', 'sensitive', 'information', 'leveraging', 'improper', 'validation', 'cookie', 'name', 'value', 'characters']"
328,328,41.242577,-32.025116,5.0,"Netty before 4.1.42.Final mishandles whitespace before the colon in HTTP headers (such as a ""Transfer-Encoding : chunked"" line), which leads to HTTP request smuggling.",6,netty final mishandles whitespace colon http headers transferencoding chunked line leads http request smuggling,"['netty', 'final', 'mishandles', 'whitespace', 'colon', 'http', 'headers', 'transferencoding', 'chunked', 'line', 'leads', 'http', 'request', 'smuggling']"
329,329,39.31077,-32.677223,6.4,"HttpObjectDecoder.java in Netty before 4.1.44 allows an HTTP header that lacks a colon, which might be interpreted as a separate header with an incorrect syntax, or might be interpreted as an ""invalid fold.""",6,httpobjectdecoderjava netty allows http header lacks colon might interpreted separate header incorrect syntax might interpreted invalid fold,"['httpobjectdecoderjava', 'netty', 'allows', 'http', 'header', 'lacks', 'colon', 'might', 'interpreted', 'separate', 'header', 'incorrect', 'syntax', 'might', 'interpreted', 'invalid', 'fold']"
330,330,39.455547,-32.752266,6.4,"HttpObjectDecoder.java in Netty before 4.1.44 allows a Content-Length header to be accompanied by a second Content-Length header, or by a Transfer-Encoding header.",6,httpobjectdecoderjava netty allows contentlength header accompanied second contentlength header transferencoding header,"['httpobjectdecoderjava', 'netty', 'allows', 'contentlength', 'header', 'accompanied', 'second', 'contentlength', 'header', 'transferencoding', 'header']"
331,331,41.734734,-31.785656,4.3,"Netty is an asynchronous event-driven network application framework for rapid development of maintainable high performance protocol servers & clients. Netty prior to version 4.1.71.Final skips control chars when they are present at the beginning / end of the header name. It should instead fail fast as these are not allowed by the spec and could lead to HTTP request smuggling. Failing to do the validation might cause netty to ""sanitize"" header names before it forward these to another remote system when used as proxy. This remote system can't see the invalid usage anymore, and therefore does not do the validation itself. Users should upgrade to version 4.1.71.Final.",6,netty asynchronous eventdriven network application framework rapid development maintainable high performance protocol servers clients netty prior version final skips control chars present beginning end header name instead fail fast allowed spec could lead http request smuggling failing validation might cause netty sanitize header names forward another remote system used proxy remote system see invalid usage anymore therefore validation users upgrade version final,"['netty', 'asynchronous', 'eventdriven', 'network', 'application', 'framework', 'rapid', 'development', 'maintainable', 'high', 'performance', 'protocol', 'servers', 'clients', 'netty', 'prior', 'version', 'final', 'skips', 'control', 'chars', 'present', 'beginning', 'end', 'header', 'name', 'instead', 'fail', 'fast', 'allowed', 'spec', 'could', 'lead', 'http', 'request', 'smuggling', 'failing', 'validation', 'might', 'cause', 'netty', 'sanitize', 'header', 'names', 'forward', 'another', 'remote', 'system', 'used', 'proxy', 'remote', 'system', 'see', 'invalid', 'usage', 'anymore', 'therefore', 'validation', 'users', 'upgrade', 'version', 'final']"
332,332,45.848053,-33.374115,5.0,"The ZlibDecoders in Netty 4.1.x before 4.1.46 allow for unbounded memory allocation while decoding a ZlibEncoded byte stream. An attacker could send a large ZlibEncoded byte stream to the Netty server, forcing the server to allocate all of its free memory to a single decoder.",6,zlibdecoders netty allow unbounded memory allocation decoding zlibencoded byte stream attacker could send large zlibencoded byte stream netty server forcing server allocate free memory single decoder,"['zlibdecoders', 'netty', 'allow', 'unbounded', 'memory', 'allocation', 'decoding', 'zlibencoded', 'byte', 'stream', 'attacker', 'could', 'send', 'large', 'zlibencoded', 'byte', 'stream', 'netty', 'server', 'forcing', 'server', 'allocate', 'free', 'memory', 'single', 'decoder']"
333,333,19.781475,-5.0069375,6.4,"Apache Maven will follow repositories that are defined in a dependency’s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",69,apache maven follow repositories defined dependencys project object model pom may surprising users resulting potential risk malicious actor takes repository able insert position pretend repository maven changing default behavior longer follow http nonssl repository references default details available referenced urls currently using repository manager govern repositories used builds unaffected risks present legacy behavior unaffected vulnerability change default behavior see link information repository management,"['apache', 'maven', 'follow', 'repositories', 'defined', 'dependencys', 'project', 'object', 'model', 'pom', 'may', 'surprising', 'users', 'resulting', 'potential', 'risk', 'malicious', 'actor', 'takes', 'repository', 'able', 'insert', 'position', 'pretend', 'repository', 'maven', 'changing', 'default', 'behavior', 'longer', 'follow', 'http', 'nonssl', 'repository', 'references', 'default', 'details', 'available', 'referenced', 'urls', 'currently', 'using', 'repository', 'manager', 'govern', 'repositories', 'used', 'builds', 'unaffected', 'risks', 'present', 'legacy', 'behavior', 'unaffected', 'vulnerability', 'change', 'default', 'behavior', 'see', 'link', 'information', 'repository', 'management']"
334,334,19.781456,-5.006933,6.4,"Apache Maven will follow repositories that are defined in a dependency’s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",69,apache maven follow repositories defined dependencys project object model pom may surprising users resulting potential risk malicious actor takes repository able insert position pretend repository maven changing default behavior longer follow http nonssl repository references default details available referenced urls currently using repository manager govern repositories used builds unaffected risks present legacy behavior unaffected vulnerability change default behavior see link information repository management,"['apache', 'maven', 'follow', 'repositories', 'defined', 'dependencys', 'project', 'object', 'model', 'pom', 'may', 'surprising', 'users', 'resulting', 'potential', 'risk', 'malicious', 'actor', 'takes', 'repository', 'able', 'insert', 'position', 'pretend', 'repository', 'maven', 'changing', 'default', 'behavior', 'longer', 'follow', 'http', 'nonssl', 'repository', 'references', 'default', 'details', 'available', 'referenced', 'urls', 'currently', 'using', 'repository', 'manager', 'govern', 'repositories', 'used', 'builds', 'unaffected', 'risks', 'present', 'legacy', 'behavior', 'unaffected', 'vulnerability', 'change', 'default', 'behavior', 'see', 'link', 'information', 'repository', 'management']"
335,335,33.3084,5.700977,1.9,"In JUnit4 from version 4.7 and before 4.13.1, the test rule TemporaryFolder contains a local information disclosure vulnerability. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. This vulnerability impacts you if the JUnit tests write sensitive information, like API keys or passwords, into the temporary folder, and the JUnit tests execute in an environment where the OS has other untrusted users. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. For Java 1.7 and higher users: this vulnerability is fixed in 4.13.1. For Java 1.6 and lower users: no patch is available, you must use the workaround below. If you are unable to patch, or are stuck running on Java 1.6, specifying the `java.io.tmpdir` system environment variable to a directory that is exclusively owned by the executing user will fix this vulnerability. For more information, including an example of vulnerable code, see the referenced GitHub Security Advisory.",7,junit version test rule temporaryfolder contains local information disclosure vulnerability unix like systems systems temporary directory shared users system files directories written directory default readable users system vulnerability allow users overwrite contents directories files purely information disclosure vulnerability vulnerability impacts junit tests write sensitive information like api keys passwords temporary folder junit tests execute environment os users certain jdk file system apis added jdk fix dependent upon version jdk using java higher users vulnerability fixed java lower users patch available must use workaround unable patch stuck running java specifying javaiotmpdir system environment variable directory exclusively owned executing user fix vulnerability information including example code see referenced github security advisory,"['junit', 'version', 'test', 'rule', 'temporaryfolder', 'contains', 'local', 'information', 'disclosure', 'vulnerability', 'unix', 'like', 'systems', 'systems', 'temporary', 'directory', 'shared', 'users', 'system', 'files', 'directories', 'written', 'directory', 'default', 'readable', 'users', 'system', 'vulnerability', 'allow', 'users', 'overwrite', 'contents', 'directories', 'files', 'purely', 'information', 'disclosure', 'vulnerability', 'vulnerability', 'impacts', 'junit', 'tests', 'write', 'sensitive', 'information', 'like', 'api', 'keys', 'passwords', 'temporary', 'folder', 'junit', 'tests', 'execute', 'environment', 'os', 'users', 'certain', 'jdk', 'file', 'system', 'apis', 'added', 'jdk', 'fix', 'dependent', 'upon', 'version', 'jdk', 'using', 'java', 'higher', 'users', 'vulnerability', 'fixed', 'java', 'lower', 'users', 'patch', 'available', 'must', 'use', 'workaround', 'unable', 'patch', 'stuck', 'running', 'java', 'specifying', 'javaiotmpdir', 'system', 'environment', 'variable', 'directory', 'exclusively', 'owned', 'executing', 'user', 'fix', 'vulnerability', 'information', 'including', 'example', 'code', 'see', 'referenced', 'github', 'security', 'advisory']"
336,336,-35.077816,-21.330597,7.5,"In Eclipse Jetty, versions 9.4.27.v20200227 to 9.4.29.v20200521, in case of too large response headers, Jetty throws an exception to produce an HTTP 431 error. When this happens, the ByteBuffer containing the HTTP response headers is released back to the ByteBufferPool twice. Because of this double release, two threads can acquire the same ByteBuffer from the pool and while thread1 is about to use the ByteBuffer to write response1 data, thread2 fills the ByteBuffer with other data. Thread1 then proceeds to write the buffer that now contains different data. This results in client1, which issued request1 seeing data from another request or response which could contain sensitive data belonging to client2 (HTTP session ids, authentication credentials, etc.). If the Jetty version cannot be upgraded, the vulnerability can be significantly reduced by configuring a responseHeaderSize significantly larger than the requestHeaderSize (12KB responseHeaderSize and 8KB requestHeaderSize).",47,eclipse jetty versions case large response headers jetty throws exception produce http error happens bytebuffer containing http response headers released back bytebufferpool twice double release two threads acquire bytebuffer pool thread use bytebuffer write response data thread fills bytebuffer data thread proceeds write buffer contains different data results client issued request seeing data another request response could contain sensitive data belonging client http session ids authentication credentials etc jetty version upgraded vulnerability significantly reduced configuring responseheadersize significantly larger requestheadersize kb responseheadersize kb requestheadersize,"['eclipse', 'jetty', 'versions', 'case', 'large', 'response', 'headers', 'jetty', 'throws', 'exception', 'produce', 'http', 'error', 'happens', 'bytebuffer', 'containing', 'http', 'response', 'headers', 'released', 'back', 'bytebufferpool', 'twice', 'double', 'release', 'two', 'threads', 'acquire', 'bytebuffer', 'pool', 'thread', 'use', 'bytebuffer', 'write', 'response', 'data', 'thread', 'fills', 'bytebuffer', 'data', 'thread', 'proceeds', 'write', 'buffer', 'contains', 'different', 'data', 'results', 'client', 'issued', 'request', 'seeing', 'data', 'another', 'request', 'response', 'could', 'contain', 'sensitive', 'data', 'belonging', 'client', 'http', 'session', 'ids', 'authentication', 'credentials', 'etc', 'jetty', 'version', 'upgraded', 'vulnerability', 'significantly', 'reduced', 'configuring', 'responseheadersize', 'significantly', 'larger', 'requestheadersize', 'kb', 'responseheadersize', 'kb', 'requestheadersize']"
337,337,-35.325382,20.432974,5.8,"In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.",46,eclipse jetty version rc alpha beta alpha beta gzip request body inflation enabled requests different clients multiplexed onto single connection attacker send request body received entirely consumed application subsequent request connection see body prepended body attacker see data may inject data body subsequent request,"['eclipse', 'jetty', 'version', 'rc', 'alpha', 'beta', 'alpha', 'beta', 'gzip', 'request', 'body', 'inflation', 'enabled', 'requests', 'different', 'clients', 'multiplexed', 'onto', 'single', 'connection', 'attacker', 'send', 'request', 'body', 'received', 'entirely', 'consumed', 'application', 'subsequent', 'request', 'connection', 'see', 'body', 'prepended', 'body', 'attacker', 'see', 'data', 'may', 'inject', 'data', 'body', 'subsequent', 'request']"
338,338,57.30572,-71.639534,3.6,"For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, if an exception is thrown from the SessionListener#sessionDestroyed() method, then the session ID is not invalidated in the session ID manager. On deployments with clustered sessions and multiple contexts this can result in a session not being invalidated. This can result in an application used on a shared computer being left logged in.",-1,eclipse jetty versions exception thrown sessionlistenersessiondestroyed method session id invalidated session id manager deployments clustered sessions multiple contexts result session invalidated result application used shared computer left logged,"['eclipse', 'jetty', 'versions', 'exception', 'thrown', 'sessionlistenersessiondestroyed', 'method', 'session', 'id', 'invalidated', 'session', 'id', 'manager', 'deployments', 'clustered', 'sessions', 'multiple', 'contexts', 'result', 'session', 'invalidated', 'result', 'application', 'used', 'shared', 'computer', 'left', 'logged']"
339,339,-38.77541,-11.747446,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
340,340,-31.913824,-40.810764,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
341,341,13.61652,69.08403,5.3,"Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `""` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=""b; JSESSIONID=1337; c=d""` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",38,jetty java based web server servlet engine nonstandard cookie parsing jetty may allow attacker smuggle cookies within cookies otherwise perform unintended behavior tampering cookie parsing mechanism jetty sees cookie value starts double quote continue read cookie string sees closing quote even semicolon encountered cookie header displaylanguageb jsessionid cd parsed one cookie name displaylanguage value jsessionid cd instead separate cookies security implications say jsessionid httponly cookie displaylanguage cookie value rendered page attacker smuggle jsessionid cookie displaylanguage cookie thereby exfiltrate significant intermediary enacting policy based cookies smuggled cookie bypass policy yet still seen jetty server logging system issue addressed versions beta users advised upgrade known workarounds issue,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'nonstandard', 'cookie', 'parsing', 'jetty', 'may', 'allow', 'attacker', 'smuggle', 'cookies', 'within', 'cookies', 'otherwise', 'perform', 'unintended', 'behavior', 'tampering', 'cookie', 'parsing', 'mechanism', 'jetty', 'sees', 'cookie', 'value', 'starts', 'double', 'quote', 'continue', 'read', 'cookie', 'string', 'sees', 'closing', 'quote', 'even', 'semicolon', 'encountered', 'cookie', 'header', 'displaylanguageb', 'jsessionid', 'cd', 'parsed', 'one', 'cookie', 'name', 'displaylanguage', 'value', 'jsessionid', 'cd', 'instead', 'separate', 'cookies', 'security', 'implications', 'say', 'jsessionid', 'httponly', 'cookie', 'displaylanguage', 'cookie', 'value', 'rendered', 'page', 'attacker', 'smuggle', 'jsessionid', 'cookie', 'displaylanguage', 'cookie', 'thereby', 'exfiltrate', 'significant', 'intermediary', 'enacting', 'policy', 'based', 'cookies', 'smuggled', 'cookie', 'bypass', 'policy', 'yet', 'still', 'seen', 'jetty', 'server', 'logging', 'system', 'issue', 'addressed', 'versions', 'beta', 'users', 'advised', 'upgrade', 'known', 'workarounds', 'issue']"
342,342,-33.347694,-42.58301,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
343,343,-22.240904,50.855103,7.8,"In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",41,eclipse jetty alpha alpha cpu usage reach upon receiving large invalid tls frame,"['eclipse', 'jetty', 'alpha', 'alpha', 'cpu', 'usage', 'reach', 'upon', 'receiving', 'large', 'invalid', 'tls', 'frame']"
344,344,-24.213873,45.216225,4.3,"In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of “quality” (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values.",70,eclipse jetty inclusive jetty handles request containing multiple accept headers large number quality ie parameters server may enter denial service dos state due high cpu usage processing quality values resulting minutes cpu time exhausted processing quality values,"['eclipse', 'jetty', 'inclusive', 'jetty', 'handles', 'request', 'containing', 'multiple', 'accept', 'headers', 'large', 'number', 'quality', 'ie', 'parameters', 'server', 'may', 'enter', 'denial', 'service', 'dos', 'state', 'due', 'high', 'cpu', 'usage', 'processing', 'quality', 'values', 'resulting', 'minutes', 'cpu', 'time', 'exhausted', 'processing', 'quality', 'values']"
345,345,-40.351925,-10.82838,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
346,346,-31.139322,-43.516376,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
347,347,21.50429,45.996845,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
348,348,-19.374706,27.085226,6.5,"In Eclipse Jetty versions 9.4.0 through 9.4.8, when using the optional Jetty provided FileSessionDataStore for persistent storage of HttpSession details, it is possible for a malicious user to access/hijack other HttpSessions and even delete unmatched HttpSessions present in the FileSystem's storage for the FileSessionDataStore.",45,eclipse jetty versions using optional jetty provided filesessiondatastore persistent storage httpsession details possible malicious user accesshijack httpsessions even delete unmatched httpsessions present filesystems storage filesessiondatastore,"['eclipse', 'jetty', 'versions', 'using', 'optional', 'jetty', 'provided', 'filesessiondatastore', 'persistent', 'storage', 'httpsession', 'details', 'possible', 'malicious', 'user', 'accesshijack', 'httpsessions', 'even', 'delete', 'unmatched', 'httpsessions', 'present', 'filesystems', 'storage', 'filesessiondatastore']"
349,349,-14.388401,24.276827,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
350,350,52.284405,41.60297,5.0,"In Eclipse Jetty version 7.x, 8.x, 9.2.27 and older, 9.3.26 and older, and 9.4.16 and older, the server running on any OS and Jetty version combination will reveal the configured fully qualified directory base resource location on the output of the 404 error for not finding a Context that matches the requested path. The default server behavior on jetty-distribution and jetty-home will include at the end of the Handler tree a DefaultHandler, which is responsible for reporting this 404 error, it presents the various configured contexts as HTML for users to click through to. This produced HTML includes output that contains the configured fully qualified directory base resource location for each context.",35,eclipse jetty version older older older server running os jetty version combination reveal configured fully qualified directory base resource location output error finding context matches requested path default server behavior jettydistribution jettyhome include end handler tree defaulthandler responsible reporting error presents various configured contexts html users click produced html includes output contains configured fully qualified directory base resource location context,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'running', 'os', 'jetty', 'version', 'combination', 'reveal', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'output', 'error', 'finding', 'context', 'matches', 'requested', 'path', 'default', 'server', 'behavior', 'jettydistribution', 'jettyhome', 'include', 'end', 'handler', 'tree', 'defaulthandler', 'responsible', 'reporting', 'error', 'presents', 'various', 'configured', 'contexts', 'html', 'users', 'click', 'produced', 'html', 'includes', 'output', 'contains', 'configured', 'fully', 'qualified', 'directory', 'base', 'resource', 'location', 'context']"
351,351,-35.325233,20.432978,5.8,"In Eclipse Jetty version 9.4.0.RC0 to 9.4.34.v20201102, 10.0.0.alpha0 to 10.0.0.beta2, and 11.0.0.alpha0 to 11.0.0.beta2, if GZIP request body inflation is enabled and requests from different clients are multiplexed onto a single connection, and if an attacker can send a request with a body that is received entirely but not consumed by the application, then a subsequent request on the same connection will see that body prepended to its body. The attacker will not see any data but may inject data into the body of the subsequent request.",46,eclipse jetty version rc alpha beta alpha beta gzip request body inflation enabled requests different clients multiplexed onto single connection attacker send request body received entirely consumed application subsequent request connection see body prepended body attacker see data may inject data body subsequent request,"['eclipse', 'jetty', 'version', 'rc', 'alpha', 'beta', 'alpha', 'beta', 'gzip', 'request', 'body', 'inflation', 'enabled', 'requests', 'different', 'clients', 'multiplexed', 'onto', 'single', 'connection', 'attacker', 'send', 'request', 'body', 'received', 'entirely', 'consumed', 'application', 'subsequent', 'request', 'connection', 'see', 'body', 'prepended', 'body', 'attacker', 'see', 'data', 'may', 'inject', 'data', 'body', 'subsequent', 'request']"
352,352,-37.023243,-11.943461,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
353,353,-30.913143,-44.68709,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
354,354,14.228132,69.193115,5.3,"Jetty is a java based web server and servlet engine. Nonstandard cookie parsing in Jetty may allow an attacker to smuggle cookies within other cookies, or otherwise perform unintended behavior by tampering with the cookie parsing mechanism. If Jetty sees a cookie VALUE that starts with `""` (double quote), it will continue to read the cookie string until it sees a closing quote -- even if a semicolon is encountered. So, a cookie header such as: `DISPLAY_LANGUAGE=""b; JSESSIONID=1337; c=d""` will be parsed as one cookie, with the name DISPLAY_LANGUAGE and a value of b; JSESSIONID=1337; c=d instead of 3 separate cookies. This has security implications because if, say, JSESSIONID is an HttpOnly cookie, and the DISPLAY_LANGUAGE cookie value is rendered on the page, an attacker can smuggle the JSESSIONID cookie into the DISPLAY_LANGUAGE cookie and thereby exfiltrate it. This is significant when an intermediary is enacting some policy based on cookies, so a smuggled cookie can bypass that policy yet still be seen by the Jetty server or its logging system. This issue has been addressed in versions 9.4.51, 10.0.14, 11.0.14, and 12.0.0.beta0 and users are advised to upgrade. There are no known workarounds for this issue.",38,jetty java based web server servlet engine nonstandard cookie parsing jetty may allow attacker smuggle cookies within cookies otherwise perform unintended behavior tampering cookie parsing mechanism jetty sees cookie value starts double quote continue read cookie string sees closing quote even semicolon encountered cookie header displaylanguageb jsessionid cd parsed one cookie name displaylanguage value jsessionid cd instead separate cookies security implications say jsessionid httponly cookie displaylanguage cookie value rendered page attacker smuggle jsessionid cookie displaylanguage cookie thereby exfiltrate significant intermediary enacting policy based cookies smuggled cookie bypass policy yet still seen jetty server logging system issue addressed versions beta users advised upgrade known workarounds issue,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'nonstandard', 'cookie', 'parsing', 'jetty', 'may', 'allow', 'attacker', 'smuggle', 'cookies', 'within', 'cookies', 'otherwise', 'perform', 'unintended', 'behavior', 'tampering', 'cookie', 'parsing', 'mechanism', 'jetty', 'sees', 'cookie', 'value', 'starts', 'double', 'quote', 'continue', 'read', 'cookie', 'string', 'sees', 'closing', 'quote', 'even', 'semicolon', 'encountered', 'cookie', 'header', 'displaylanguageb', 'jsessionid', 'cd', 'parsed', 'one', 'cookie', 'name', 'displaylanguage', 'value', 'jsessionid', 'cd', 'instead', 'separate', 'cookies', 'security', 'implications', 'say', 'jsessionid', 'httponly', 'cookie', 'displaylanguage', 'cookie', 'value', 'rendered', 'page', 'attacker', 'smuggle', 'jsessionid', 'cookie', 'displaylanguage', 'cookie', 'thereby', 'exfiltrate', 'significant', 'intermediary', 'enacting', 'policy', 'based', 'cookies', 'smuggled', 'cookie', 'bypass', 'policy', 'yet', 'still', 'seen', 'jetty', 'server', 'logging', 'system', 'issue', 'addressed', 'versions', 'beta', 'users', 'advised', 'upgrade', 'known', 'workarounds', 'issue']"
355,355,-35.537117,-20.09141,7.5,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.",47,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled http handled poorly http style request line ie method space uri space version declares version http accepted treated request deployed behind intermediary also accepted passed version act response sent could interpreted intermediary http headers could used poison cache server allowed origin client generate arbitrary content response,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'http', 'handled', 'poorly', 'http', 'style', 'request', 'line', 'ie', 'method', 'space', 'uri', 'space', 'version', 'declares', 'version', 'http', 'accepted', 'treated', 'request', 'deployed', 'behind', 'intermediary', 'also', 'accepted', 'passed', 'version', 'act', 'response', 'sent', 'could', 'interpreted', 'intermediary', 'http', 'headers', 'could', 'used', 'poison', 'cache', 'server', 'allowed', 'origin', 'client', 'generate', 'arbitrary', 'content', 'response']"
356,356,-35.45141,27.726046,9.8,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",39,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled transferencoding chunks handled poorly chunk length parsing integer overflow thus large chunk size could interpreted smaller chunk size content sent chunk body could interpreted pipelined request jetty deployed behind intermediary imposed authorization intermediary allowed arbitrarily large chunks passed unchanged could used bypass authorization imposed intermediary fake pipelined request would interpreted intermediary request,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'transferencoding', 'chunks', 'handled', 'poorly', 'chunk', 'length', 'parsing', 'integer', 'overflow', 'thus', 'large', 'chunk', 'size', 'could', 'interpreted', 'smaller', 'chunk', 'size', 'content', 'sent', 'chunk', 'body', 'could', 'interpreted', 'pipelined', 'request', 'jetty', 'deployed', 'behind', 'intermediary', 'imposed', 'authorization', 'intermediary', 'allowed', 'arbitrarily', 'large', 'chunks', 'passed', 'unchanged', 'could', 'used', 'bypass', 'authorization', 'imposed', 'intermediary', 'fake', 'pipelined', 'request', 'would', 'interpreted', 'intermediary', 'request']"
357,357,-32.237877,9.531476,9.8,"In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization. Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2017-7658 for details",40,eclipse jetty server versions older non httpx configurations httpx configurations presented two contentlengths headers jetty ignored second presented contentlength chunked encoding header contentlength ignored per rfc intermediary decided shorter length still passed longer body body content could interpreted jetty pipelined request intermediary imposing authorization fake pipelined request would bypass authorization sonatypes research suggests cves details differ defined nvd see details,"['eclipse', 'jetty', 'server', 'versions', 'older', 'non', 'httpx', 'configurations', 'httpx', 'configurations', 'presented', 'two', 'contentlengths', 'headers', 'jetty', 'ignored', 'second', 'presented', 'contentlength', 'chunked', 'encoding', 'header', 'contentlength', 'ignored', 'per', 'rfc', 'intermediary', 'decided', 'shorter', 'length', 'still', 'passed', 'longer', 'body', 'body', 'content', 'could', 'interpreted', 'jetty', 'pipelined', 'request', 'intermediary', 'imposing', 'authorization', 'fake', 'pipelined', 'request', 'would', 'bypass', 'authorization', 'sonatypes', 'research', 'suggests', 'cves', 'details', 'differ', 'defined', 'nvd', 'see', 'details']"
358,358,-24.214245,45.21595,4.3,"In Eclipse Jetty 9.4.6.v20170531 to 9.4.36.v20210114 (inclusive), 10.0.0, and 11.0.0 when Jetty handles a request containing multiple Accept headers with a large number of “quality” (i.e. q) parameters, the server may enter a denial of service (DoS) state due to high CPU usage processing those quality values, resulting in minutes of CPU time exhausted processing those quality values.",70,eclipse jetty inclusive jetty handles request containing multiple accept headers large number quality ie parameters server may enter denial service dos state due high cpu usage processing quality values resulting minutes cpu time exhausted processing quality values,"['eclipse', 'jetty', 'inclusive', 'jetty', 'handles', 'request', 'containing', 'multiple', 'accept', 'headers', 'large', 'number', 'quality', 'ie', 'parameters', 'server', 'may', 'enter', 'denial', 'service', 'dos', 'state', 'due', 'high', 'cpu', 'usage', 'processing', 'quality', 'values', 'resulting', 'minutes', 'cpu', 'time', 'exhausted', 'processing', 'quality', 'values']"
359,359,-38.754196,-13.12423,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
360,360,-23.556293,51.645725,7.8,"In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",41,eclipse jetty alpha alpha cpu usage reach upon receiving large invalid tls frame,"['eclipse', 'jetty', 'alpha', 'alpha', 'cpu', 'usage', 'reach', 'upon', 'receiving', 'large', 'invalid', 'tls', 'frame']"
361,361,20.877329,-91.63178,5.0,"For Eclipse Jetty versions <= 9.4.40, <= 10.0.2, <= 11.0.2, it is possible for requests to the ConcatServlet with a doubly encoded path to access protected resources within the WEB-INF directory. For example a request to `/concat?/%2557EB-INF/web.xml` can retrieve the web.xml file. This can reveal sensitive information regarding the implementation of a web application.",-1,eclipse jetty versions possible requests concatservlet doubly encoded path access protected resources within webinf directory example request concatebinfwebxml retrieve webxml file reveal sensitive information regarding implementation web application,"['eclipse', 'jetty', 'versions', 'possible', 'requests', 'concatservlet', 'doubly', 'encoded', 'path', 'access', 'protected', 'resources', 'within', 'webinf', 'directory', 'example', 'request', 'concatebinfwebxml', 'retrieve', 'webxml', 'file', 'reveal', 'sensitive', 'information', 'regarding', 'implementation', 'web', 'application']"
362,362,-39.76163,-11.813277,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
363,363,23.360456,45.312496,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
364,364,-13.436183,24.057095,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
365,365,41.85301,29.141665,5.0,"In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",43,eclipse jetty version server running windows exposure fully qualified base resource directory name windows remote client configured showing listing directory contents information reveal restricted content configured base resource directories,"['eclipse', 'jetty', 'version', 'server', 'running', 'windows', 'exposure', 'fully', 'qualified', 'base', 'resource', 'directory', 'name', 'windows', 'remote', 'client', 'configured', 'showing', 'listing', 'directory', 'contents', 'information', 'reveal', 'restricted', 'content', 'configured', 'base', 'resource', 'directories']"
366,366,-30.472935,-42.76251,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
367,367,34.161427,16.507126,4.6,** UNSUPPORTED WHEN ASSIGNED ** spring-boot versions prior to version v2.2.11.RELEASE was vulnerable to temporary directory hijacking. This vulnerability impacted the org.springframework.boot.web.server.AbstractConfigurableWebServerFactory.createTempDir method. NOTE: This vulnerability only affects products and/or versions that are no longer supported by the maintainer.,61,unsupported assigned springboot versions prior version vrelease temporary directory hijacking vulnerability impacted orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir method note vulnerability affects products andor versions longer supported maintainer,"['unsupported', 'assigned', 'springboot', 'versions', 'prior', 'version', 'vrelease', 'temporary', 'directory', 'hijacking', 'vulnerability', 'impacted', 'orgspringframeworkbootwebserverabstractconfigurablewebserverfactorycreatetempdir', 'method', 'note', 'vulnerability', 'affects', 'products', 'andor', 'versions', 'longer', 'supported', 'maintainer']"
368,368,-19.589424,-23.125425,7.5,"In Spring Boot versions 3.0.0 - 3.0.6, 2.7.0 - 2.7.11, 2.6.0 - 2.6.14, 2.5.0 - 2.5.14 and older unsupported versions, there is potential for a denial-of-service (DoS) attack if Spring MVC is used together with a reverse proxy cache.",62,spring boot versions older unsupported versions potential denialofservice dos attack spring mvc used together reverse proxy cache,"['spring', 'boot', 'versions', 'older', 'unsupported', 'versions', 'potential', 'denialofservice', 'dos', 'attack', 'spring', 'mvc', 'used', 'together', 'reverse', 'proxy', 'cache']"
369,369,1.4780446,-22.852255,6.8,"In the thymeleaf-spring5:3.0.12 component, thymeleaf combined with specific scenarios in template injection may lead to remote code execution.",52,thymeleafspring component thymeleaf combined specific scenarios template injection may lead remote code execution,"['thymeleafspring', 'component', 'thymeleaf', 'combined', 'specific', 'scenarios', 'template', 'injection', 'may', 'lead', 'remote', 'code', 'execution']"
370,370,4.625346,-14.6715765,5.0,"Apache Struts 2.0.0 through 2.3.24.1 does not properly cache method references when used with OGNL before 3.0.12, which allows remote attackers to cause a denial of service (block access to a web site) via unspecified vectors.",71,apache struts properly cache method references used ognl allows remote attackers cause denial service block access web site via unspecified vectors,"['apache', 'struts', 'properly', 'cache', 'method', 'references', 'used', 'ognl', 'allows', 'remote', 'attackers', 'cause', 'denial', 'service', 'block', 'access', 'web', 'site', 'via', 'unspecified', 'vectors']"
371,371,33.52626,8.702772,2.1,"Apache Groovy provides extension methods to aid with creating temporary directories. Prior to this fix, Groovy's implementation of those extension methods was using a now superseded Java JDK method call that is potentially not secure on some operating systems in some contexts. Users not using the extension methods mentioned in the advisory are not affected, but may wish to read the advisory for further details. Versions Affected: 2.0 to 2.4.20, 2.5.0 to 2.5.13, 3.0.0 to 3.0.6, and 4.0.0-alpha-1. Fixed in versions 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2.",7,apache groovy provides extension methods aid creating temporary directories prior fix groovys implementation extension methods using superseded java jdk method call potentially secure operating systems contexts users using extension methods mentioned advisory affected may wish read advisory details versions affected alpha fixed versions alpha,"['apache', 'groovy', 'provides', 'extension', 'methods', 'aid', 'creating', 'temporary', 'directories', 'prior', 'fix', 'groovys', 'implementation', 'extension', 'methods', 'using', 'superseded', 'java', 'jdk', 'method', 'call', 'potentially', 'secure', 'operating', 'systems', 'contexts', 'users', 'using', 'extension', 'methods', 'mentioned', 'advisory', 'affected', 'may', 'wish', 'read', 'advisory', 'details', 'versions', 'affected', 'alpha', 'fixed', 'versions', 'alpha']"
372,372,14.937578,-14.379188,9.3,"When running on Windows with enableCmdLineArguments enabled, the CGI Servlet in Apache Tomcat 9.0.0.M1 to 9.0.17, 8.5.0 to 8.5.39 and 7.0.0 to 7.0.93 is vulnerable to Remote Code Execution due to a bug in the way the JRE passes command line arguments to Windows. The CGI Servlet is disabled by default. The CGI option enableCmdLineArguments is disable by default in Tomcat 9.0.x (and will be disabled by default in all versions in response to this vulnerability). For a detailed explanation of the JRE behaviour, see Markus Wulftange's blog (https://codewhitesec.blogspot.com/2016/02/java-and-command-line-injections-in-windows.html) and this archived MSDN blog (https://web.archive.org/web/20161228144344/https://blogs.msdn.microsoft.com/twistylittlepassagesallalike/2011/04/23/everyone-quotes-command-line-arguments-the-wrong-way/).",29,running windows enablecmdlinearguments enabled cgi servlet apache tomcat remote code execution due bug way jre passes command line arguments windows cgi servlet disabled default cgi option enablecmdlinearguments disable default tomcat disabled default versions response vulnerability detailed explanation jre behaviour see markus wulftanges blog archived msdn blog,"['running', 'windows', 'enablecmdlinearguments', 'enabled', 'cgi', 'servlet', 'apache', 'tomcat', 'remote', 'code', 'execution', 'due', 'bug', 'way', 'jre', 'passes', 'command', 'line', 'arguments', 'windows', 'cgi', 'servlet', 'disabled', 'default', 'cgi', 'option', 'enablecmdlinearguments', 'disable', 'default', 'tomcat', 'disabled', 'default', 'versions', 'response', 'vulnerability', 'detailed', 'explanation', 'jre', 'behaviour', 'see', 'markus', 'wulftanges', 'blog', 'archived', 'msdn', 'blog']"
373,373,19.949327,-39.63647,7.5,"If a web application sends a WebSocket message concurrently with the WebSocket connection closing when running on Apache Tomcat 8.5.0 to 8.5.75 or Apache Tomcat 9.0.0.M1 to 9.0.20, it is possible that the application will continue to use the socket after it has been closed. The error handling triggered in this case could cause the a pooled object to be placed in the pool twice. This could result in subsequent connections using the same object concurrently which could result in data being returned to the wrong use and/or other errors.",24,web application sends websocket message concurrently websocket connection closing running apache tomcat apache tomcat possible application continue use socket closed error handling triggered case could cause pooled object placed pool twice could result subsequent connections using object concurrently could result data returned wrong use andor errors,"['web', 'application', 'sends', 'websocket', 'message', 'concurrently', 'websocket', 'connection', 'closing', 'running', 'apache', 'tomcat', 'apache', 'tomcat', 'possible', 'application', 'continue', 'use', 'socket', 'closed', 'error', 'handling', 'triggered', 'case', 'could', 'cause', 'pooled', 'object', 'placed', 'pool', 'twice', 'could', 'result', 'subsequent', 'connections', 'using', 'object', 'concurrently', 'could', 'result', 'data', 'returned', 'wrong', 'use', 'andor', 'errors']"
374,374,-2.829078,-10.487474,7.5,"Pivotal Spring Framework through 5.3.16 suffers from a potential remote code execution (RCE) issue if used for Java deserialization of untrusted data. Depending on how the library is implemented within a product, this issue may or not occur, and authentication may be required. NOTE: the vendor's position is that untrusted data is not an intended use case. The product's behavior will not be changed because some users rely on deserialization of trusted data.",58,pivotal spring framework suffers potential remote code execution rce issue used java deserialization data depending library implemented within product issue may occur authentication may required note vendors position data intended use case products behavior changed users rely deserialization trusted data,"['pivotal', 'spring', 'framework', 'suffers', 'potential', 'remote', 'code', 'execution', 'rce', 'issue', 'used', 'java', 'deserialization', 'data', 'depending', 'library', 'implemented', 'within', 'product', 'issue', 'may', 'occur', 'authentication', 'may', 'required', 'note', 'vendors', 'position', 'data', 'intended', 'use', 'case', 'products', 'behavior', 'changed', 'users', 'rely', 'deserialization', 'trusted', 'data']"
375,375,-9.562068,-20.910456,3.6,"In Spring Framework versions 5.2.0 - 5.2.8, 5.1.0 - 5.1.17, 5.0.0 - 5.0.18, 4.3.0 - 4.3.28, and older unsupported versions, the protections against RFD attacks from CVE-2015-5211 may be bypassed depending on the browser used through the use of a jsessionid path parameter.",21,spring framework versions older unsupported versions protections rfd attacks cve may bypassed depending browser used use jsessionid path parameter,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'protections', 'rfd', 'attacks', 'cve', 'may', 'bypassed', 'depending', 'browser', 'used', 'use', 'jsessionid', 'path', 'parameter']"
376,376,3.7718182,-22.988323,7.5,"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",52,spring mvc spring webflux application running jdk may remote code execution rce via data binding specific exploit requires application run tomcat war deployment application deployed spring boot executable jar ie default exploit however nature vulnerability general may ways exploit,"['spring', 'mvc', 'spring', 'webflux', 'application', 'running', 'jdk', 'may', 'remote', 'code', 'execution', 'rce', 'via', 'data', 'binding', 'specific', 'exploit', 'requires', 'application', 'run', 'tomcat', 'war', 'deployment', 'application', 'deployed', 'spring', 'boot', 'executable', 'jar', 'ie', 'default', 'exploit', 'however', 'nature', 'vulnerability', 'general', 'may', 'ways', 'exploit']"
377,377,-42.111237,44.477386,5.0,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",53,spring framework versions older unsupported versions patterns disallowedfields databinder case sensitive means field effectively protected unless listed upper lower case first character field including upper lower case first character nested fields within property path,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'patterns', 'disallowedfields', 'databinder', 'case', 'sensitive', 'means', 'field', 'effectively', 'protected', 'unless', 'listed', 'upper', 'lower', 'case', 'first', 'character', 'field', 'including', 'upper', 'lower', 'case', 'first', 'character', 'nested', 'fields', 'within', 'property', 'path']"
378,378,-14.820806,-17.405283,2.6,"Spring Framework, versions 5.2.x prior to 5.2.3 are vulnerable to CSRF attacks through CORS preflight requests that target Spring MVC (spring-webmvc module) or Spring WebFlux (spring-webflux module) endpoints. Only non-authenticated endpoints are vulnerable because preflight requests should not include credentials and therefore requests should fail authentication. However a notable exception to this are Chrome based browsers when using client certificates for authentication since Chrome sends TLS client certificates in CORS preflight requests in violation of spec requirements. No HTTP body can be sent or received as a result of this attack.",63,spring framework versions prior csrf attacks cors preflight requests target spring mvc springwebmvc module spring webflux springwebflux module endpoints nonauthenticated endpoints preflight requests include credentials therefore requests fail authentication however notable exception chrome based browsers using client certificates authentication since chrome sends tls client certificates cors preflight requests violation spec requirements http body sent received result attack,"['spring', 'framework', 'versions', 'prior', 'csrf', 'attacks', 'cors', 'preflight', 'requests', 'target', 'spring', 'mvc', 'springwebmvc', 'module', 'spring', 'webflux', 'springwebflux', 'module', 'endpoints', 'nonauthenticated', 'endpoints', 'preflight', 'requests', 'include', 'credentials', 'therefore', 'requests', 'fail', 'authentication', 'however', 'notable', 'exception', 'chrome', 'based', 'browsers', 'using', 'client', 'certificates', 'authentication', 'since', 'chrome', 'sends', 'tls', 'client', 'certificates', 'cors', 'preflight', 'requests', 'violation', 'spec', 'requirements', 'http', 'body', 'sent', 'received', 'result', 'attack']"
379,379,-11.933197,-31.264626,4.0,"In Spring Framework versions 5.3.0 - 5.3.13, 5.2.0 - 5.2.18, and older unsupported versions, it is possible for a user to provide malicious input to cause the insertion of additional log entries. This is a follow-up to CVE-2021-22096 that protects against additional types of input and in more places of the Spring Framework codebase.",64,spring framework versions older unsupported versions possible user provide malicious input cause insertion additional log entries followup cve protects additional types input places spring framework codebase,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'malicious', 'input', 'cause', 'insertion', 'additional', 'log', 'entries', 'followup', 'cve', 'protects', 'additional', 'types', 'input', 'places', 'spring', 'framework', 'codebase']"
380,380,-10.1453,77.21159,4.0,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",55,spring framework versions older unsupported versions possible user provide specially crafted spel expression may cause denial service condition,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denial', 'service', 'condition']"
381,381,-58.224228,-26.716059,6.5,"In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",56,spring framework versions release release older unsupported versions possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'release', 'release', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
382,382,-3.3432858,55.3773,6.5,"In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",57,spring framework versions prior release possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'prior', 'release', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
383,383,32.493675,-2.9026074,6.5,"A flaw was found in Keycloak before version 11.0.0, where the code base contains usages of ObjectInputStream without type checks. This flaw allows an attacker to inject arbitrarily serialized Java Objects, which would then get deserialized in a privileged context and potentially lead to remote code execution.",1,version code base contains usages objectinputstream without type checks allows attacker inject arbitrarily serialized java objects would get deserialized privileged context potentially lead remote code execution,"['version', 'code', 'base', 'contains', 'usages', 'objectinputstream', 'without', 'type', 'checks', 'allows', 'attacker', 'inject', 'arbitrarily', 'serialized', 'java', 'objects', 'would', 'get', 'deserialized', 'privileged', 'context', 'potentially', 'lead', 'remote', 'code', 'execution']"
384,384,6.0190735,2.082388,10.0,"The org.h2.util.JdbcUtils.getConnection method of the H2 database takes as parameters the class name of the driver and URL of the database. An attacker may pass a JNDI driver name and a URL leading to a LDAP or RMI servers, causing remote code execution. This can be exploited through various attack vectors, most notably through the H2 Console which leads to unauthenticated remote code execution.",72,orghutiljdbcutilsgetconnection method database takes parameters class name driver url database attacker may pass jndi driver name url leading ldap rmi servers causing remote code execution exploited various attack vectors notably console leads unauthenticated remote code execution,"['orghutiljdbcutilsgetconnection', 'method', 'database', 'takes', 'parameters', 'class', 'name', 'driver', 'url', 'database', 'attacker', 'may', 'pass', 'jndi', 'driver', 'name', 'url', 'leading', 'ldap', 'rmi', 'servers', 'causing', 'remote', 'code', 'execution', 'exploited', 'various', 'attack', 'vectors', 'notably', 'console', 'leads', 'unauthenticated', 'remote', 'code', 'execution']"
385,385,5.9904275,2.0638256,10.0,"H2 Console before 2.1.210 allows remote attackers to execute arbitrary code via a jdbc:h2:mem JDBC URL containing the IGNORE_UNKNOWN_SETTINGS=TRUE;FORBID_CREATION=FALSE;INIT=RUNSCRIPT substring, a different vulnerability than CVE-2021-42392.",72,console allows remote attackers execute arbitrary code via jdbchmem jdbc url containing ignoreunknownsettingstrueforbidcreationfalseinitrunscript substring different vulnerability cve,"['console', 'allows', 'remote', 'attackers', 'execute', 'arbitrary', 'code', 'via', 'jdbchmem', 'jdbc', 'url', 'containing', 'ignoreunknownsettingstrueforbidcreationfalseinitrunscript', 'substring', 'different', 'vulnerability', 'cve']"
386,386,4.914448,1.6397451,4.0,An issue was discovered in H2 1.4.197. Insecure handling of permissions in the backup function allows attackers to read sensitive files (outside of their permissions) via a symlink to a fake database file.,72,issue discovered insecure handling permissions backup function allows attackers read sensitive files outside permissions via symlink fake database file,"['issue', 'discovered', 'insecure', 'handling', 'permissions', 'backup', 'function', 'allows', 'attackers', 'read', 'sensitive', 'files', 'outside', 'permissions', 'via', 'symlink', 'fake', 'database', 'file']"
387,387,-0.7194938,-54.486244,5.5,A flaw was found in wildfly. The EJBContext principle is not popped back after invoking another EJB using a different Security Domain. The highest threat from this vulnerability is to data confidentiality and integrity. Versions before wildfly 20.0.0.Final are affected.,25,wildfly ejbcontext principle popped back invoking another ejb using different security domain highest threat vulnerability data confidentiality integrity versions wildfly final affected,"['wildfly', 'ejbcontext', 'principle', 'popped', 'back', 'invoking', 'another', 'ejb', 'using', 'different', 'security', 'domain', 'highest', 'threat', 'vulnerability', 'data', 'confidentiality', 'integrity', 'versions', 'wildfly', 'final', 'affected']"
388,388,-0.50476235,-51.27153,5.0,"A flaw was found in JBoss-client. The vulnerability occurs due to a memory leak on the JBoss client-side, when using UserTransaction repeatedly and leads to information leakage vulnerability.",26,jbossclient vulnerability occurs due memory leak jboss clientside using usertransaction repeatedly leads information leakage vulnerability,"['jbossclient', 'vulnerability', 'occurs', 'due', 'memory', 'leak', 'jboss', 'clientside', 'using', 'usertransaction', 'repeatedly', 'leads', 'information', 'leakage', 'vulnerability']"
389,389,3.7208855,-44.4984,7.5,A flaw was found in Undertow. A buffer leak on the incoming WebSocket PONG message may lead to memory exhaustion. This flaw allows an attacker to cause a denial of service. The highest threat from this vulnerability is availability.,27,undertow buffer leak incoming websocket pong message may lead memory exhaustion allows attacker cause denial service highest threat vulnerability availability,"['undertow', 'buffer', 'leak', 'incoming', 'websocket', 'pong', 'message', 'may', 'lead', 'memory', 'exhaustion', 'allows', 'attacker', 'cause', 'denial', 'service', 'highest', 'threat', 'vulnerability', 'availability']"
390,390,8.595408,-3.9663286,5.1,"Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.19 and prior and 5.1.48 and prior. Difficult to exploit vulnerability allows unauthenticated attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks require human interaction from a person other than the attacker. Successful attacks of this vulnerability can result in unauthorized update, insert or delete access to some of MySQL Connectors accessible data as well as unauthorized read access to a subset of MySQL Connectors accessible data and unauthorized ability to cause a partial denial of service (partial DOS) of MySQL Connectors. CVSS 3.0 Base Score 5.0 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.0/AV:N/AC:H/PR:N/UI:R/S:U/C:L/I:L/A:L).",73,vulnerability mysql connectors product oracle mysql component connectorj supported versions affected prior prior difficult exploit vulnerability allows unauthenticated attacker network access via multiple protocols compromise mysql connectors successful attacks require human interaction person attacker successful attacks vulnerability result unauthorized update insert delete access mysql connectors accessible data well unauthorized read access subset mysql connectors accessible data unauthorized ability cause partial denial service partial dos mysql connectors cvss base score confidentiality integrity availability impacts cvss vector cvssavnachprnuirsyouclilal,"['vulnerability', 'mysql', 'connectors', 'product', 'oracle', 'mysql', 'component', 'connectorj', 'supported', 'versions', 'affected', 'prior', 'prior', 'difficult', 'exploit', 'vulnerability', 'allows', 'unauthenticated', 'attacker', 'network', 'access', 'via', 'multiple', 'protocols', 'compromise', 'mysql', 'connectors', 'successful', 'attacks', 'require', 'human', 'interaction', 'person', 'attacker', 'successful', 'attacks', 'vulnerability', 'result', 'unauthorized', 'update', 'insert', 'delete', 'access', 'mysql', 'connectors', 'accessible', 'data', 'well', 'unauthorized', 'read', 'access', 'subset', 'mysql', 'connectors', 'accessible', 'data', 'unauthorized', 'ability', 'cause', 'partial', 'denial', 'service', 'partial', 'dos', 'mysql', 'connectors', 'cvss', 'base', 'score', 'confidentiality', 'integrity', 'availability', 'impacts', 'cvss', 'vector', 'cvssavnachprnuirsyouclilal']"
391,391,8.516496,-4.1212163,7.9,Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.26 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in unauthorized access to critical data or complete access to all MySQL Connectors accessible data and unauthorized ability to cause a hang or frequently repeatable crash (complete DOS) of MySQL Connectors. CVSS 3.1 Base Score 5.9 (Confidentiality and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:N/A:H).,73,vulnerability mysql connectors product oracle mysql component connectorj supported versions affected prior difficult exploit vulnerability allows high privileged attacker network access via multiple protocols compromise mysql connectors successful attacks vulnerability result unauthorized access critical data complete access mysql connectors accessible data unauthorized ability cause hang frequently repeatable crash complete dos mysql connectors cvss base score confidentiality availability impacts cvss vector cvssavnachprhuinsyouchinah,"['vulnerability', 'mysql', 'connectors', 'product', 'oracle', 'mysql', 'component', 'connectorj', 'supported', 'versions', 'affected', 'prior', 'difficult', 'exploit', 'vulnerability', 'allows', 'high', 'privileged', 'attacker', 'network', 'access', 'via', 'multiple', 'protocols', 'compromise', 'mysql', 'connectors', 'successful', 'attacks', 'vulnerability', 'result', 'unauthorized', 'access', 'critical', 'data', 'complete', 'access', 'mysql', 'connectors', 'accessible', 'data', 'unauthorized', 'ability', 'cause', 'hang', 'frequently', 'repeatable', 'crash', 'complete', 'dos', 'mysql', 'connectors', 'cvss', 'base', 'score', 'confidentiality', 'availability', 'impacts', 'cvss', 'vector', 'cvssavnachprhuinsyouchinah']"
392,392,8.459775,-4.1005073,6.0,"Vulnerability in the MySQL Connectors product of Oracle MySQL (component: Connector/J). Supported versions that are affected are 8.0.27 and prior. Difficult to exploit vulnerability allows high privileged attacker with network access via multiple protocols to compromise MySQL Connectors. Successful attacks of this vulnerability can result in takeover of MySQL Connectors. CVSS 3.1 Base Score 6.6 (Confidentiality, Integrity and Availability impacts). CVSS Vector: (CVSS:3.1/AV:N/AC:H/PR:H/UI:N/S:U/C:H/I:H/A:H).",73,vulnerability mysql connectors product oracle mysql component connectorj supported versions affected prior difficult exploit vulnerability allows high privileged attacker network access via multiple protocols compromise mysql connectors successful attacks vulnerability result takeover mysql connectors cvss base score confidentiality integrity availability impacts cvss vector cvssavnachprhuinsyouchihah,"['vulnerability', 'mysql', 'connectors', 'product', 'oracle', 'mysql', 'component', 'connectorj', 'supported', 'versions', 'affected', 'prior', 'difficult', 'exploit', 'vulnerability', 'allows', 'high', 'privileged', 'attacker', 'network', 'access', 'via', 'multiple', 'protocols', 'compromise', 'mysql', 'connectors', 'successful', 'attacks', 'vulnerability', 'result', 'takeover', 'mysql', 'connectors', 'cvss', 'base', 'score', 'confidentiality', 'integrity', 'availability', 'impacts', 'cvss', 'vector', 'cvssavnachprhuinsyouchihah']"
393,393,22.015198,12.569242,4.3,"An issue in protobuf-java allowed the interleaving of com.google.protobuf.UnknownFieldSet fields in such a way that would be processed out of order. A small malicious payload can occupy the parser for several minutes by creating large numbers of short-lived objects that cause frequent, repeated pauses. We recommend upgrading libraries beyond the vulnerable versions.",74,issue protobufjava allowed interleaving comgoogleprotobufunknownfieldset fields way would processed order small malicious payload occupy parser several minutes creating large numbers shortlived objects frequent repeated pauses recommend upgrading libraries beyond versions,"['issue', 'protobufjava', 'allowed', 'interleaving', 'comgoogleprotobufunknownfieldset', 'fields', 'way', 'would', 'processed', 'order', 'small', 'malicious', 'payload', 'occupy', 'parser', 'several', 'minutes', 'creating', 'large', 'numbers', 'shortlived', 'objects', 'frequent', 'repeated', 'pauses', 'recommend', 'upgrading', 'libraries', 'beyond', 'versions']"
394,394,22.004234,12.58361,7.5,"A parsing issue similar to CVE-2022-3171, but with textformat in protobuf-java core and lite versions prior to 3.21.7, 3.20.3, 3.19.6 and 3.16.3 can lead to a denial of service attack. Inputs containing multiple instances of non-repeated embedded messages with repeated or unknown fields causes objects to be converted back-n-forth between mutable and immutable forms, resulting in potentially long garbage collection pauses. We recommend updating to the versions mentioned above.",74,parsing issue similar cve textformat protobufjava core lite versions prior lead denial service attack inputs containing multiple instances nonrepeated embedded messages repeated unknown fields causes objects converted backnforth mutable immutable forms resulting potentially long garbage collection pauses recommend updating versions mentioned,"['parsing', 'issue', 'similar', 'cve', 'textformat', 'protobufjava', 'core', 'lite', 'versions', 'prior', 'lead', 'denial', 'service', 'attack', 'inputs', 'containing', 'multiple', 'instances', 'nonrepeated', 'embedded', 'messages', 'repeated', 'unknown', 'fields', 'causes', 'objects', 'converted', 'backnforth', 'mutable', 'immutable', 'forms', 'resulting', 'potentially', 'long', 'garbage', 'collection', 'pauses', 'recommend', 'updating', 'versions', 'mentioned']"
395,395,11.296703,3.8020875,6.8,PostgreSQL JDBC Driver (aka PgJDBC) before 42.2.13 allows XXE.,75,postgresql jdbc driver aka pgjdbc allows xxe,"['postgresql', 'jdbc', 'driver', 'aka', 'pgjdbc', 'allows', 'xxe']"
396,396,11.348421,2.928639,7.5,"pgjdbc is the offical PostgreSQL JDBC Driver. A security hole was found in the jdbc driver for postgresql database while doing security research. The system using the postgresql library will be attacked when attacker control the jdbc url or properties. pgjdbc instantiates plugin instances based on class names provided via `authenticationPluginClassName`, `sslhostnameverifier`, `socketFactory`, `sslfactory`, `sslpasswordcallback` connection properties. However, the driver did not verify if the class implements the expected interface before instantiating the class. This can lead to code execution loaded via arbitrary classes. Users using plugins are advised to upgrade. There are no known workarounds for this issue.",75,pgjdbc offical postgresql jdbc driver security hole jdbc driver postgresql database security research system using postgresql library attacked attacker control jdbc url properties pgjdbc instantiates plugin instances based class names provided via authenticationpluginclassname sslhostnameverifier socketfactory sslfactory sslpasswordcallback connection properties however driver verify class implements expected interface instantiating class lead code execution loaded via arbitrary classes users using plugins advised upgrade known workarounds issue,"['pgjdbc', 'offical', 'postgresql', 'jdbc', 'driver', 'security', 'hole', 'jdbc', 'driver', 'postgresql', 'database', 'security', 'research', 'system', 'using', 'postgresql', 'library', 'attacked', 'attacker', 'control', 'jdbc', 'url', 'properties', 'pgjdbc', 'instantiates', 'plugin', 'instances', 'based', 'class', 'names', 'provided', 'via', 'authenticationpluginclassname', 'sslhostnameverifier', 'socketfactory', 'sslfactory', 'sslpasswordcallback', 'connection', 'properties', 'however', 'driver', 'verify', 'class', 'implements', 'expected', 'interface', 'instantiating', 'class', 'lead', 'code', 'execution', 'loaded', 'via', 'arbitrary', 'classes', 'users', 'using', 'plugins', 'advised', 'upgrade', 'known', 'workarounds', 'issue']"
397,397,11.733246,2.6079826,7.5,"** DISPUTED ** In pgjdbc before 42.3.3, an attacker (who controls the jdbc URL or properties) can call java.util.logging.FileHandler to write to arbitrary files through the loggerFile and loggerLevel connection properties. An example situation is that an attacker could create an executable JSP file under a Tomcat web root. NOTE: the vendor's position is that there is no pgjdbc vulnerability; instead, it is a vulnerability for any application to use the pgjdbc driver with untrusted connection properties.",75,disputed pgjdbc attacker controls jdbc url properties call javautilloggingfilehandler write arbitrary files loggerfile loggerlevel connection properties example situation attacker could create executable jsp file tomcat web root note vendors position pgjdbc vulnerability instead vulnerability application use pgjdbc driver connection properties,"['disputed', 'pgjdbc', 'attacker', 'controls', 'jdbc', 'url', 'properties', 'call', 'javautilloggingfilehandler', 'write', 'arbitrary', 'files', 'loggerfile', 'loggerlevel', 'connection', 'properties', 'example', 'situation', 'attacker', 'could', 'create', 'executable', 'jsp', 'file', 'tomcat', 'web', 'root', 'note', 'vendors', 'position', 'pgjdbc', 'vulnerability', 'instead', 'vulnerability', 'application', 'use', 'pgjdbc', 'driver', 'connection', 'properties']"
398,398,11.6491,2.166434,5.5,"pgjdbc is an open source postgresql JDBC Driver. In affected versions a prepared statement using either `PreparedStatement.setText(int, InputStream)` or `PreparedStatemet.setBytea(int, InputStream)` will create a temporary file if the InputStream is larger than 2k. This will create a temporary file which is readable by other users on Unix like systems, but not MacOS. On Unix like systems, the system's temporary directory is shared between all users on that system. Because of this, when files and directories are written into this directory they are, by default, readable by other users on that same system. This vulnerability does not allow other users to overwrite the contents of these directories or files. This is purely an information disclosure vulnerability. Because certain JDK file system APIs were only added in JDK 1.7, this this fix is dependent upon the version of the JDK you are using. Java 1.7 and higher users: this vulnerability is fixed in 4.5.0. Java 1.6 and lower users: no patch is available. If you are unable to patch, or are stuck running on Java 1.6, specifying the java.io.tmpdir system environment variable to a directory that is exclusively owned by the executing user will mitigate this vulnerability.",75,pgjdbc open source postgresql jdbc driver affected versions prepared statement using either preparedstatementsettextint inputstream preparedstatemetsetbyteaint inputstream create temporary file inputstream larger create temporary file readable users unix like systems macos unix like systems systems temporary directory shared users system files directories written directory default readable users system vulnerability allow users overwrite contents directories files purely information disclosure vulnerability certain jdk file system apis added jdk fix dependent upon version jdk using java higher users vulnerability fixed java lower users patch available unable patch stuck running java specifying javaiotmpdir system environment variable directory exclusively owned executing user mitigate vulnerability,"['pgjdbc', 'open', 'source', 'postgresql', 'jdbc', 'driver', 'affected', 'versions', 'prepared', 'statement', 'using', 'either', 'preparedstatementsettextint', 'inputstream', 'preparedstatemetsetbyteaint', 'inputstream', 'create', 'temporary', 'file', 'inputstream', 'larger', 'create', 'temporary', 'file', 'readable', 'users', 'unix', 'like', 'systems', 'macos', 'unix', 'like', 'systems', 'systems', 'temporary', 'directory', 'shared', 'users', 'system', 'files', 'directories', 'written', 'directory', 'default', 'readable', 'users', 'system', 'vulnerability', 'allow', 'users', 'overwrite', 'contents', 'directories', 'files', 'purely', 'information', 'disclosure', 'vulnerability', 'certain', 'jdk', 'file', 'system', 'apis', 'added', 'jdk', 'fix', 'dependent', 'upon', 'version', 'jdk', 'using', 'java', 'higher', 'users', 'vulnerability', 'fixed', 'java', 'lower', 'users', 'patch', 'available', 'unable', 'patch', 'stuck', 'running', 'java', 'specifying', 'javaiotmpdir', 'system', 'environment', 'variable', 'directory', 'exclusively', 'owned', 'executing', 'user', 'mitigate', 'vulnerability']"
399,399,10.719606,1.9159256,8.0,"PostgreSQL JDBC Driver (PgJDBC for short) allows Java programs to connect to a PostgreSQL database using standard, database independent Java code. The PGJDBC implementation of the `java.sql.ResultRow.refreshRow()` method is not performing escaping of column names so a malicious column name that contains a statement terminator, e.g. `;`, could lead to SQL injection. This could lead to executing additional SQL commands as the application's JDBC user. User applications that do not invoke the `ResultSet.refreshRow()` method are not impacted. User application that do invoke that method are impacted if the underlying database that they are querying via their JDBC application may be under the control of an attacker. The attack requires the attacker to trick the user into executing SQL against a table name who's column names would contain the malicious SQL and subsequently invoke the `refreshRow()` method on the ResultSet. Note that the application's JDBC user and the schema owner need not be the same. A JDBC application that executes as a privileged user querying database schemas owned by potentially malicious less-privileged users would be vulnerable. In that situation it may be possible for the malicious user to craft a schema that causes the application to execute commands as the privileged user. Patched versions will be released as `42.2.26` and `42.4.1`. Users are advised to upgrade. There are no known workarounds for this issue.",75,postgresql jdbc driver pgjdbc short allows java programs connect postgresql database using standard database independent java code pgjdbc implementation javasqlresultrowrefreshrow method performing escaping column names malicious column name contains statement terminator eg could lead sql injection could lead executing additional sql commands applications jdbc user user applications invoke resultsetrefreshrow method impacted user application invoke method impacted underlying database querying via jdbc application may control attacker attack requires attacker trick user executing sql table name column names would contain malicious sql subsequently invoke refreshrow method resultset note applications jdbc user schema owner need jdbc application executes privileged user querying database schemas owned potentially malicious lessprivileged users would situation may possible malicious user craft schema causes application execute commands privileged user patched versions released users advised upgrade known workarounds issue,"['postgresql', 'jdbc', 'driver', 'pgjdbc', 'short', 'allows', 'java', 'programs', 'connect', 'postgresql', 'database', 'using', 'standard', 'database', 'independent', 'java', 'code', 'pgjdbc', 'implementation', 'javasqlresultrowrefreshrow', 'method', 'performing', 'escaping', 'column', 'names', 'malicious', 'column', 'name', 'contains', 'statement', 'terminator', 'eg', 'could', 'lead', 'sql', 'injection', 'could', 'lead', 'executing', 'additional', 'sql', 'commands', 'applications', 'jdbc', 'user', 'user', 'applications', 'invoke', 'resultsetrefreshrow', 'method', 'impacted', 'user', 'application', 'invoke', 'method', 'impacted', 'underlying', 'database', 'querying', 'via', 'jdbc', 'application', 'may', 'control', 'attacker', 'attack', 'requires', 'attacker', 'trick', 'user', 'executing', 'sql', 'table', 'name', 'column', 'names', 'would', 'contain', 'malicious', 'sql', 'subsequently', 'invoke', 'refreshrow', 'method', 'resultset', 'note', 'applications', 'jdbc', 'user', 'schema', 'owner', 'need', 'jdbc', 'application', 'executes', 'privileged', 'user', 'querying', 'database', 'schemas', 'owned', 'potentially', 'malicious', 'lessprivileged', 'users', 'would', 'situation', 'may', 'possible', 'malicious', 'user', 'craft', 'schema', 'causes', 'application', 'execute', 'commands', 'privileged', 'user', 'patched', 'versions', 'released', 'users', 'advised', 'upgrade', 'known', 'workarounds', 'issue']"
400,400,19.77022,-5.0133,6.4,"Apache Maven will follow repositories that are defined in a dependency’s Project Object Model (pom) which may be surprising to some users, resulting in potential risk if a malicious actor takes over that repository or is able to insert themselves into a position to pretend to be that repository. Maven is changing the default behavior in 3.8.1+ to no longer follow http (non-SSL) repository references by default. More details available in the referenced urls. If you are currently using a repository manager to govern the repositories used by your builds, you are unaffected by the risks present in the legacy behavior, and are unaffected by this vulnerability and change to default behavior. See this link for more information about repository management: https://maven.apache.org/repository-management.html",69,apache maven follow repositories defined dependencys project object model pom may surprising users resulting potential risk malicious actor takes repository able insert position pretend repository maven changing default behavior longer follow http nonssl repository references default details available referenced urls currently using repository manager govern repositories used builds unaffected risks present legacy behavior unaffected vulnerability change default behavior see link information repository management,"['apache', 'maven', 'follow', 'repositories', 'defined', 'dependencys', 'project', 'object', 'model', 'pom', 'may', 'surprising', 'users', 'resulting', 'potential', 'risk', 'malicious', 'actor', 'takes', 'repository', 'able', 'insert', 'position', 'pretend', 'repository', 'maven', 'changing', 'default', 'behavior', 'longer', 'follow', 'http', 'nonssl', 'repository', 'references', 'default', 'details', 'available', 'referenced', 'urls', 'currently', 'using', 'repository', 'manager', 'govern', 'repositories', 'used', 'builds', 'unaffected', 'risks', 'present', 'legacy', 'behavior', 'unaffected', 'vulnerability', 'change', 'default', 'behavior', 'see', 'link', 'information', 'repository', 'management']"
401,401,-5.7217174,14.22662,5.0,"jsoup is a Java library for working with HTML. Those using jsoup versions prior to 1.14.2 to parse untrusted HTML or XML may be vulnerable to DOS attacks. If the parser is run on user supplied input, an attacker may supply content that causes the parser to get stuck (loop indefinitely until cancelled), to complete more slowly than usual, or to throw an unexpected exception. This effect may support a denial of service attack. The issue is patched in version 1.14.2. There are a few available workarounds. Users may rate limit input parsing, limit the size of inputs based on system resources, and/or implement thread watchdogs to cap and timeout parse runtimes.",17,jsoup java library working html using jsoup versions prior parse html xml may dos attacks parser run user supplied input attacker may supply content causes parser get stuck loop indefinitely cancelled complete slowly usual throw unexpected exception effect may support denial service attack issue patched version available workarounds users may rate limit input parsing limit size inputs based system resources andor implement thread watchdogs cap timeout parse runtimes,"['jsoup', 'java', 'library', 'working', 'html', 'using', 'jsoup', 'versions', 'prior', 'parse', 'html', 'xml', 'may', 'dos', 'attacks', 'parser', 'run', 'user', 'supplied', 'input', 'attacker', 'may', 'supply', 'content', 'causes', 'parser', 'get', 'stuck', 'loop', 'indefinitely', 'cancelled', 'complete', 'slowly', 'usual', 'throw', 'unexpected', 'exception', 'effect', 'may', 'support', 'denial', 'service', 'attack', 'issue', 'patched', 'version', 'available', 'workarounds', 'users', 'may', 'rate', 'limit', 'input', 'parsing', 'limit', 'size', 'inputs', 'based', 'system', 'resources', 'andor', 'implement', 'thread', 'watchdogs', 'cap', 'timeout', 'parse', 'runtimes']"
402,402,-5.8354363,13.985241,6.1,"jsoup is a Java HTML parser, built for HTML editing, cleaning, scraping, and cross-site scripting (XSS) safety. jsoup may incorrectly sanitize HTML including `javascript:` URL expressions, which could allow XSS attacks when a reader subsequently clicks that link. If the non-default `SafeList.preserveRelativeLinks` option is enabled, HTML including `javascript:` URLs that have been crafted with control characters will not be sanitized. If the site that this HTML is published on does not set a Content Security Policy, an XSS attack is then possible. This issue is patched in jsoup 1.15.3. Users should upgrade to this version. Additionally, as the unsanitized input may have been persisted, old content should be cleaned again using the updated version. To remediate this issue without immediately upgrading: - disable `SafeList.preserveRelativeLinks`, which will rewrite input URLs as absolute URLs - ensure an appropriate [Content Security Policy](https://developer.mozilla.org/en-US/docs/Web/HTTP/CSP) is defined. (This should be used regardless of upgrading, as a defence-in-depth best practice.)",17,jsoup java html parser built html editing cleaning scraping crosssite scripting xss safety jsoup may incorrectly sanitize html including javascript url expressions could allow xss attacks reader subsequently clicks link nondefault safelistpreserverelativelinks option enabled html including javascript urls crafted control characters sanitized site html published set content security policy xss attack possible issue patched jsoup users upgrade version additionally unsanitized input may persisted old content cleaned using updated version remediate issue without immediately upgrading disable safelistpreserverelativelinks rewrite input urls absolute urls ensure appropriate content security policy defined used regardless upgrading defenceindepth best practice,"['jsoup', 'java', 'html', 'parser', 'built', 'html', 'editing', 'cleaning', 'scraping', 'crosssite', 'scripting', 'xss', 'safety', 'jsoup', 'may', 'incorrectly', 'sanitize', 'html', 'including', 'javascript', 'url', 'expressions', 'could', 'allow', 'xss', 'attacks', 'reader', 'subsequently', 'clicks', 'link', 'nondefault', 'safelistpreserverelativelinks', 'option', 'enabled', 'html', 'including', 'javascript', 'urls', 'crafted', 'control', 'characters', 'sanitized', 'site', 'html', 'published', 'set', 'content', 'security', 'policy', 'xss', 'attack', 'possible', 'issue', 'patched', 'jsoup', 'users', 'upgrade', 'version', 'additionally', 'unsanitized', 'input', 'may', 'persisted', 'old', 'content', 'cleaned', 'using', 'updated', 'version', 'remediate', 'issue', 'without', 'immediately', 'upgrading', 'disable', 'safelistpreserverelativelinks', 'rewrite', 'input', 'urls', 'absolute', 'urls', 'ensure', 'appropriate', 'content', 'security', 'policy', 'defined', 'used', 'regardless', 'upgrading', 'defenceindepth', 'best', 'practice']"
403,403,64.57153,20.435017,4.3,"When reading a specially crafted ZIP archive, the read method of Apache Commons Compress 1.7 to 1.17's ZipArchiveInputStream can fail to return the correct EOF indication after the end of the stream has been reached. When combined with a java.io.InputStreamReader this can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.",18,specially crafted zip archive read method apache commons ziparchiveinputstream fail return correct eof indication end stream reached combined javaioinputstreamreader lead infinite stream used mount denial service attack services use zip package,"['specially', 'crafted', 'zip', 'archive', 'read', 'method', 'apache', 'commons', 'ziparchiveinputstream', 'fail', 'return', 'correct', 'eof', 'indication', 'end', 'stream', 'reached', 'combined', 'javaioinputstreamreader', 'lead', 'infinite', 'stream', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'zip', 'package']"
404,404,75.276695,14.770462,5.0,"When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",19,specially crafted archive construction list codecs decompress entry result infinite loop could used mount denial service attack services use sevenz package,"['specially', 'crafted', 'archive', 'construction', 'list', 'codecs', 'decompress', 'entry', 'result', 'infinite', 'loop', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'sevenz', 'package']"
405,405,72.64785,15.636277,5.0,"When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",19,specially crafted archive made allocate large amounts memory finally leads memory error even small inputs could used mount denial service attack services use sevenz package,"['specially', 'crafted', 'archive', 'made', 'allocate', 'large', 'amounts', 'memory', 'finally', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'sevenz', 'package']"
406,406,69.184685,17.461636,5.0,"When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",20,specially crafted tar archive made allocate large amounts memory finally leads memory error even small inputs could used mount denial service attack services use tar package,"['specially', 'crafted', 'tar', 'archive', 'made', 'allocate', 'large', 'amounts', 'memory', 'finally', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'tar', 'package']"
407,407,66.6755,16.041552,5.0,"When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",20,specially crafted zip archive made allocate large amounts memory finally leads memory error even small inputs could used mount denial service attack services use zip package,"['specially', 'crafted', 'zip', 'archive', 'made', 'allocate', 'large', 'amounts', 'memory', 'finally', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'zip', 'package']"
408,408,-9.12401,7.209949,5.0,"In the Jakarta Expression Language implementation 3.0.3 and earlier, a bug in the ELParserTokenManager enables invalid EL expressions to be evaluated as if they were valid.",17,jakarta expression language implementation earlier bug elparsertokenmanager enables invalid el expressions evaluated valid,"['jakarta', 'expression', 'language', 'implementation', 'earlier', 'bug', 'elparsertokenmanager', 'enables', 'invalid', 'el', 'expressions', 'evaluated', 'valid']"
409,409,29.552189,-7.3155937,4.0,A vulnerability in sshd-core of Apache Mina SSHD allows an attacker to overflow the server causing an OutOfMemory error. This issue affects the SFTP and port forwarding features of Apache Mina SSHD version 2.0.0 and later versions. It was addressed in Apache Mina SSHD 2.7.0,76,vulnerability sshdcore apache mina sshd allows attacker overflow server causing outofmemory error issue affects sftp port forwarding features apache mina sshd version later versions addressed apache mina sshd,"['vulnerability', 'sshdcore', 'apache', 'mina', 'sshd', 'allows', 'attacker', 'overflow', 'server', 'causing', 'outofmemory', 'error', 'issue', 'affects', 'sftp', 'port', 'forwarding', 'features', 'apache', 'mina', 'sshd', 'version', 'later', 'versions', 'addressed', 'apache', 'mina', 'sshd']"
410,410,29.59887,-7.244669,9.8,Class org.apache.sshd.server.keyprovider.SimpleGeneratorHostKeyProvider in Apache MINA SSHD <= 2.9.1 uses Java deserialization to load a serialized java.security.PrivateKey. The class is one of several implementations that an implementor using Apache MINA SSHD can choose for loading the host keys of an SSH server.,76,class orgapachesshdserverkeyprovidersimplegeneratorhostkeyprovider apache mina sshd uses java deserialization load serialized javasecurityprivatekey class one several implementations implementor using apache mina sshd choose loading host keys ssh server,"['class', 'orgapachesshdserverkeyprovidersimplegeneratorhostkeyprovider', 'apache', 'mina', 'sshd', 'uses', 'java', 'deserialization', 'load', 'serialized', 'javasecurityprivatekey', 'class', 'one', 'several', 'implementations', 'implementor', 'using', 'apache', 'mina', 'sshd', 'choose', 'loading', 'host', 'keys', 'ssh', 'server']"
411,411,25.263258,39.009613,5.8,"In Apache Commons IO before 2.7, When invoking the method FileNameUtils.normalize with an improper input string, like ""//../foo"", or ""\\..\foo"", the result would be the same value, thus possibly providing access to files in the parent directory, but not further above (thus ""limited"" path traversal), if the calling code would use the result to construct a path value.",4,apache commons io invoking method filenameutilsnormalize improper input string like foo foo result would value thus possibly providing access files parent directory thus limited path traversal calling code would use result construct path value,"['apache', 'commons', 'io', 'invoking', 'method', 'filenameutilsnormalize', 'improper', 'input', 'string', 'like', 'foo', 'foo', 'result', 'would', 'value', 'thus', 'possibly', 'providing', 'access', 'files', 'parent', 'directory', 'thus', 'limited', 'path', 'traversal', 'calling', 'code', 'would', 'use', 'result', 'construct', 'path', 'value']"
412,412,64.57574,20.435204,4.3,"When reading a specially crafted ZIP archive, the read method of Apache Commons Compress 1.7 to 1.17's ZipArchiveInputStream can fail to return the correct EOF indication after the end of the stream has been reached. When combined with a java.io.InputStreamReader this can lead to an infinite stream, which can be used to mount a denial of service attack against services that use Compress' zip package.",18,specially crafted zip archive read method apache commons ziparchiveinputstream fail return correct eof indication end stream reached combined javaioinputstreamreader lead infinite stream used mount denial service attack services use zip package,"['specially', 'crafted', 'zip', 'archive', 'read', 'method', 'apache', 'commons', 'ziparchiveinputstream', 'fail', 'return', 'correct', 'eof', 'indication', 'end', 'stream', 'reached', 'combined', 'javaioinputstreamreader', 'lead', 'infinite', 'stream', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'zip', 'package']"
413,413,65.46366,20.333565,4.3,A specially crafted ZIP archive can be used to cause an infinite loop inside of Apache Commons Compress' extra field parser used by the ZipFile and ZipArchiveInputStream classes in versions 1.11 to 1.15. This can be used to mount a denial of service attack against services that use Compress' zip package.,18,specially crafted zip archive used cause infinite loop inside apache commons extra field parser used zipfile ziparchiveinputstream classes versions used mount denial service attack services use zip package,"['specially', 'crafted', 'zip', 'archive', 'used', 'cause', 'infinite', 'loop', 'inside', 'apache', 'commons', 'extra', 'field', 'parser', 'used', 'zipfile', 'ziparchiveinputstream', 'classes', 'versions', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'zip', 'package']"
414,414,75.38182,15.024996,5.0,"When reading a specially crafted 7Z archive, the construction of the list of codecs that decompress an entry can result in an infinite loop. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",19,specially crafted archive construction list codecs decompress entry result infinite loop could used mount denial service attack services use sevenz package,"['specially', 'crafted', 'archive', 'construction', 'list', 'codecs', 'decompress', 'entry', 'result', 'infinite', 'loop', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'sevenz', 'package']"
415,415,72.60315,15.48409,5.0,"When reading a specially crafted 7Z archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' sevenz package.",19,specially crafted archive made allocate large amounts memory finally leads memory error even small inputs could used mount denial service attack services use sevenz package,"['specially', 'crafted', 'archive', 'made', 'allocate', 'large', 'amounts', 'memory', 'finally', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'sevenz', 'package']"
416,416,69.32644,17.272728,5.0,"When reading a specially crafted TAR archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' tar package.",20,specially crafted tar archive made allocate large amounts memory finally leads memory error even small inputs could used mount denial service attack services use tar package,"['specially', 'crafted', 'tar', 'archive', 'made', 'allocate', 'large', 'amounts', 'memory', 'finally', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'tar', 'package']"
417,417,66.67614,16.041588,5.0,"When reading a specially crafted ZIP archive, Compress can be made to allocate large amounts of memory that finally leads to an out of memory error even for very small inputs. This could be used to mount a denial of service attack against services that use Compress' zip package.",20,specially crafted zip archive made allocate large amounts memory finally leads memory error even small inputs could used mount denial service attack services use zip package,"['specially', 'crafted', 'zip', 'archive', 'made', 'allocate', 'large', 'amounts', 'memory', 'finally', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'could', 'used', 'mount', 'denial', 'service', 'attack', 'services', 'use', 'zip', 'package']"
418,418,33.52657,8.702777,2.1,"Apache Groovy provides extension methods to aid with creating temporary directories. Prior to this fix, Groovy's implementation of those extension methods was using a now superseded Java JDK method call that is potentially not secure on some operating systems in some contexts. Users not using the extension methods mentioned in the advisory are not affected, but may wish to read the advisory for further details. Versions Affected: 2.0 to 2.4.20, 2.5.0 to 2.5.13, 3.0.0 to 3.0.6, and 4.0.0-alpha-1. Fixed in versions 2.4.21, 2.5.14, 3.0.7, 4.0.0-alpha-2.",7,apache groovy provides extension methods aid creating temporary directories prior fix groovys implementation extension methods using superseded java jdk method call potentially secure operating systems contexts users using extension methods mentioned advisory affected may wish read advisory details versions affected alpha fixed versions alpha,"['apache', 'groovy', 'provides', 'extension', 'methods', 'aid', 'creating', 'temporary', 'directories', 'prior', 'fix', 'groovys', 'implementation', 'extension', 'methods', 'using', 'superseded', 'java', 'jdk', 'method', 'call', 'potentially', 'secure', 'operating', 'systems', 'contexts', 'users', 'using', 'extension', 'methods', 'mentioned', 'advisory', 'affected', 'may', 'wish', 'read', 'advisory', 'details', 'versions', 'affected', 'alpha', 'fixed', 'versions', 'alpha']"
419,419,1.7733723,40.74161,6.8,"HtmlUnit prior to 2.37.0 contains code execution vulnerabilities. HtmlUnit initializes Rhino engine improperly, hence a malicious JavScript code can execute arbitrary Java code on the application. Moreover, when embedded in Android application, Android-specific initialization of Rhino engine is done in an improper way, hence a malicious JavaScript code can execute arbitrary Java code on the application.",65,htmlunit prior contains code execution vulnerabilities htmlunit initializes rhino engine improperly hence malicious javscript code execute arbitrary java code application moreover embedded android application androidspecific initialization rhino engine done improper way hence malicious javascript code execute arbitrary java code application,"['htmlunit', 'prior', 'contains', 'code', 'execution', 'vulnerabilities', 'htmlunit', 'initializes', 'rhino', 'engine', 'improperly', 'hence', 'malicious', 'javscript', 'code', 'execute', 'arbitrary', 'java', 'code', 'application', 'moreover', 'embedded', 'android', 'application', 'androidspecific', 'initialization', 'rhino', 'engine', 'done', 'improper', 'way', 'hence', 'malicious', 'javascript', 'code', 'execute', 'arbitrary', 'java', 'code', 'application']"
420,420,-0.761261,40.204792,9.8,"Versions of the package net.sourceforge.htmlunit:htmlunit from 0 and before 3.0.0 are vulnerable to Remote Code Execution (RCE) via XSTL, when browsing the attacker’s webpage.",65,versions package netsourceforgehtmlunithtmlunit remote code execution rce via xstl browsing attackers webpage,"['versions', 'package', 'netsourceforgehtmlunithtmlunit', 'remote', 'code', 'execution', 'rce', 'via', 'xstl', 'browsing', 'attackers', 'webpage']"
421,421,0.76608366,38.924828,7.5,"Those using HtmlUnit to browse untrusted webpages may be vulnerable to Denial of service attacks (DoS). If HtmlUnit is running on user supplied web pages, an attacker may supply content that causes HtmlUnit to crash by a stack overflow. This effect may support a denial of service attack.This issue affects htmlunit before 2.70.0.",65,using htmlunit browse webpages may denial service attacks dos htmlunit running user supplied web pages attacker may supply content causes htmlunit crash stack overflow effect may support denial service attackthis issue affects htmlunit,"['using', 'htmlunit', 'browse', 'webpages', 'may', 'denial', 'service', 'attacks', 'dos', 'htmlunit', 'running', 'user', 'supplied', 'web', 'pages', 'attacker', 'may', 'supply', 'content', 'causes', 'htmlunit', 'crash', 'stack', 'overflow', 'effect', 'may', 'support', 'denial', 'service', 'attackthis', 'issue', 'affects', 'htmlunit']"
422,422,-1.3053743,20.766136,7.5,The Apache Xalan Java XSLT library is vulnerable to an integer truncation issue when processing malicious XSLT stylesheets. This can be used to corrupt Java class files generated by the internal XSLTC compiler and execute arbitrary Java bytecode. Users are recommended to update to version 2.7.3 or later. Note: Java runtimes (such as OpenJDK) include repackaged copies of Xalan.,66,apache xalan java xslt library integer truncation issue processing malicious xslt stylesheets used corrupt java class files generated internal xsltc compiler execute arbitrary java bytecode users recommended update version later note java runtimes openjdk include repackaged copies xalan,"['apache', 'xalan', 'java', 'xslt', 'library', 'integer', 'truncation', 'issue', 'processing', 'malicious', 'xslt', 'stylesheets', 'used', 'corrupt', 'java', 'class', 'files', 'generated', 'internal', 'xsltc', 'compiler', 'execute', 'arbitrary', 'java', 'bytecode', 'users', 'recommended', 'update', 'version', 'later', 'note', 'java', 'runtimes', 'openjdk', 'include', 'repackaged', 'copies', 'xalan']"
423,423,-1.1520405,36.956017,5.0,"Certain Neko-related HTML parsers allow a denial of service via crafted Processing Instruction (PI) input that causes excessive heap memory consumption. In particular, this issue exists in HtmlUnit-Neko through 2.26, and is fixed in 2.27. This issue also exists in CyberNeko HTML through 1.9.22 (also affecting OWASP AntiSamy before 1.6.6), but 1.9.22 is the last version of CyberNeko HTML. NOTE: this may be related to CVE-2022-24839.",65,certain nekorelated html parsers allow denial service via crafted processing instruction pi input causes excessive heap memory consumption particular issue exists htmlunitneko fixed issue also exists cyberneko html also affecting owasp antisamy last version cyberneko html note may related cve,"['certain', 'nekorelated', 'html', 'parsers', 'allow', 'denial', 'service', 'via', 'crafted', 'processing', 'instruction', 'pi', 'input', 'causes', 'excessive', 'heap', 'memory', 'consumption', 'particular', 'issue', 'exists', 'htmlunitneko', 'fixed', 'issue', 'also', 'exists', 'cyberneko', 'html', 'also', 'affecting', 'owasp', 'antisamy', 'last', 'version', 'cyberneko', 'html', 'note', 'may', 'related', 'cve']"
424,424,-1.0918225,37.049923,5.0,HtmlUnit NekoHtml Parser before 2.61.0 suffers from a denial of service vulnerability. Crafted input associated with the parsing of Processing Instruction (PI) data leads to heap memory consumption. This is similar to CVE-2022-28366 but affects a much later version of the product.,65,htmlunit nekohtml parser suffers denial service vulnerability crafted input associated parsing processing instruction pi data leads heap memory consumption similar cve affects much later version product,"['htmlunit', 'nekohtml', 'parser', 'suffers', 'denial', 'service', 'vulnerability', 'crafted', 'input', 'associated', 'parsing', 'processing', 'instruction', 'pi', 'data', 'leads', 'heap', 'memory', 'consumption', 'similar', 'cve', 'affects', 'much', 'later', 'version', 'product']"
425,425,2.9370735,21.03677,7.8,"Apache Xerces2 Java Parser before 2.12.0 allows remote attackers to cause a denial of service (CPU consumption) via a crafted message to an XML service, which triggers hash table collisions.",67,apache xerces java parser allows remote attackers cause denial service cpu consumption via crafted message xml service triggers hash table collisions,"['apache', 'xerces', 'java', 'parser', 'allows', 'remote', 'attackers', 'cause', 'denial', 'service', 'cpu', 'consumption', 'via', 'crafted', 'message', 'xml', 'service', 'triggers', 'hash', 'table', 'collisions']"
426,426,3.1906235,19.3692,7.1,"XMLscanner.java in Apache Xerces2 Java Parser before 2.12.0, as used in the Java Runtime Environment (JRE) in IBM Java 5.0 before 5.0 SR16-FP3, 6 before 6 SR14, 6.0.1 before 6.0.1 SR6, and 7 before 7 SR5 as well as Oracle Java SE 7u40 and earlier, Java SE 6u60 and earlier, Java SE 5.0u51 and earlier, JRockit R28.2.8 and earlier, JRockit R27.7.6 and earlier, Java SE Embedded 7u40 and earlier, and possibly other products allows remote attackers to cause a denial of service via vectors related to XML attribute names.",67,xmlscannerjava apache xerces java parser used java runtime environment jre ibm java srfp sr sr sr well oracle java se earlier java se earlier java se earlier jrockit earlier jrockit earlier java se embedded earlier possibly products allows remote attackers cause denial service via vectors related xml attribute names,"['xmlscannerjava', 'apache', 'xerces', 'java', 'parser', 'used', 'java', 'runtime', 'environment', 'jre', 'ibm', 'java', 'srfp', 'sr', 'sr', 'sr', 'well', 'oracle', 'java', 'se', 'earlier', 'java', 'se', 'earlier', 'java', 'se', 'earlier', 'jrockit', 'earlier', 'jrockit', 'earlier', 'java', 'se', 'embedded', 'earlier', 'possibly', 'products', 'allows', 'remote', 'attackers', 'cause', 'denial', 'service', 'via', 'vectors', 'related', 'xml', 'attribute', 'names']"
427,427,5.51072,21.505018,7.1,"There's a vulnerability within the Apache Xerces Java (XercesJ) XML parser when handling specially crafted XML document payloads. This causes, the XercesJ XML parser to wait in an infinite loop, which may sometimes consume system resources for prolonged duration. This vulnerability is present within XercesJ version 2.12.1 and the previous versions.",67,vulnerability within apache xerces java xercesj xml parser handling specially crafted xml document payloads causes xercesj xml parser wait infinite loop may sometimes consume system resources prolonged duration vulnerability present within xercesj version previous versions,"['vulnerability', 'within', 'apache', 'xerces', 'java', 'xercesj', 'xml', 'parser', 'handling', 'specially', 'crafted', 'xml', 'document', 'payloads', 'causes', 'xercesj', 'xml', 'parser', 'wait', 'infinite', 'loop', 'may', 'sometimes', 'consume', 'system', 'resources', 'prolonged', 'duration', 'vulnerability', 'present', 'within', 'xercesj', 'version', 'previous', 'versions']"
428,428,3.4703398,26.649635,5.9,"sonatype-2017-0348 - xerces:xercesImpl - Denial of Service (DoS) The software contains multiple threads or executable segments that are waiting for each other to release a necessary lock, resulting in deadlock.",68,sonatype xercesxercesimpl denial service dos software contains multiple threads executable segments waiting release necessary lock resulting deadlock,"['sonatype', 'xercesxercesimpl', 'denial', 'service', 'dos', 'software', 'contains', 'multiple', 'threads', 'executable', 'segments', 'waiting', 'release', 'necessary', 'lock', 'resulting', 'deadlock']"
429,429,-19.228607,-67.42379,7.5,"Jetty through 9.4.x is prone to a timing channel in util/security/Password.java, which makes it easier for remote attackers to obtain access by observing elapsed times before rejection of incorrect passwords.",42,jetty prone timing channel utilsecuritypasswordjava makes easier remote attackers obtain access observing elapsed times rejection incorrect passwords,"['jetty', 'prone', 'timing', 'channel', 'utilsecuritypasswordjava', 'makes', 'easier', 'remote', 'attackers', 'obtain', 'access', 'observing', 'elapsed', 'times', 'rejection', 'incorrect', 'passwords']"
430,430,21.431915,44.915306,5.0,"In Eclipse Jetty Server, all 9.x versions, on webapps deployed using default Error Handling, when an intentionally bad query arrives that doesn't match a dynamic url-pattern, and is eventually handled by the DefaultServlet's static file serving, the bad characters can trigger a java.nio.file.InvalidPathException which includes the full path to the base resource directory that the DefaultServlet and/or webapp is using. If this InvalidPathException is then handled by the default Error Handler, the InvalidPathException message is included in the error response, revealing the full server path to the requesting system.",33,eclipse jetty server versions webapps deployed using default error handling intentionally bad query arrives match dynamic urlpattern eventually handled defaultservlets static file serving bad characters trigger javaniofileinvalidpathexception includes full path base resource directory defaultservlet andor webapp using invalidpathexception handled default error handler invalidpathexception message included error response revealing full server path requesting system,"['eclipse', 'jetty', 'server', 'versions', 'webapps', 'deployed', 'using', 'default', 'error', 'handling', 'intentionally', 'bad', 'query', 'arrives', 'match', 'dynamic', 'urlpattern', 'eventually', 'handled', 'defaultservlets', 'static', 'file', 'serving', 'bad', 'characters', 'trigger', 'javaniofileinvalidpathexception', 'includes', 'full', 'path', 'base', 'resource', 'directory', 'defaultservlet', 'andor', 'webapp', 'using', 'invalidpathexception', 'handled', 'default', 'error', 'handler', 'invalidpathexception', 'message', 'included', 'error', 'response', 'revealing', 'full', 'server', 'path', 'requesting', 'system']"
431,431,-14.639714,25.58077,4.3,"In Eclipse Jetty version 9.2.26 and older, 9.3.25 and older, and 9.4.15 and older, the server is vulnerable to XSS conditions if a remote client USES a specially formatted URL against the DefaultServlet or ResourceHandler that is configured for showing a Listing of directory contents.",34,eclipse jetty version older older older server xss conditions remote client uses specially formatted url defaultservlet resourcehandler configured showing listing directory contents,"['eclipse', 'jetty', 'version', 'older', 'older', 'older', 'server', 'xss', 'conditions', 'remote', 'client', 'uses', 'specially', 'formatted', 'url', 'defaultservlet', 'resourcehandler', 'configured', 'showing', 'listing', 'directory', 'contents']"
432,432,42.711582,29.087172,5.0,"In Eclipse Jetty version 9.2.27, 9.3.26, and 9.4.16, the server running on Windows is vulnerable to exposure of the fully qualified Base Resource directory name on Windows to a remote client when it is configured for showing a Listing of directory contents. This information reveal is restricted to only the content in the configured base resource directories.",43,eclipse jetty version server running windows exposure fully qualified base resource directory name windows remote client configured showing listing directory contents information reveal restricted content configured base resource directories,"['eclipse', 'jetty', 'version', 'server', 'running', 'windows', 'exposure', 'fully', 'qualified', 'base', 'resource', 'directory', 'name', 'windows', 'remote', 'client', 'configured', 'showing', 'listing', 'directory', 'contents', 'information', 'reveal', 'restricted', 'content', 'configured', 'base', 'resource', 'directories']"
433,433,-33.020393,-41.382774,5.3,"Jetty is a java based web server and servlet engine. In affected versions servlets with multipart support (e.g. annotated with `@MultipartConfig`) that call `HttpServletRequest.getParameter()` or `HttpServletRequest.getParts()` may cause `OutOfMemoryError` when the client sends a multipart request with a part that has a name but no filename and very large content. This happens even with the default settings of `fileSizeThreshold=0` which should stream the whole part content to disk. An attacker client may send a large multipart request and cause the server to throw `OutOfMemoryError`. However, the server may be able to recover after the `OutOfMemoryError` and continue its service -- although it may take some time. This issue has been patched in versions 9.4.51, 10.0.14, and 11.0.14. Users are advised to upgrade. Users unable to upgrade may set the multipart parameter `maxRequestSize` which must be set to a non-negative value, so the whole multipart content is limited (although still read into memory).",37,jetty java based web server servlet engine affected versions servlets multipart support eg annotated multipartconfig call httpservletrequestgetparameter httpservletrequestgetparts may cause outofmemoryerror client sends multipart request part name filename large content happens even default settings filesizethreshold stream whole part content disk attacker client may send large multipart request server throw outofmemoryerror however server may able recover outofmemoryerror continue service although may take time issue patched versions users advised upgrade users unable upgrade may set multipart parameter maxrequestsize must set nonnegative value whole multipart content limited although still read memory,"['jetty', 'java', 'based', 'web', 'server', 'servlet', 'engine', 'affected', 'versions', 'servlets', 'multipart', 'support', 'eg', 'annotated', 'multipartconfig', 'call', 'httpservletrequestgetparameter', 'httpservletrequestgetparts', 'may', 'cause', 'outofmemoryerror', 'client', 'sends', 'multipart', 'request', 'part', 'name', 'filename', 'large', 'content', 'happens', 'even', 'default', 'settings', 'filesizethreshold', 'stream', 'whole', 'part', 'content', 'disk', 'attacker', 'client', 'may', 'send', 'large', 'multipart', 'request', 'server', 'throw', 'outofmemoryerror', 'however', 'server', 'may', 'able', 'recover', 'outofmemoryerror', 'continue', 'service', 'although', 'may', 'take', 'time', 'issue', 'patched', 'versions', 'users', 'advised', 'upgrade', 'users', 'unable', 'upgrade', 'may', 'set', 'multipart', 'parameter', 'maxrequestsize', 'must', 'set', 'nonnegative', 'value', 'whole', 'multipart', 'content', 'limited', 'although', 'still', 'read', 'memory']"
434,434,-23.21446,50.73064,7.8,"In Eclipse Jetty 7.2.2 to 9.4.38, 10.0.0.alpha0 to 10.0.1, and 11.0.0.alpha0 to 11.0.1, CPU usage can reach 100% upon receiving a large invalid TLS frame.",41,eclipse jetty alpha alpha cpu usage reach upon receiving large invalid tls frame,"['eclipse', 'jetty', 'alpha', 'alpha', 'cpu', 'usage', 'reach', 'upon', 'receiving', 'large', 'invalid', 'tls', 'frame']"
435,435,-39.688854,-14.109859,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
436,436,-35.537292,-20.091465,7.5,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), HTTP/0.9 is handled poorly. An HTTP/1 style request line (i.e. method space URI space version) that declares a version of HTTP/0.9 was accepted and treated as a 0.9 request. If deployed behind an intermediary that also accepted and passed through the 0.9 version (but did not act on it), then the response sent could be interpreted by the intermediary as HTTP/1 headers. This could be used to poison the cache if the server allowed the origin client to generate arbitrary content in the response.",47,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled http handled poorly http style request line ie method space uri space version declares version http accepted treated request deployed behind intermediary also accepted passed version act response sent could interpreted intermediary http headers could used poison cache server allowed origin client generate arbitrary content response,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'http', 'handled', 'poorly', 'http', 'style', 'request', 'line', 'ie', 'method', 'space', 'uri', 'space', 'version', 'declares', 'version', 'http', 'accepted', 'treated', 'request', 'deployed', 'behind', 'intermediary', 'also', 'accepted', 'passed', 'version', 'act', 'response', 'sent', 'could', 'interpreted', 'intermediary', 'http', 'headers', 'could', 'used', 'poison', 'cache', 'server', 'allowed', 'origin', 'client', 'generate', 'arbitrary', 'content', 'response']"
437,437,-35.12244,26.9452,9.8,"In Eclipse Jetty, versions 9.2.x and older, 9.3.x (all configurations), and 9.4.x (non-default configuration with RFC2616 compliance enabled), transfer-encoding chunks are handled poorly. The chunk length parsing was vulnerable to an integer overflow. Thus a large chunk size could be interpreted as a smaller chunk size and content sent as chunk body could be interpreted as a pipelined request. If Jetty was deployed behind an intermediary that imposed some authorization and that intermediary allowed arbitrarily large chunks to be passed on unchanged, then this flaw could be used to bypass the authorization imposed by the intermediary as the fake pipelined request would not be interpreted by the intermediary as a request.",39,eclipse jetty versions older configurations nondefault configuration rfc compliance enabled transferencoding chunks handled poorly chunk length parsing integer overflow thus large chunk size could interpreted smaller chunk size content sent chunk body could interpreted pipelined request jetty deployed behind intermediary imposed authorization intermediary allowed arbitrarily large chunks passed unchanged could used bypass authorization imposed intermediary fake pipelined request would interpreted intermediary request,"['eclipse', 'jetty', 'versions', 'older', 'configurations', 'nondefault', 'configuration', 'rfc', 'compliance', 'enabled', 'transferencoding', 'chunks', 'handled', 'poorly', 'chunk', 'length', 'parsing', 'integer', 'overflow', 'thus', 'large', 'chunk', 'size', 'could', 'interpreted', 'smaller', 'chunk', 'size', 'content', 'sent', 'chunk', 'body', 'could', 'interpreted', 'pipelined', 'request', 'jetty', 'deployed', 'behind', 'intermediary', 'imposed', 'authorization', 'intermediary', 'allowed', 'arbitrarily', 'large', 'chunks', 'passed', 'unchanged', 'could', 'used', 'bypass', 'authorization', 'imposed', 'intermediary', 'fake', 'pipelined', 'request', 'would', 'interpreted', 'intermediary', 'request']"
438,438,-33.04026,9.808159,9.8,"In Eclipse Jetty Server, versions 9.2.x and older, 9.3.x (all non HTTP/1.x configurations), and 9.4.x (all HTTP/1.x configurations), when presented with two content-lengths headers, Jetty ignored the second. When presented with a content-length and a chunked encoding header, the content-length was ignored (as per RFC 2616). If an intermediary decided on the shorter length, but still passed on the longer body, then body content could be interpreted by Jetty as a pipelined request. If the intermediary was imposing authorization, the fake pipelined request would bypass that authorization. Sonatype's research suggests that this CVE's details differ from those defined at NVD. See https://ossindex.sonatype.org/vulnerability/CVE-2017-7658 for details",40,eclipse jetty server versions older non httpx configurations httpx configurations presented two contentlengths headers jetty ignored second presented contentlength chunked encoding header contentlength ignored per rfc intermediary decided shorter length still passed longer body body content could interpreted jetty pipelined request intermediary imposing authorization fake pipelined request would bypass authorization sonatypes research suggests cves details differ defined nvd see details,"['eclipse', 'jetty', 'server', 'versions', 'older', 'non', 'httpx', 'configurations', 'httpx', 'configurations', 'presented', 'two', 'contentlengths', 'headers', 'jetty', 'ignored', 'second', 'presented', 'contentlength', 'chunked', 'encoding', 'header', 'contentlength', 'ignored', 'per', 'rfc', 'intermediary', 'decided', 'shorter', 'length', 'still', 'passed', 'longer', 'body', 'body', 'content', 'could', 'interpreted', 'jetty', 'pipelined', 'request', 'intermediary', 'imposing', 'authorization', 'fake', 'pipelined', 'request', 'would', 'bypass', 'authorization', 'sonatypes', 'research', 'suggests', 'cves', 'details', 'differ', 'defined', 'nvd', 'see', 'details']"
439,439,-37.852516,-10.954498,4.0,"In Eclipse Jetty versions 9.4.0 thru 9.4.46, and 10.0.0 thru 10.0.9, and 11.0.0 thru 11.0.9 versions, the parsing of the authority segment of an http scheme URI, the Jetty HttpURI class improperly detects an invalid input as a hostname. This can lead to failures in a Proxy scenario.",36,eclipse jetty versions thru thru thru versions parsing authority segment http scheme uri jetty httpuri class improperly detects invalid input hostname lead failures proxy scenario,"['eclipse', 'jetty', 'versions', 'thru', 'thru', 'thru', 'versions', 'parsing', 'authority', 'segment', 'http', 'scheme', 'uri', 'jetty', 'httpuri', 'class', 'improperly', 'detects', 'invalid', 'input', 'hostname', 'lead', 'failures', 'proxy', 'scenario']"
440,440,33.676285,-18.514885,4.3,** DISPUTED ** CertificatePinner.java in OkHttp 3.x through 3.12.0 allows man-in-the-middle attackers to bypass certificate pinning by changing SSLContext and the boolean values while hooking the application. NOTE: This id is disputed because some parties don't consider this is a vulnerability. Their rationale can be found in https://github.com/square/okhttp/issues/4967.,0,disputed certificatepinnerjava okhttp allows maninthemiddle attackers bypass certificate pinning changing sslcontext boolean values hooking application note id disputed parties consider vulnerability rationale,"['disputed', 'certificatepinnerjava', 'okhttp', 'allows', 'maninthemiddle', 'attackers', 'bypass', 'certificate', 'pinning', 'changing', 'sslcontext', 'boolean', 'values', 'hooking', 'application', 'note', 'id', 'disputed', 'parties', 'consider', 'vulnerability', 'rationale']"
441,441,33.636578,-17.519495,5.0,"In verifyHostName of OkHostnameVerifier.java, there is a possible way to accept a certificate for the wrong domain due to improperly used crypto. This could lead to remote information disclosure with no additional execution privileges needed. User interaction is not needed for exploitation.Product: AndroidVersions: Android-8.1 Android-9 Android-10 Android-11Android ID: A-171980069",0,verifyhostname okhostnameverifierjava possible way accept certificate wrong domain due improperly used crypto could lead remote information disclosure additional execution privileges needed user interaction needed exploitationproduct androidversions android android android androidandroid id,"['verifyhostname', 'okhostnameverifierjava', 'possible', 'way', 'accept', 'certificate', 'wrong', 'domain', 'due', 'improperly', 'used', 'crypto', 'could', 'lead', 'remote', 'information', 'disclosure', 'additional', 'execution', 'privileges', 'needed', 'user', 'interaction', 'needed', 'exploitationproduct', 'androidversions', 'android', 'android', 'android', 'androidandroid', 'id']"
442,442,25.366175,8.060293,5.0,"The package com.google.code.gson:gson before 2.8.9 are vulnerable to Deserialization of Untrusted Data via the writeReplace() method in internal classes, which may lead to DoS attacks.",22,package comgooglecodegsongson deserialization data via writereplace method internal classes may lead dos attacks,"['package', 'comgooglecodegsongson', 'deserialization', 'data', 'via', 'writereplace', 'method', 'internal', 'classes', 'may', 'lead', 'dos', 'attacks']"
443,443,5.5987754,-15.283505,7.5,"Apache Commons BeanUtils, as distributed in lib/commons-beanutils-1.8.0.jar in Apache Struts 1.x through 1.3.10 and in other products requiring commons-beanutils through 1.9.2, does not suppress the class property, which allows remote attackers to ""manipulate"" the ClassLoader and execute arbitrary code via the class parameter, as demonstrated by the passing of this parameter to the getClass method of the ActionForm object in Struts 1.",71,apache commons beanutils distributed libcommonsbeanutilsjar apache struts products requiring commonsbeanutils suppress class property allows remote attackers manipulate classloader execute arbitrary code via class parameter demonstrated passing parameter getclass method actionform object struts,"['apache', 'commons', 'beanutils', 'distributed', 'libcommonsbeanutilsjar', 'apache', 'struts', 'products', 'requiring', 'commonsbeanutils', 'suppress', 'class', 'property', 'allows', 'remote', 'attackers', 'manipulate', 'classloader', 'execute', 'arbitrary', 'code', 'via', 'class', 'parameter', 'demonstrated', 'passing', 'parameter', 'getclass', 'method', 'actionform', 'object', 'struts']"
444,444,5.814518,-15.410695,7.5,"In Apache Commons Beanutils 1.9.2, a special BeanIntrospector class was added which allows suppressing the ability for an attacker to access the classloader via the class property available on all Java objects. We, however were not using this by default characteristic of the PropertyUtilsBean.",71,apache commons beanutils special beanintrospector class added allows suppressing ability attacker access classloader via class property available java objects however using default characteristic propertyutilsbean,"['apache', 'commons', 'beanutils', 'special', 'beanintrospector', 'class', 'added', 'allows', 'suppressing', 'ability', 'attacker', 'access', 'classloader', 'via', 'class', 'property', 'available', 'java', 'objects', 'however', 'using', 'default', 'characteristic', 'propertyutilsbean']"
445,445,-42.34457,43.66804,5.0,"In Spring Framework versions 5.3.0 - 5.3.18, 5.2.0 - 5.2.20, and older unsupported versions, the patterns for disallowedFields on a DataBinder are case sensitive which means a field is not effectively protected unless it is listed with both upper and lower case for the first character of the field, including upper and lower case for the first character of all nested fields within the property path.",53,spring framework versions older unsupported versions patterns disallowedfields databinder case sensitive means field effectively protected unless listed upper lower case first character field including upper lower case first character nested fields within property path,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'patterns', 'disallowedfields', 'databinder', 'case', 'sensitive', 'means', 'field', 'effectively', 'protected', 'unless', 'listed', 'upper', 'lower', 'case', 'first', 'character', 'field', 'including', 'upper', 'lower', 'case', 'first', 'character', 'nested', 'fields', 'within', 'property', 'path']"
446,446,-19.609331,-11.427416,6.5,Spring Framework version 5.0.5 when used in combination with any versions of Spring Security contains an authorization bypass when using method security. An unauthorized malicious user can gain unauthorized access to methods that should be restricted.,51,spring framework version used combination versions spring security contains authorization bypass using method security unauthorized malicious user gain unauthorized access methods restricted,"['spring', 'framework', 'version', 'used', 'combination', 'versions', 'spring', 'security', 'contains', 'authorization', 'bypass', 'using', 'method', 'security', 'unauthorized', 'malicious', 'user', 'gain', 'unauthorized', 'access', 'methods', 'restricted']"
447,447,3.0384235,-21.904411,7.5,"A Spring MVC or Spring WebFlux application running on JDK 9+ may be vulnerable to remote code execution (RCE) via data binding. The specific exploit requires the application to run on Tomcat as a WAR deployment. If the application is deployed as a Spring Boot executable jar, i.e. the default, it is not vulnerable to the exploit. However, the nature of the vulnerability is more general, and there may be other ways to exploit it.",52,spring mvc spring webflux application running jdk may remote code execution rce via data binding specific exploit requires application run tomcat war deployment application deployed spring boot executable jar ie default exploit however nature vulnerability general may ways exploit,"['spring', 'mvc', 'spring', 'webflux', 'application', 'running', 'jdk', 'may', 'remote', 'code', 'execution', 'rce', 'via', 'data', 'binding', 'specific', 'exploit', 'requires', 'application', 'run', 'tomcat', 'war', 'deployment', 'application', 'deployed', 'spring', 'boot', 'executable', 'jar', 'ie', 'default', 'exploit', 'however', 'nature', 'vulnerability', 'general', 'may', 'ways', 'exploit']"
448,448,-18.521467,-30.204466,4.0,"Spring Framework, versions 5.0.x prior to 5.0.6, versions 4.3.x prior to 4.3.17, and older unsupported versions allows applications to expose STOMP over WebSocket endpoints with a simple, in-memory STOMP broker through the spring-messaging module. A malicious user (or attacker) can craft a message to the broker that can lead to a regular expression, denial of service attack.",54,spring framework versions prior versions prior older unsupported versions allows applications expose stomp websocket endpoints simple inmemory stomp broker springmessaging module malicious user attacker craft message broker lead regular expression denial service attack,"['spring', 'framework', 'versions', 'prior', 'versions', 'prior', 'older', 'unsupported', 'versions', 'allows', 'applications', 'expose', 'stomp', 'websocket', 'endpoints', 'simple', 'inmemory', 'stomp', 'broker', 'springmessaging', 'module', 'malicious', 'user', 'attacker', 'craft', 'message', 'broker', 'lead', 'regular', 'expression', 'denial', 'service', 'attack']"
449,449,-10.1453,77.21159,4.0,"n Spring Framework versions 5.3.0 - 5.3.16 and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial of service condition.",55,spring framework versions older unsupported versions possible user provide specially crafted spel expression may cause denial service condition,"['spring', 'framework', 'versions', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denial', 'service', 'condition']"
450,450,-58.58555,-26.207155,6.5,"In Spring Framework versions 6.0.0 - 6.0.6, 5.3.0 - 5.3.25, 5.2.0.RELEASE - 5.2.22.RELEASE, and older unsupported versions, it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",56,spring framework versions release release older unsupported versions possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'release', 'release', 'older', 'unsupported', 'versions', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
451,451,-2.2835088,55.552822,6.5,"In spring framework versions prior to 5.2.24 release+ ,5.3.27+ and 6.0.8+ , it is possible for a user to provide a specially crafted SpEL expression that may cause a denial-of-service (DoS) condition.",57,spring framework versions prior release possible user provide specially crafted spel expression may cause denialofservice dos condition,"['spring', 'framework', 'versions', 'prior', 'release', 'possible', 'user', 'provide', 'specially', 'crafted', 'spel', 'expression', 'may', 'cause', 'denialofservice', 'dos', 'condition']"
452,452,63.55695,15.778083,3.3,Apache Ant 1.1 to 1.9.14 and 1.10.0 to 1.10.7 uses the default temporary directory identified by the Java system property java.io.tmpdir for several tasks and may thus leak sensitive information. The fixcrlf and replaceregexp tasks also copy files from the temporary directory back into the build tree allowing an attacker to inject modified source files into the build process.,20,apache ant uses default temporary directory identified java system property javaiotmpdir several tasks may thus leak sensitive information fixcrlf replaceregexp tasks also copy files temporary directory back build tree allowing attacker inject modified source files build process,"['apache', 'ant', 'uses', 'default', 'temporary', 'directory', 'identified', 'java', 'system', 'property', 'javaiotmpdir', 'several', 'tasks', 'may', 'thus', 'leak', 'sensitive', 'information', 'fixcrlf', 'replaceregexp', 'tasks', 'also', 'copy', 'files', 'temporary', 'directory', 'back', 'build', 'tree', 'allowing', 'attacker', 'inject', 'modified', 'source', 'files', 'build', 'process']"
453,453,64.559586,15.966885,4.3,"When reading a specially crafted ZIP archive, or a derived formats, an Apache Ant build can be made to allocate large amounts of memory that leads to an out of memory error, even for small inputs. This can be used to disrupt builds using Apache Ant. Commonly used derived formats from ZIP archives are for instance JAR files and many office files. Apache Ant prior to 1.9.16 and 1.10.11 were affected.",20,specially crafted zip archive derived formats apache ant build made allocate large amounts memory leads memory error even small inputs used disrupt builds using apache ant commonly used derived formats zip archives instance jar files many office files apache ant prior affected,"['specially', 'crafted', 'zip', 'archive', 'derived', 'formats', 'apache', 'ant', 'build', 'made', 'allocate', 'large', 'amounts', 'memory', 'leads', 'memory', 'error', 'even', 'small', 'inputs', 'used', 'disrupt', 'builds', 'using', 'apache', 'ant', 'commonly', 'used', 'derived', 'formats', 'zip', 'archives', 'instance', 'jar', 'files', 'many', 'office', 'files', 'apache', 'ant', 'prior', 'affected']"
